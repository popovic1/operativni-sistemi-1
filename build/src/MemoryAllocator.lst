GAS LISTING /tmp/cceEUo9g.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator8allocateEm
   9              	_ZN15MemoryAllocator8allocateEm:
  10              	.LFB5:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   2:src/MemoryAllocator.cpp **** 
   3:src/MemoryAllocator.cpp **** Block *MemoryAllocator::free_list = nullptr;
   4:src/MemoryAllocator.cpp **** Block *MemoryAllocator::allocated_list = nullptr;
   5:src/MemoryAllocator.cpp **** 
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** // Allocate memory
   8:src/MemoryAllocator.cpp **** void *MemoryAllocator::allocate(size_t size) {
  12              		.loc 1 8 46
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21 000c 13060500 		mv	a2,a0
   9:src/MemoryAllocator.cpp ****     size_t sizeToAllocate = size * MEM_BLOCK_SIZE;
  22              		.loc 1 9 5
  23              		.loc 1 9 12 is_stmt 0
  24 0010 13176500 		slli	a4,a0,6
  25              	.LVL1:
  10:src/MemoryAllocator.cpp **** 
  11:src/MemoryAllocator.cpp ****     Block *prev = nullptr;
  26              		.loc 1 11 5 is_stmt 1
  12:src/MemoryAllocator.cpp ****     Block *current = free_list;
  27              		.loc 1 12 5
  28              		.loc 1 12 12 is_stmt 0
  29 0014 17050000 		ld	a0,.LANCHOR0
  29      03350500 
  30              	.LVL2:
  11:src/MemoryAllocator.cpp ****     Block *current = free_list;
  31              		.loc 1 11 12
  32 001c 93060000 		li	a3,0
  33              	.LVL3:
  34              	.L11:
  13:src/MemoryAllocator.cpp **** 
  14:src/MemoryAllocator.cpp ****     // Find a free block that is large enough
  15:src/MemoryAllocator.cpp ****     while (current != nullptr) {
  35              		.loc 1 15 5 is_stmt 1
  36              		.loc 1 15 20
  37 0020 630E0506 		beqz	a0,.L1
  38              	.LBB2:
  16:src/MemoryAllocator.cpp **** 
  17:src/MemoryAllocator.cpp ****         if (current->size >= sizeToAllocate) {
  39              		.loc 1 17 9
GAS LISTING /tmp/cceEUo9g.s 			page 2


  40              	.LBB3:
  41              		.loc 1 17 22 is_stmt 0
  42 0024 83370500 		ld	a5,0(a0)
  43              		.loc 1 17 9
  44 0028 63F8E700 		bgeu	a5,a4,.L13
  45              	.LBE3:
  18:src/MemoryAllocator.cpp ****             // Found a block, remove it from the free list
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp **** 
  21:src/MemoryAllocator.cpp ****             if (prev == nullptr) {
  22:src/MemoryAllocator.cpp ****                 free_list = current->next;
  23:src/MemoryAllocator.cpp ****             } else {
  24:src/MemoryAllocator.cpp ****                 prev->next = current->next;
  25:src/MemoryAllocator.cpp ****             }
  26:src/MemoryAllocator.cpp **** 
  27:src/MemoryAllocator.cpp ****             // Check if block is too big
  28:src/MemoryAllocator.cpp ****             if (current->size - sizeToAllocate >= MEM_BLOCK_SIZE) {
  29:src/MemoryAllocator.cpp **** 
  30:src/MemoryAllocator.cpp **** 
  31:src/MemoryAllocator.cpp ****                 Block *newBlock = (Block *) ((uint64 *) current + sizeToAllocate);
  32:src/MemoryAllocator.cpp ****                 newBlock->size = current->size - sizeToAllocate;
  33:src/MemoryAllocator.cpp ****                 current->size = sizeToAllocate;
  34:src/MemoryAllocator.cpp ****                 if (!free_list) {
  35:src/MemoryAllocator.cpp ****                     free_list = newBlock;
  36:src/MemoryAllocator.cpp ****                     newBlock->next = nullptr;
  37:src/MemoryAllocator.cpp ****                 } else if (!prev) {
  38:src/MemoryAllocator.cpp ****                     newBlock->next = free_list;
  39:src/MemoryAllocator.cpp ****                     free_list = newBlock;
  40:src/MemoryAllocator.cpp ****                 } else {
  41:src/MemoryAllocator.cpp ****                     prev->next = newBlock;
  42:src/MemoryAllocator.cpp ****                     newBlock->next = current->next;
  43:src/MemoryAllocator.cpp ****                 }
  44:src/MemoryAllocator.cpp **** 
  45:src/MemoryAllocator.cpp **** 
  46:src/MemoryAllocator.cpp ****             }
  47:src/MemoryAllocator.cpp ****             //add block to allocated list
  48:src/MemoryAllocator.cpp ****             if (!allocated_list) {
  49:src/MemoryAllocator.cpp ****                 allocated_list = current;
  50:src/MemoryAllocator.cpp ****                 allocated_list->next = nullptr;
  51:src/MemoryAllocator.cpp ****             } else {
  52:src/MemoryAllocator.cpp ****                 current->next = allocated_list;
  53:src/MemoryAllocator.cpp ****                 allocated_list = current;
  54:src/MemoryAllocator.cpp ****             }
  55:src/MemoryAllocator.cpp **** 
  56:src/MemoryAllocator.cpp ****             // Return the memory
  57:src/MemoryAllocator.cpp **** 
  58:src/MemoryAllocator.cpp ****             void *userPtr = (char *) ((uint64 *) current + sizeof(Block));
  59:src/MemoryAllocator.cpp ****             return userPtr;
  60:src/MemoryAllocator.cpp ****         }
  61:src/MemoryAllocator.cpp ****         prev = current;
  46              		.loc 1 61 9 is_stmt 1
  47              	.LVL4:
  62:src/MemoryAllocator.cpp ****         current = current->next;
  48              		.loc 1 62 9
  61:src/MemoryAllocator.cpp ****         current = current->next;
  49              		.loc 1 61 14 is_stmt 0
  50 002c 93060500 		mv	a3,a0
GAS LISTING /tmp/cceEUo9g.s 			page 3


  51              		.loc 1 62 17
  52 0030 03358500 		ld	a0,8(a0)
  53              	.LVL5:
  54              	.LBE2:
  15:src/MemoryAllocator.cpp **** 
  55              		.loc 1 15 5
  56 0034 6FF0DFFE 		j	.L11
  57              	.L13:
  58              	.LBB12:
  59              	.LBB10:
  60              	.LBB4:
  21:src/MemoryAllocator.cpp ****                 free_list = current->next;
  61              		.loc 1 21 13 is_stmt 1
  62 0038 63880606 		beqz	a3,.L14
  24:src/MemoryAllocator.cpp ****             }
  63              		.loc 1 24 17
  24:src/MemoryAllocator.cpp ****             }
  64              		.loc 1 24 39 is_stmt 0
  65 003c 83378500 		ld	a5,8(a0)
  24:src/MemoryAllocator.cpp ****             }
  66              		.loc 1 24 28
  67 0040 23B4F600 		sd	a5,8(a3)
  68              	.L5:
  28:src/MemoryAllocator.cpp **** 
  69              		.loc 1 28 13 is_stmt 1
  70              	.LBB5:
  28:src/MemoryAllocator.cpp **** 
  71              		.loc 1 28 26 is_stmt 0
  72 0044 83370500 		ld	a5,0(a0)
  28:src/MemoryAllocator.cpp **** 
  73              		.loc 1 28 31
  74 0048 B387E740 		sub	a5,a5,a4
  28:src/MemoryAllocator.cpp **** 
  75              		.loc 1 28 13
  76 004c 9305F003 		li	a1,63
  77 0050 63F8F502 		bleu	a5,a1,.L6
  78              	.LBB6:
  31:src/MemoryAllocator.cpp ****                 newBlock->size = current->size - sizeToAllocate;
  79              		.loc 1 31 17 is_stmt 1
  31:src/MemoryAllocator.cpp ****                 newBlock->size = current->size - sizeToAllocate;
  80              		.loc 1 31 65 is_stmt 0
  81 0054 13169600 		slli	a2,a2,9
  82              	.LVL6:
  31:src/MemoryAllocator.cpp ****                 newBlock->size = current->size - sizeToAllocate;
  83              		.loc 1 31 24
  84 0058 3306C500 		add	a2,a0,a2
  85              	.LVL7:
  32:src/MemoryAllocator.cpp ****                 current->size = sizeToAllocate;
  86              		.loc 1 32 17 is_stmt 1
  32:src/MemoryAllocator.cpp ****                 current->size = sizeToAllocate;
  87              		.loc 1 32 32 is_stmt 0
  88 005c 2330F600 		sd	a5,0(a2)
  33:src/MemoryAllocator.cpp ****                 if (!free_list) {
  89              		.loc 1 33 17 is_stmt 1
  33:src/MemoryAllocator.cpp ****                 if (!free_list) {
  90              		.loc 1 33 31 is_stmt 0
  91 0060 2330E500 		sd	a4,0(a0)
GAS LISTING /tmp/cceEUo9g.s 			page 4


  34:src/MemoryAllocator.cpp ****                     free_list = newBlock;
  92              		.loc 1 34 17 is_stmt 1
  34:src/MemoryAllocator.cpp ****                     free_list = newBlock;
  93              		.loc 1 34 21 is_stmt 0
  94 0064 97070000 		ld	a5,.LANCHOR0
  94      83B70700 
  34:src/MemoryAllocator.cpp ****                     free_list = newBlock;
  95              		.loc 1 34 17
  96 006c 63860704 		beqz	a5,.L15
  37:src/MemoryAllocator.cpp ****                     newBlock->next = free_list;
  97              		.loc 1 37 24 is_stmt 1
  98 0070 638C0604 		beqz	a3,.L16
  41:src/MemoryAllocator.cpp ****                     newBlock->next = current->next;
  99              		.loc 1 41 21
  41:src/MemoryAllocator.cpp ****                     newBlock->next = current->next;
 100              		.loc 1 41 32 is_stmt 0
 101 0074 23B4C600 		sd	a2,8(a3)
  42:src/MemoryAllocator.cpp ****                 }
 102              		.loc 1 42 21 is_stmt 1
  42:src/MemoryAllocator.cpp ****                 }
 103              		.loc 1 42 47 is_stmt 0
 104 0078 83378500 		ld	a5,8(a0)
  42:src/MemoryAllocator.cpp ****                 }
 105              		.loc 1 42 36
 106 007c 2334F600 		sd	a5,8(a2)
 107              	.LVL8:
 108              	.L6:
 109              	.LBE6:
 110              	.LBE5:
  48:src/MemoryAllocator.cpp ****                 allocated_list = current;
 111              		.loc 1 48 13 is_stmt 1
  48:src/MemoryAllocator.cpp ****                 allocated_list = current;
 112              		.loc 1 48 17 is_stmt 0
 113 0080 97070000 		ld	a5,.LANCHOR0+8
 113      83B70700 
  48:src/MemoryAllocator.cpp ****                 allocated_list = current;
 114              		.loc 1 48 13
 115 0088 63880704 		beqz	a5,.L17
  52:src/MemoryAllocator.cpp ****                 allocated_list = current;
 116              		.loc 1 52 17 is_stmt 1
  52:src/MemoryAllocator.cpp ****                 allocated_list = current;
 117              		.loc 1 52 31 is_stmt 0
 118 008c 2334F500 		sd	a5,8(a0)
  53:src/MemoryAllocator.cpp ****             }
 119              		.loc 1 53 17 is_stmt 1
  53:src/MemoryAllocator.cpp ****             }
 120              		.loc 1 53 32 is_stmt 0
 121 0090 97070000 		sd	a0,.LANCHOR0+8,a5
 121      23B0A700 
 122              	.L10:
  58:src/MemoryAllocator.cpp ****             return userPtr;
 123              		.loc 1 58 13 is_stmt 1
  58:src/MemoryAllocator.cpp ****             return userPtr;
 124              		.loc 1 58 19 is_stmt 0
 125 0098 13050508 		addi	a0,a0,128
 126              	.LVL9:
  59:src/MemoryAllocator.cpp ****         }
GAS LISTING /tmp/cceEUo9g.s 			page 5


 127              		.loc 1 59 13 is_stmt 1
 128              	.L1:
 129              	.LBE4:
 130              	.LBE10:
 131              	.LBE12:
  63:src/MemoryAllocator.cpp ****     }
  64:src/MemoryAllocator.cpp **** 
  65:src/MemoryAllocator.cpp ****     // No block was found
  66:src/MemoryAllocator.cpp ****     return nullptr;
  67:src/MemoryAllocator.cpp **** }
 132              		.loc 1 67 1 is_stmt 0
 133 009c 03348100 		ld	s0,8(sp)
 134              		.cfi_remember_state
 135              		.cfi_restore 8
 136              		.cfi_def_cfa 2, 16
 137 00a0 13010101 		addi	sp,sp,16
 138              		.cfi_def_cfa_offset 0
 139 00a4 67800000 		jr	ra
 140              	.LVL10:
 141              	.L14:
 142              		.cfi_restore_state
 143              	.LBB13:
 144              	.LBB11:
 145              	.LBB9:
  22:src/MemoryAllocator.cpp ****             } else {
 146              		.loc 1 22 17 is_stmt 1
  22:src/MemoryAllocator.cpp ****             } else {
 147              		.loc 1 22 38 is_stmt 0
 148 00a8 83378500 		ld	a5,8(a0)
  22:src/MemoryAllocator.cpp ****             } else {
 149              		.loc 1 22 27
 150 00ac 97050000 		sd	a5,.LANCHOR0,a1
 150      23B0F500 
 151 00b4 6FF01FF9 		j	.L5
 152              	.LVL11:
 153              	.L15:
 154              	.LBB8:
 155              	.LBB7:
  35:src/MemoryAllocator.cpp ****                     newBlock->next = nullptr;
 156              		.loc 1 35 21 is_stmt 1
  35:src/MemoryAllocator.cpp ****                     newBlock->next = nullptr;
 157              		.loc 1 35 31 is_stmt 0
 158 00b8 97070000 		sd	a2,.LANCHOR0,a5
 158      23B0C700 
  36:src/MemoryAllocator.cpp ****                 } else if (!prev) {
 159              		.loc 1 36 21 is_stmt 1
  36:src/MemoryAllocator.cpp ****                 } else if (!prev) {
 160              		.loc 1 36 36 is_stmt 0
 161 00c0 23340600 		sd	zero,8(a2)
 162 00c4 6FF0DFFB 		j	.L6
 163              	.L16:
  38:src/MemoryAllocator.cpp ****                     free_list = newBlock;
 164              		.loc 1 38 21 is_stmt 1
  38:src/MemoryAllocator.cpp ****                     free_list = newBlock;
 165              		.loc 1 38 36 is_stmt 0
 166 00c8 2334F600 		sd	a5,8(a2)
  39:src/MemoryAllocator.cpp ****                 } else {
GAS LISTING /tmp/cceEUo9g.s 			page 6


 167              		.loc 1 39 21 is_stmt 1
  39:src/MemoryAllocator.cpp ****                 } else {
 168              		.loc 1 39 31 is_stmt 0
 169 00cc 97070000 		sd	a2,.LANCHOR0,a5
 169      23B0C700 
 170 00d4 6FF0DFFA 		j	.L6
 171              	.LVL12:
 172              	.L17:
 173              	.LBE7:
 174              	.LBE8:
  49:src/MemoryAllocator.cpp ****                 allocated_list->next = nullptr;
 175              		.loc 1 49 17 is_stmt 1
  49:src/MemoryAllocator.cpp ****                 allocated_list->next = nullptr;
 176              		.loc 1 49 32 is_stmt 0
 177 00d8 97070000 		sd	a0,.LANCHOR0+8,a5
 177      23B0A700 
  50:src/MemoryAllocator.cpp ****             } else {
 178              		.loc 1 50 17 is_stmt 1
  50:src/MemoryAllocator.cpp ****             } else {
 179              		.loc 1 50 38 is_stmt 0
 180 00e0 23340500 		sd	zero,8(a0)
 181 00e4 6FF05FFB 		j	.L10
 182              	.LBE9:
 183              	.LBE11:
 184              	.LBE13:
 185              		.cfi_endproc
 186              	.LFE5:
 188              		.align	2
 189              		.globl	_ZN15MemoryAllocator10deallocateEPv
 191              	_ZN15MemoryAllocator10deallocateEPv:
 192              	.LFB6:
  68:src/MemoryAllocator.cpp **** 
  69:src/MemoryAllocator.cpp **** // Deallocate memory
  70:src/MemoryAllocator.cpp **** int MemoryAllocator::deallocate(void *ptr) {
 193              		.loc 1 70 44 is_stmt 1
 194              		.cfi_startproc
 195              	.LVL13:
 196 00e8 130101FF 		addi	sp,sp,-16
 197              		.cfi_def_cfa_offset 16
 198 00ec 23348100 		sd	s0,8(sp)
 199              		.cfi_offset 8, -8
 200 00f0 13040101 		addi	s0,sp,16
 201              		.cfi_def_cfa 8, 0
  71:src/MemoryAllocator.cpp ****     Block *block = (Block *) ((uint64 *) ptr - sizeof(Block));
 202              		.loc 1 71 5
 203              		.loc 1 71 12 is_stmt 0
 204 00f4 130705F8 		addi	a4,a0,-128
 205              	.LVL14:
  72:src/MemoryAllocator.cpp ****     Block *tmpPrev = nullptr;
 206              		.loc 1 72 5 is_stmt 1
  73:src/MemoryAllocator.cpp ****     Block *tmp = allocated_list;
 207              		.loc 1 73 5
 208              		.loc 1 73 12 is_stmt 0
 209 00f8 97070000 		ld	a5,.LANCHOR0+8
 209      83B70700 
 210              	.LVL15:
  74:src/MemoryAllocator.cpp ****     uint8 flag = 0;
GAS LISTING /tmp/cceEUo9g.s 			page 7


 211              		.loc 1 74 5 is_stmt 1
  72:src/MemoryAllocator.cpp ****     Block *tmpPrev = nullptr;
 212              		.loc 1 72 12 is_stmt 0
 213 0100 93060000 		li	a3,0
 214              	.LVL16:
 215              	.L20:
  75:src/MemoryAllocator.cpp **** 
  76:src/MemoryAllocator.cpp ****     //Check if the block given was previously allocated
  77:src/MemoryAllocator.cpp ****     while (tmp) {
 216              		.loc 1 77 5 is_stmt 1
 217              		.loc 1 77 12
 218 0104 638A0700 		beqz	a5,.L30
  78:src/MemoryAllocator.cpp ****         if (tmp == block) {
 219              		.loc 1 78 9
 220 0108 6382E704 		beq	a5,a4,.L31
  79:src/MemoryAllocator.cpp ****             flag = 1;
  80:src/MemoryAllocator.cpp ****             break;
  81:src/MemoryAllocator.cpp ****         }
  82:src/MemoryAllocator.cpp ****         tmpPrev = tmp;
 221              		.loc 1 82 9
 222              	.LVL17:
  83:src/MemoryAllocator.cpp ****         tmp = tmp->next;
 223              		.loc 1 83 9
  82:src/MemoryAllocator.cpp ****         tmp = tmp->next;
 224              		.loc 1 82 17 is_stmt 0
 225 010c 93860700 		mv	a3,a5
 226              		.loc 1 83 13
 227 0110 83B78700 		ld	a5,8(a5)
 228              	.LVL18:
  77:src/MemoryAllocator.cpp ****         if (tmp == block) {
 229              		.loc 1 77 5
 230 0114 6FF01FFF 		j	.L20
 231              	.L30:
  74:src/MemoryAllocator.cpp **** 
 232              		.loc 1 74 11
 233 0118 13060000 		li	a2,0
 234              	.L19:
 235              	.LVL19:
  84:src/MemoryAllocator.cpp ****     }
  85:src/MemoryAllocator.cpp ****     if (flag == 0) return -1;
 236              		.loc 1 85 5 is_stmt 1
 237 011c 6302060E 		beqz	a2,.L32
  86:src/MemoryAllocator.cpp **** 
  87:src/MemoryAllocator.cpp ****     // Found a block, remove it from the allocated list
  88:src/MemoryAllocator.cpp ****     if (tmpPrev != nullptr) {
 238              		.loc 1 88 5
 239 0120 638A0602 		beqz	a3,.L22
  89:src/MemoryAllocator.cpp ****         tmpPrev->next = tmp->next;
 240              		.loc 1 89 9
 241              		.loc 1 89 30 is_stmt 0
 242 0124 83B78700 		ld	a5,8(a5)
 243              	.LVL20:
 244              		.loc 1 89 23
 245 0128 23B4F600 		sd	a5,8(a3)
 246              	.LVL21:
 247              	.L23:
  90:src/MemoryAllocator.cpp ****     } else {
GAS LISTING /tmp/cceEUo9g.s 			page 8


  91:src/MemoryAllocator.cpp ****         allocated_list = tmp->next;
  92:src/MemoryAllocator.cpp ****     }
  93:src/MemoryAllocator.cpp **** 
  94:src/MemoryAllocator.cpp **** 
  95:src/MemoryAllocator.cpp ****     Block *prev = nullptr;
 248              		.loc 1 95 5 is_stmt 1
  96:src/MemoryAllocator.cpp ****     Block *current = free_list;
 249              		.loc 1 96 5
 250              		.loc 1 96 12 is_stmt 0
 251 012c 97070000 		ld	a5,.LANCHOR0
 251      83B70700 
 252              	.LVL22:
  95:src/MemoryAllocator.cpp ****     Block *current = free_list;
 253              		.loc 1 95 12
 254 0134 93060000 		li	a3,0
 255              	.LVL23:
 256              	.L27:
  97:src/MemoryAllocator.cpp **** 
  98:src/MemoryAllocator.cpp ****     // Add it to the free_list
  99:src/MemoryAllocator.cpp ****     while (current != nullptr) {
 257              		.loc 1 99 5 is_stmt 1
 258              		.loc 1 99 20
 259 0138 638C0702 		beqz	a5,.L24
 100:src/MemoryAllocator.cpp ****         if ((uint64 *) block < (uint64 *) current) {
 260              		.loc 1 100 9
 261 013c 6364F702 		bgtu	a5,a4,.L36
 101:src/MemoryAllocator.cpp ****             // Insert the block in the right place
 102:src/MemoryAllocator.cpp ****             block->next = current;
 103:src/MemoryAllocator.cpp ****             if (prev != nullptr) {
 104:src/MemoryAllocator.cpp ****                 prev->next = block;
 105:src/MemoryAllocator.cpp ****             } else {
 106:src/MemoryAllocator.cpp ****                 free_list = block;
 107:src/MemoryAllocator.cpp ****             }
 108:src/MemoryAllocator.cpp ****             break;
 109:src/MemoryAllocator.cpp ****         }
 110:src/MemoryAllocator.cpp ****         prev = current;
 262              		.loc 1 110 9
 263              	.LVL24:
 111:src/MemoryAllocator.cpp ****         current = current->next;
 264              		.loc 1 111 9
 110:src/MemoryAllocator.cpp ****         current = current->next;
 265              		.loc 1 110 14 is_stmt 0
 266 0140 93860700 		mv	a3,a5
 267              		.loc 1 111 17
 268 0144 83B78700 		ld	a5,8(a5)
 269              	.LVL25:
  99:src/MemoryAllocator.cpp ****         if ((uint64 *) block < (uint64 *) current) {
 270              		.loc 1 99 5
 271 0148 6FF01FFF 		j	.L27
 272              	.LVL26:
 273              	.L31:
  79:src/MemoryAllocator.cpp ****             break;
 274              		.loc 1 79 18
 275 014c 13061000 		li	a2,1
 276 0150 6FF0DFFC 		j	.L19
 277              	.LVL27:
 278              	.L22:
GAS LISTING /tmp/cceEUo9g.s 			page 9


  91:src/MemoryAllocator.cpp ****     }
 279              		.loc 1 91 9 is_stmt 1
  91:src/MemoryAllocator.cpp ****     }
 280              		.loc 1 91 31 is_stmt 0
 281 0154 83B78700 		ld	a5,8(a5)
 282              	.LVL28:
  91:src/MemoryAllocator.cpp ****     }
 283              		.loc 1 91 24
 284 0158 97060000 		sd	a5,.LANCHOR0+8,a3
 284      23B0F600 
 285              	.LVL29:
 286 0160 6FF0DFFC 		j	.L23
 287              	.LVL30:
 288              	.L36:
 102:src/MemoryAllocator.cpp ****             if (prev != nullptr) {
 289              		.loc 1 102 13 is_stmt 1
 102:src/MemoryAllocator.cpp ****             if (prev != nullptr) {
 290              		.loc 1 102 25 is_stmt 0
 291 0164 2334F5F8 		sd	a5,-120(a0)
 103:src/MemoryAllocator.cpp ****                 prev->next = block;
 292              		.loc 1 103 13 is_stmt 1
 293 0168 63840604 		beqz	a3,.L26
 104:src/MemoryAllocator.cpp ****             } else {
 294              		.loc 1 104 17
 104:src/MemoryAllocator.cpp ****             } else {
 295              		.loc 1 104 28 is_stmt 0
 296 016c 23B4E600 		sd	a4,8(a3)
 297              	.LVL31:
 298              	.L24:
 112:src/MemoryAllocator.cpp ****     }
 113:src/MemoryAllocator.cpp ****     if (current == nullptr) {
 299              		.loc 1 113 5 is_stmt 1
 300 0170 63860704 		beqz	a5,.L37
 301              	.L28:
 114:src/MemoryAllocator.cpp ****         // Add the block at the end of the list
 115:src/MemoryAllocator.cpp ****         prev->next = block;
 116:src/MemoryAllocator.cpp ****         //current = block;
 117:src/MemoryAllocator.cpp ****         block->next = nullptr;
 118:src/MemoryAllocator.cpp ****     }
 119:src/MemoryAllocator.cpp **** 
 120:src/MemoryAllocator.cpp ****     //Merge it with neighbour blocks if possible
 121:src/MemoryAllocator.cpp ****     if (prev != nullptr) {
 302              		.loc 1 121 5
 303 0174 638A0600 		beqz	a3,.L29
 122:src/MemoryAllocator.cpp ****         if ((uint64 *) prev + prev->size == (uint64 *) block) {
 304              		.loc 1 122 9
 305              		.loc 1 122 37 is_stmt 0
 306 0178 03B60600 		ld	a2,0(a3)
 307              		.loc 1 122 29
 308 017c 93173600 		slli	a5,a2,3
 309              	.LVL32:
 310 0180 B387F600 		add	a5,a3,a5
 311              		.loc 1 122 9
 312 0184 6382E704 		beq	a5,a4,.L38
 313              	.L29:
 123:src/MemoryAllocator.cpp ****             // Merge block with previous
 124:src/MemoryAllocator.cpp ****             prev->size = prev->size + block->size;
GAS LISTING /tmp/cceEUo9g.s 			page 10


 125:src/MemoryAllocator.cpp ****             prev->next = block->next;
 126:src/MemoryAllocator.cpp ****             block = prev;
 127:src/MemoryAllocator.cpp ****         }
 128:src/MemoryAllocator.cpp ****     }
 129:src/MemoryAllocator.cpp ****     if (block->next != nullptr) {
 314              		.loc 1 129 5 is_stmt 1
 315              		.loc 1 129 16 is_stmt 0
 316 0188 83378700 		ld	a5,8(a4)
 317              		.loc 1 129 5
 318 018c 638E0706 		beqz	a5,.L33
 130:src/MemoryAllocator.cpp ****         if ((uint64 *) block + block->size == (uint64 *) block->next) {
 319              		.loc 1 130 9 is_stmt 1
 320              		.loc 1 130 39 is_stmt 0
 321 0190 03360700 		ld	a2,0(a4)
 322              		.loc 1 130 30
 323 0194 93163600 		slli	a3,a2,3
 324              	.LVL33:
 325 0198 B306D700 		add	a3,a4,a3
 326              		.loc 1 130 9
 327 019c 6384D704 		beq	a5,a3,.L39
 131:src/MemoryAllocator.cpp ****             // Merge block with next
 132:src/MemoryAllocator.cpp ****             block->size += block->next->size;
 133:src/MemoryAllocator.cpp ****             block->next = block->next->next;
 134:src/MemoryAllocator.cpp ****         }
 135:src/MemoryAllocator.cpp ****     }
 136:src/MemoryAllocator.cpp **** 
 137:src/MemoryAllocator.cpp ****     return 0;
 328              		.loc 1 137 12
 329 01a0 13050000 		li	a0,0
 330              	.LVL34:
 331              	.L21:
 138:src/MemoryAllocator.cpp **** 
 139:src/MemoryAllocator.cpp **** }
 332              		.loc 1 139 1
 333 01a4 03348100 		ld	s0,8(sp)
 334              		.cfi_remember_state
 335              		.cfi_restore 8
 336              		.cfi_def_cfa 2, 16
 337 01a8 13010101 		addi	sp,sp,16
 338              		.cfi_def_cfa_offset 0
 339 01ac 67800000 		jr	ra
 340              	.LVL35:
 341              	.L26:
 342              		.cfi_restore_state
 106:src/MemoryAllocator.cpp ****             }
 343              		.loc 1 106 17 is_stmt 1
 106:src/MemoryAllocator.cpp ****             }
 344              		.loc 1 106 27 is_stmt 0
 345 01b0 17060000 		sd	a4,.LANCHOR0,a2
 345      2330E600 
 346              	.LVL36:
 347 01b8 6FF09FFB 		j	.L24
 348              	.L37:
 115:src/MemoryAllocator.cpp ****         //current = block;
 349              		.loc 1 115 9 is_stmt 1
 115:src/MemoryAllocator.cpp ****         //current = block;
 350              		.loc 1 115 20 is_stmt 0
GAS LISTING /tmp/cceEUo9g.s 			page 11


 351 01bc 23B4E600 		sd	a4,8(a3)
 117:src/MemoryAllocator.cpp ****     }
 352              		.loc 1 117 9 is_stmt 1
 117:src/MemoryAllocator.cpp ****     }
 353              		.loc 1 117 21 is_stmt 0
 354 01c0 233405F8 		sd	zero,-120(a0)
 355 01c4 6FF01FFB 		j	.L28
 356              	.LVL37:
 357              	.L38:
 124:src/MemoryAllocator.cpp ****             prev->next = block->next;
 358              		.loc 1 124 13 is_stmt 1
 124:src/MemoryAllocator.cpp ****             prev->next = block->next;
 359              		.loc 1 124 46 is_stmt 0
 360 01c8 833705F8 		ld	a5,-128(a0)
 124:src/MemoryAllocator.cpp ****             prev->next = block->next;
 361              		.loc 1 124 37
 362 01cc 3306F600 		add	a2,a2,a5
 124:src/MemoryAllocator.cpp ****             prev->next = block->next;
 363              		.loc 1 124 24
 364 01d0 23B0C600 		sd	a2,0(a3)
 125:src/MemoryAllocator.cpp ****             block = prev;
 365              		.loc 1 125 13 is_stmt 1
 125:src/MemoryAllocator.cpp ****             block = prev;
 366              		.loc 1 125 33 is_stmt 0
 367 01d4 833785F8 		ld	a5,-120(a0)
 125:src/MemoryAllocator.cpp ****             block = prev;
 368              		.loc 1 125 24
 369 01d8 23B4F600 		sd	a5,8(a3)
 126:src/MemoryAllocator.cpp ****         }
 370              		.loc 1 126 13 is_stmt 1
 371              	.LVL38:
 126:src/MemoryAllocator.cpp ****         }
 372              		.loc 1 126 19 is_stmt 0
 373 01dc 13870600 		mv	a4,a3
 374 01e0 6FF09FFA 		j	.L29
 375              	.LVL39:
 376              	.L39:
 132:src/MemoryAllocator.cpp ****             block->next = block->next->next;
 377              		.loc 1 132 13 is_stmt 1
 132:src/MemoryAllocator.cpp ****             block->next = block->next->next;
 378              		.loc 1 132 41 is_stmt 0
 379 01e4 83B60700 		ld	a3,0(a5)
 132:src/MemoryAllocator.cpp ****             block->next = block->next->next;
 380              		.loc 1 132 25
 381 01e8 3306D600 		add	a2,a2,a3
 382 01ec 2330C700 		sd	a2,0(a4)
 133:src/MemoryAllocator.cpp ****         }
 383              		.loc 1 133 13 is_stmt 1
 133:src/MemoryAllocator.cpp ****         }
 384              		.loc 1 133 40 is_stmt 0
 385 01f0 83B78700 		ld	a5,8(a5)
 133:src/MemoryAllocator.cpp ****         }
 386              		.loc 1 133 25
 387 01f4 2334F700 		sd	a5,8(a4)
 137:src/MemoryAllocator.cpp **** 
 388              		.loc 1 137 12
 389 01f8 13050000 		li	a0,0
GAS LISTING /tmp/cceEUo9g.s 			page 12


 390              	.LVL40:
 391 01fc 6FF09FFA 		j	.L21
 392              	.LVL41:
 393              	.L32:
  85:src/MemoryAllocator.cpp **** 
 394              		.loc 1 85 28
 395 0200 1305F0FF 		li	a0,-1
 396              	.LVL42:
 397 0204 6FF01FFA 		j	.L21
 398              	.LVL43:
 399              	.L33:
 137:src/MemoryAllocator.cpp **** 
 400              		.loc 1 137 12
 401 0208 13050000 		li	a0,0
 402              	.LVL44:
 403 020c 6FF09FF9 		j	.L21
 404              		.cfi_endproc
 405              	.LFE6:
 407              		.globl	_ZN15MemoryAllocator14allocated_listE
 408              		.globl	_ZN15MemoryAllocator9free_listE
 409              		.bss
 410              		.align	3
 411              		.set	.LANCHOR0,. + 0
 414              	_ZN15MemoryAllocator9free_listE:
 415 0000 00000000 		.zero	8
 415      00000000 
 418              	_ZN15MemoryAllocator14allocated_listE:
 419 0008 00000000 		.zero	8
 419      00000000 
 420              		.text
 421              	.Letext0:
 422              		.file 2 "src/../h/../lib/hw.h"
 423              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/cceEUo9g.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/cceEUo9g.s:9      .text:0000000000000000 _ZN15MemoryAllocator8allocateEm
     /tmp/cceEUo9g.s:13     .text:0000000000000000 .L0 
     /tmp/cceEUo9g.s:15     .text:0000000000000000 .L0 
     /tmp/cceEUo9g.s:16     .text:0000000000000004 .L0 
     /tmp/cceEUo9g.s:18     .text:0000000000000008 .L0 
     /tmp/cceEUo9g.s:20     .text:000000000000000c .L0 
     /tmp/cceEUo9g.s:23     .text:0000000000000010 .L0 
     /tmp/cceEUo9g.s:24     .text:0000000000000010 .L0 
     /tmp/cceEUo9g.s:27     .text:0000000000000014 .L0 
     /tmp/cceEUo9g.s:28     .text:0000000000000014 .L0 
     /tmp/cceEUo9g.s:29     .text:0000000000000014 .L0 
     /tmp/cceEUo9g.s:32     .text:000000000000001c .L0 
     /tmp/cceEUo9g.s:36     .text:0000000000000020 .L0 
     /tmp/cceEUo9g.s:37     .text:0000000000000020 .L0 
     /tmp/cceEUo9g.s:41     .text:0000000000000024 .L0 
     /tmp/cceEUo9g.s:42     .text:0000000000000024 .L0 
     /tmp/cceEUo9g.s:44     .text:0000000000000028 .L0 
     /tmp/cceEUo9g.s:48     .text:000000000000002c .L0 
     /tmp/cceEUo9g.s:49     .text:000000000000002c .L0 
     /tmp/cceEUo9g.s:50     .text:000000000000002c .L0 
     /tmp/cceEUo9g.s:52     .text:0000000000000030 .L0 
     /tmp/cceEUo9g.s:56     .text:0000000000000034 .L0 
     /tmp/cceEUo9g.s:62     .text:0000000000000038 .L0 
     /tmp/cceEUo9g.s:64     .text:000000000000003c .L0 
     /tmp/cceEUo9g.s:65     .text:000000000000003c .L0 
     /tmp/cceEUo9g.s:67     .text:0000000000000040 .L0 
     /tmp/cceEUo9g.s:71     .text:0000000000000044 .L0 
     /tmp/cceEUo9g.s:72     .text:0000000000000044 .L0 
     /tmp/cceEUo9g.s:74     .text:0000000000000048 .L0 
     /tmp/cceEUo9g.s:76     .text:000000000000004c .L0 
     /tmp/cceEUo9g.s:80     .text:0000000000000054 .L0 
     /tmp/cceEUo9g.s:81     .text:0000000000000054 .L0 
     /tmp/cceEUo9g.s:84     .text:0000000000000058 .L0 
     /tmp/cceEUo9g.s:87     .text:000000000000005c .L0 
     /tmp/cceEUo9g.s:88     .text:000000000000005c .L0 
     /tmp/cceEUo9g.s:90     .text:0000000000000060 .L0 
     /tmp/cceEUo9g.s:91     .text:0000000000000060 .L0 
     /tmp/cceEUo9g.s:93     .text:0000000000000064 .L0 
     /tmp/cceEUo9g.s:94     .text:0000000000000064 .L0 
     /tmp/cceEUo9g.s:96     .text:000000000000006c .L0 
     /tmp/cceEUo9g.s:98     .text:0000000000000070 .L0 
     /tmp/cceEUo9g.s:100    .text:0000000000000074 .L0 
     /tmp/cceEUo9g.s:101    .text:0000000000000074 .L0 
     /tmp/cceEUo9g.s:103    .text:0000000000000078 .L0 
     /tmp/cceEUo9g.s:104    .text:0000000000000078 .L0 
     /tmp/cceEUo9g.s:106    .text:000000000000007c .L0 
     /tmp/cceEUo9g.s:112    .text:0000000000000080 .L0 
     /tmp/cceEUo9g.s:113    .text:0000000000000080 .L0 
     /tmp/cceEUo9g.s:115    .text:0000000000000088 .L0 
     /tmp/cceEUo9g.s:117    .text:000000000000008c .L0 
     /tmp/cceEUo9g.s:118    .text:000000000000008c .L0 
     /tmp/cceEUo9g.s:120    .text:0000000000000090 .L0 
     /tmp/cceEUo9g.s:121    .text:0000000000000090 .L0 
     /tmp/cceEUo9g.s:124    .text:0000000000000098 .L0 
     /tmp/cceEUo9g.s:125    .text:0000000000000098 .L0 
GAS LISTING /tmp/cceEUo9g.s 			page 14


     /tmp/cceEUo9g.s:132    .text:000000000000009c .L0 
     /tmp/cceEUo9g.s:133    .text:000000000000009c .L0 
     /tmp/cceEUo9g.s:134    .text:00000000000000a0 .L0 
     /tmp/cceEUo9g.s:135    .text:00000000000000a0 .L0 
     /tmp/cceEUo9g.s:136    .text:00000000000000a0 .L0 
     /tmp/cceEUo9g.s:138    .text:00000000000000a4 .L0 
     /tmp/cceEUo9g.s:142    .text:00000000000000a8 .L0 
     /tmp/cceEUo9g.s:147    .text:00000000000000a8 .L0 
     /tmp/cceEUo9g.s:148    .text:00000000000000a8 .L0 
     /tmp/cceEUo9g.s:150    .text:00000000000000ac .L0 
     /tmp/cceEUo9g.s:157    .text:00000000000000b8 .L0 
     /tmp/cceEUo9g.s:158    .text:00000000000000b8 .L0 
     /tmp/cceEUo9g.s:160    .text:00000000000000c0 .L0 
     /tmp/cceEUo9g.s:161    .text:00000000000000c0 .L0 
     /tmp/cceEUo9g.s:165    .text:00000000000000c8 .L0 
     /tmp/cceEUo9g.s:166    .text:00000000000000c8 .L0 
     /tmp/cceEUo9g.s:168    .text:00000000000000cc .L0 
     /tmp/cceEUo9g.s:169    .text:00000000000000cc .L0 
     /tmp/cceEUo9g.s:176    .text:00000000000000d8 .L0 
     /tmp/cceEUo9g.s:177    .text:00000000000000d8 .L0 
     /tmp/cceEUo9g.s:179    .text:00000000000000e0 .L0 
     /tmp/cceEUo9g.s:180    .text:00000000000000e0 .L0 
     /tmp/cceEUo9g.s:185    .text:00000000000000e8 .L0 
     /tmp/cceEUo9g.s:191    .text:00000000000000e8 _ZN15MemoryAllocator10deallocateEPv
     /tmp/cceEUo9g.s:194    .text:00000000000000e8 .L0 
     /tmp/cceEUo9g.s:196    .text:00000000000000e8 .L0 
     /tmp/cceEUo9g.s:197    .text:00000000000000ec .L0 
     /tmp/cceEUo9g.s:199    .text:00000000000000f0 .L0 
     /tmp/cceEUo9g.s:201    .text:00000000000000f4 .L0 
     /tmp/cceEUo9g.s:203    .text:00000000000000f4 .L0 
     /tmp/cceEUo9g.s:204    .text:00000000000000f4 .L0 
     /tmp/cceEUo9g.s:207    .text:00000000000000f8 .L0 
     /tmp/cceEUo9g.s:208    .text:00000000000000f8 .L0 
     /tmp/cceEUo9g.s:209    .text:00000000000000f8 .L0 
     /tmp/cceEUo9g.s:212    .text:0000000000000100 .L0 
     /tmp/cceEUo9g.s:213    .text:0000000000000100 .L0 
     /tmp/cceEUo9g.s:217    .text:0000000000000104 .L0 
     /tmp/cceEUo9g.s:218    .text:0000000000000104 .L0 
     /tmp/cceEUo9g.s:220    .text:0000000000000108 .L0 
     /tmp/cceEUo9g.s:223    .text:000000000000010c .L0 
     /tmp/cceEUo9g.s:224    .text:000000000000010c .L0 
     /tmp/cceEUo9g.s:225    .text:000000000000010c .L0 
     /tmp/cceEUo9g.s:227    .text:0000000000000110 .L0 
     /tmp/cceEUo9g.s:230    .text:0000000000000114 .L0 
     /tmp/cceEUo9g.s:233    .text:0000000000000118 .L0 
     /tmp/cceEUo9g.s:237    .text:000000000000011c .L0 
     /tmp/cceEUo9g.s:239    .text:0000000000000120 .L0 
     /tmp/cceEUo9g.s:241    .text:0000000000000124 .L0 
     /tmp/cceEUo9g.s:242    .text:0000000000000124 .L0 
     /tmp/cceEUo9g.s:245    .text:0000000000000128 .L0 
     /tmp/cceEUo9g.s:249    .text:000000000000012c .L0 
     /tmp/cceEUo9g.s:250    .text:000000000000012c .L0 
     /tmp/cceEUo9g.s:251    .text:000000000000012c .L0 
     /tmp/cceEUo9g.s:254    .text:0000000000000134 .L0 
     /tmp/cceEUo9g.s:258    .text:0000000000000138 .L0 
     /tmp/cceEUo9g.s:259    .text:0000000000000138 .L0 
     /tmp/cceEUo9g.s:261    .text:000000000000013c .L0 
GAS LISTING /tmp/cceEUo9g.s 			page 15


     /tmp/cceEUo9g.s:264    .text:0000000000000140 .L0 
     /tmp/cceEUo9g.s:265    .text:0000000000000140 .L0 
     /tmp/cceEUo9g.s:266    .text:0000000000000140 .L0 
     /tmp/cceEUo9g.s:268    .text:0000000000000144 .L0 
     /tmp/cceEUo9g.s:271    .text:0000000000000148 .L0 
     /tmp/cceEUo9g.s:275    .text:000000000000014c .L0 
     /tmp/cceEUo9g.s:280    .text:0000000000000154 .L0 
     /tmp/cceEUo9g.s:281    .text:0000000000000154 .L0 
     /tmp/cceEUo9g.s:284    .text:0000000000000158 .L0 
     /tmp/cceEUo9g.s:290    .text:0000000000000164 .L0 
     /tmp/cceEUo9g.s:291    .text:0000000000000164 .L0 
     /tmp/cceEUo9g.s:293    .text:0000000000000168 .L0 
     /tmp/cceEUo9g.s:295    .text:000000000000016c .L0 
     /tmp/cceEUo9g.s:296    .text:000000000000016c .L0 
     /tmp/cceEUo9g.s:300    .text:0000000000000170 .L0 
     /tmp/cceEUo9g.s:303    .text:0000000000000174 .L0 
     /tmp/cceEUo9g.s:305    .text:0000000000000178 .L0 
     /tmp/cceEUo9g.s:306    .text:0000000000000178 .L0 
     /tmp/cceEUo9g.s:308    .text:000000000000017c .L0 
     /tmp/cceEUo9g.s:312    .text:0000000000000184 .L0 
     /tmp/cceEUo9g.s:315    .text:0000000000000188 .L0 
     /tmp/cceEUo9g.s:316    .text:0000000000000188 .L0 
     /tmp/cceEUo9g.s:318    .text:000000000000018c .L0 
     /tmp/cceEUo9g.s:320    .text:0000000000000190 .L0 
     /tmp/cceEUo9g.s:321    .text:0000000000000190 .L0 
     /tmp/cceEUo9g.s:323    .text:0000000000000194 .L0 
     /tmp/cceEUo9g.s:327    .text:000000000000019c .L0 
     /tmp/cceEUo9g.s:329    .text:00000000000001a0 .L0 
     /tmp/cceEUo9g.s:333    .text:00000000000001a4 .L0 
     /tmp/cceEUo9g.s:334    .text:00000000000001a8 .L0 
     /tmp/cceEUo9g.s:335    .text:00000000000001a8 .L0 
     /tmp/cceEUo9g.s:336    .text:00000000000001a8 .L0 
     /tmp/cceEUo9g.s:338    .text:00000000000001ac .L0 
     /tmp/cceEUo9g.s:342    .text:00000000000001b0 .L0 
     /tmp/cceEUo9g.s:344    .text:00000000000001b0 .L0 
     /tmp/cceEUo9g.s:345    .text:00000000000001b0 .L0 
     /tmp/cceEUo9g.s:350    .text:00000000000001bc .L0 
     /tmp/cceEUo9g.s:351    .text:00000000000001bc .L0 
     /tmp/cceEUo9g.s:353    .text:00000000000001c0 .L0 
     /tmp/cceEUo9g.s:354    .text:00000000000001c0 .L0 
     /tmp/cceEUo9g.s:359    .text:00000000000001c8 .L0 
     /tmp/cceEUo9g.s:360    .text:00000000000001c8 .L0 
     /tmp/cceEUo9g.s:362    .text:00000000000001cc .L0 
     /tmp/cceEUo9g.s:364    .text:00000000000001d0 .L0 
     /tmp/cceEUo9g.s:366    .text:00000000000001d4 .L0 
     /tmp/cceEUo9g.s:367    .text:00000000000001d4 .L0 
     /tmp/cceEUo9g.s:369    .text:00000000000001d8 .L0 
     /tmp/cceEUo9g.s:372    .text:00000000000001dc .L0 
     /tmp/cceEUo9g.s:373    .text:00000000000001dc .L0 
     /tmp/cceEUo9g.s:378    .text:00000000000001e4 .L0 
     /tmp/cceEUo9g.s:379    .text:00000000000001e4 .L0 
     /tmp/cceEUo9g.s:381    .text:00000000000001e8 .L0 
     /tmp/cceEUo9g.s:384    .text:00000000000001f0 .L0 
     /tmp/cceEUo9g.s:385    .text:00000000000001f0 .L0 
     /tmp/cceEUo9g.s:387    .text:00000000000001f4 .L0 
     /tmp/cceEUo9g.s:389    .text:00000000000001f8 .L0 
     /tmp/cceEUo9g.s:395    .text:0000000000000200 .L0 
GAS LISTING /tmp/cceEUo9g.s 			page 16


     /tmp/cceEUo9g.s:401    .text:0000000000000208 .L0 
     /tmp/cceEUo9g.s:404    .text:0000000000000210 .L0 
     /tmp/cceEUo9g.s:418    .bss:0000000000000008 _ZN15MemoryAllocator14allocated_listE
     /tmp/cceEUo9g.s:414    .bss:0000000000000000 _ZN15MemoryAllocator9free_listE
     /tmp/cceEUo9g.s:411    .bss:0000000000000000 .LANCHOR0
     /tmp/cceEUo9g.s:424    .text:0000000000000210 .L0 
     /tmp/cceEUo9g.s:29     .text:0000000000000014 .L0 
     /tmp/cceEUo9g.s:94     .text:0000000000000064 .L0 
     /tmp/cceEUo9g.s:113    .text:0000000000000080 .L0 
     /tmp/cceEUo9g.s:121    .text:0000000000000090 .L0 
     /tmp/cceEUo9g.s:150    .text:00000000000000ac .L0 
     /tmp/cceEUo9g.s:158    .text:00000000000000b8 .L0 
     /tmp/cceEUo9g.s:169    .text:00000000000000cc .L0 
     /tmp/cceEUo9g.s:177    .text:00000000000000d8 .L0 
     /tmp/cceEUo9g.s:209    .text:00000000000000f8 .L0 
     /tmp/cceEUo9g.s:251    .text:000000000000012c .L0 
     /tmp/cceEUo9g.s:284    .text:0000000000000158 .L0 
     /tmp/cceEUo9g.s:345    .text:00000000000001b0 .L0 
     /tmp/cceEUo9g.s:128    .text:000000000000009c .L1
     /tmp/cceEUo9g.s:57     .text:0000000000000038 .L13
     /tmp/cceEUo9g.s:34     .text:0000000000000020 .L11
     /tmp/cceEUo9g.s:141    .text:00000000000000a8 .L14
     /tmp/cceEUo9g.s:108    .text:0000000000000080 .L6
     /tmp/cceEUo9g.s:153    .text:00000000000000b8 .L15
     /tmp/cceEUo9g.s:163    .text:00000000000000c8 .L16
     /tmp/cceEUo9g.s:172    .text:00000000000000d8 .L17
     /tmp/cceEUo9g.s:68     .text:0000000000000044 .L5
     /tmp/cceEUo9g.s:122    .text:0000000000000098 .L10
     /tmp/cceEUo9g.s:231    .text:0000000000000118 .L30
     /tmp/cceEUo9g.s:273    .text:000000000000014c .L31
     /tmp/cceEUo9g.s:215    .text:0000000000000104 .L20
     /tmp/cceEUo9g.s:393    .text:0000000000000200 .L32
     /tmp/cceEUo9g.s:278    .text:0000000000000154 .L22
     /tmp/cceEUo9g.s:298    .text:0000000000000170 .L24
     /tmp/cceEUo9g.s:288    .text:0000000000000164 .L36
     /tmp/cceEUo9g.s:256    .text:0000000000000138 .L27
     /tmp/cceEUo9g.s:234    .text:000000000000011c .L19
     /tmp/cceEUo9g.s:247    .text:000000000000012c .L23
     /tmp/cceEUo9g.s:341    .text:00000000000001b0 .L26
     /tmp/cceEUo9g.s:348    .text:00000000000001bc .L37
     /tmp/cceEUo9g.s:313    .text:0000000000000188 .L29
     /tmp/cceEUo9g.s:357    .text:00000000000001c8 .L38
     /tmp/cceEUo9g.s:399    .text:0000000000000208 .L33
     /tmp/cceEUo9g.s:376    .text:00000000000001e4 .L39
     /tmp/cceEUo9g.s:301    .text:0000000000000174 .L28
     /tmp/cceEUo9g.s:331    .text:00000000000001a4 .L21
     /tmp/cceEUo9g.s:830    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cceEUo9g.s:1735   .debug_str:0000000000000191 .LASF37
     /tmp/cceEUo9g.s:1761   .debug_str:0000000000000333 .LASF38
     /tmp/cceEUo9g.s:1765   .debug_str:000000000000035b .LASF39
     /tmp/cceEUo9g.s:5      .text:0000000000000000 .Ltext0
     /tmp/cceEUo9g.s:421    .text:0000000000000210 .Letext0
     /tmp/cceEUo9g.s:1685   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cceEUo9g.s:1747   .debug_str:00000000000002aa .LASF0
     /tmp/cceEUo9g.s:1727   .debug_str:000000000000015d .LASF1
     /tmp/cceEUo9g.s:1719   .debug_str:0000000000000116 .LASF2
     /tmp/cceEUo9g.s:1767   .debug_str:000000000000037e .LASF3
GAS LISTING /tmp/cceEUo9g.s 			page 17


     /tmp/cceEUo9g.s:1701   .debug_str:000000000000006c .LASF4
     /tmp/cceEUo9g.s:1725   .debug_str:000000000000014b .LASF5
     /tmp/cceEUo9g.s:1691   .debug_str:0000000000000023 .LASF6
     /tmp/cceEUo9g.s:1687   .debug_str:0000000000000000 .LASF7
     /tmp/cceEUo9g.s:1713   .debug_str:00000000000000d0 .LASF8
     /tmp/cceEUo9g.s:1753   .debug_str:00000000000002e7 .LASF9
     /tmp/cceEUo9g.s:1699   .debug_str:000000000000005e .LASF10
     /tmp/cceEUo9g.s:1783   .debug_str:00000000000003c1 .LASF11
     /tmp/cceEUo9g.s:1717   .debug_str:0000000000000107 .LASF12
     /tmp/cceEUo9g.s:1773   .debug_str:0000000000000395 .LASF13
     /tmp/cceEUo9g.s:1763   .debug_str:000000000000034b .LASF14
     /tmp/cceEUo9g.s:1729   .debug_str:0000000000000170 .LASF15
     /tmp/cceEUo9g.s:1709   .debug_str:00000000000000b4 .LASF16
     /tmp/cceEUo9g.s:1755   .debug_str:00000000000002f7 .LASF17
     /tmp/cceEUo9g.s:1733   .debug_str:000000000000018b .LASF40
     /tmp/cceEUo9g.s:1779   .debug_str:00000000000003b7 .LASF18
     /tmp/cceEUo9g.s:1693   .debug_str:000000000000002a .LASF19
     /tmp/cceEUo9g.s:1689   .debug_str:0000000000000013 .LASF41
     /tmp/cceEUo9g.s:1737   .debug_str:0000000000000255 .LASF42
     /tmp/cceEUo9g.s:1757   .debug_str:000000000000030d .LASF20
     /tmp/cceEUo9g.s:1731   .debug_str:000000000000017c .LASF21
     /tmp/cceEUo9g.s:1749   .debug_str:00000000000002b7 .LASF43
     /tmp/cceEUo9g.s:1751   .debug_str:00000000000002c3 .LASF44
     /tmp/cceEUo9g.s:1707   .debug_str:00000000000000af .LASF45
     /tmp/cceEUo9g.s:1759   .debug_str:0000000000000317 .LASF46
     /tmp/cceEUo9g.s:1739   .debug_str:000000000000026e .LASF22
     /tmp/cceEUo9g.s:1697   .debug_str:000000000000003e .LASF24
     /tmp/cceEUo9g.s:1723   .debug_str:0000000000000140 .LASF23
     /tmp/cceEUo9g.s:1715   .debug_str:00000000000000e3 .LASF25
     /tmp/cceEUo9g.s:1703   .debug_str:0000000000000073 .LASF47
     /tmp/cceEUo9g.s:1775   .debug_str:00000000000003a5 .LASF26
     /tmp/cceEUo9g.s:1721   .debug_str:0000000000000124 .LASF27
     /tmp/cceEUo9g.s:1705   .debug_str:000000000000008f .LASF28
     /tmp/cceEUo9g.s:1741   .debug_str:0000000000000277 .LASF29
     /tmp/cceEUo9g.s:192    .text:00000000000000e8 .LFB6
     /tmp/cceEUo9g.s:405    .text:0000000000000210 .LFE6
     /tmp/cceEUo9g.s:1380   .debug_loc:0000000000000000 .LLST4
     /tmp/cceEUo9g.s:1711   .debug_str:00000000000000ca .LASF30
     /tmp/cceEUo9g.s:1426   .debug_loc:00000000000000b4 .LLST5
     /tmp/cceEUo9g.s:1777   .debug_str:00000000000003af .LASF31
     /tmp/cceEUo9g.s:1441   .debug_loc:00000000000000fd .LLST6
     /tmp/cceEUo9g.s:1469   .debug_loc:0000000000000180 .LLST7
     /tmp/cceEUo9g.s:1745   .debug_str:00000000000002a5 .LASF32
     /tmp/cceEUo9g.s:1493   .debug_loc:00000000000001f0 .LLST8
     /tmp/cceEUo9g.s:1781   .debug_str:00000000000003bc .LASF33
     /tmp/cceEUo9g.s:1522   .debug_loc:0000000000000274 .LLST9
     /tmp/cceEUo9g.s:1769   .debug_str:0000000000000384 .LASF34
     /tmp/cceEUo9g.s:1554   .debug_loc:000000000000030a .LLST10
     /tmp/cceEUo9g.s:10     .text:0000000000000000 .LFB5
     /tmp/cceEUo9g.s:186    .text:00000000000000e8 .LFE5
     /tmp/cceEUo9g.s:1578   .debug_loc:000000000000037a .LLST0
     /tmp/cceEUo9g.s:1695   .debug_str:000000000000002f .LASF35
     /tmp/cceEUo9g.s:1607   .debug_loc:00000000000003ef .LLST1
     /tmp/cceEUo9g.s:1627   .debug_loc:000000000000044c .LLST2
     /tmp/cceEUo9g.s:1671   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cceEUo9g.s:1743   .debug_str:000000000000029d .LASF48
     /tmp/cceEUo9g.s:1771   .debug_str:000000000000038c .LASF36
GAS LISTING /tmp/cceEUo9g.s 			page 18


     /tmp/cceEUo9g.s:1647   .debug_loc:00000000000004a9 .LLST3
     /tmp/cceEUo9g.s:195    .text:00000000000000e8 .LVL13
     /tmp/cceEUo9g.s:330    .text:00000000000001a4 .LVL34
     /tmp/cceEUo9g.s:340    .text:00000000000001b0 .LVL35
     /tmp/cceEUo9g.s:390    .text:00000000000001fc .LVL40
     /tmp/cceEUo9g.s:392    .text:0000000000000200 .LVL41
     /tmp/cceEUo9g.s:396    .text:0000000000000204 .LVL42
     /tmp/cceEUo9g.s:398    .text:0000000000000208 .LVL43
     /tmp/cceEUo9g.s:402    .text:000000000000020c .LVL44
     /tmp/cceEUo9g.s:205    .text:00000000000000f8 .LVL14
     /tmp/cceEUo9g.s:371    .text:00000000000001dc .LVL38
     /tmp/cceEUo9g.s:375    .text:00000000000001e4 .LVL39
     /tmp/cceEUo9g.s:214    .text:0000000000000104 .LVL16
     /tmp/cceEUo9g.s:222    .text:000000000000010c .LVL17
     /tmp/cceEUo9g.s:228    .text:0000000000000114 .LVL18
     /tmp/cceEUo9g.s:246    .text:000000000000012c .LVL21
     /tmp/cceEUo9g.s:272    .text:000000000000014c .LVL26
     /tmp/cceEUo9g.s:285    .text:0000000000000160 .LVL29
     /tmp/cceEUo9g.s:210    .text:0000000000000100 .LVL15
     /tmp/cceEUo9g.s:243    .text:0000000000000128 .LVL20
     /tmp/cceEUo9g.s:282    .text:0000000000000158 .LVL28
     /tmp/cceEUo9g.s:235    .text:000000000000011c .LVL19
     /tmp/cceEUo9g.s:277    .text:0000000000000154 .LVL27
     /tmp/cceEUo9g.s:297    .text:0000000000000170 .LVL31
     /tmp/cceEUo9g.s:346    .text:00000000000001b8 .LVL36
     /tmp/cceEUo9g.s:255    .text:0000000000000138 .LVL23
     /tmp/cceEUo9g.s:263    .text:0000000000000140 .LVL24
     /tmp/cceEUo9g.s:269    .text:0000000000000148 .LVL25
     /tmp/cceEUo9g.s:287    .text:0000000000000164 .LVL30
     /tmp/cceEUo9g.s:324    .text:0000000000000198 .LVL33
     /tmp/cceEUo9g.s:252    .text:0000000000000134 .LVL22
     /tmp/cceEUo9g.s:309    .text:0000000000000180 .LVL32
     /tmp/cceEUo9g.s:356    .text:00000000000001c8 .LVL37
     /tmp/cceEUo9g.s:14     .text:0000000000000000 .LVL0
     /tmp/cceEUo9g.s:30     .text:000000000000001c .LVL2
     /tmp/cceEUo9g.s:82     .text:0000000000000058 .LVL6
     /tmp/cceEUo9g.s:140    .text:00000000000000a8 .LVL10
     /tmp/cceEUo9g.s:152    .text:00000000000000b8 .LVL11
     /tmp/cceEUo9g.s:25     .text:0000000000000014 .LVL1
     /tmp/cceEUo9g.s:33     .text:0000000000000020 .LVL3
     /tmp/cceEUo9g.s:47     .text:000000000000002c .LVL4
     /tmp/cceEUo9g.s:53     .text:0000000000000034 .LVL5
     /tmp/cceEUo9g.s:126    .text:000000000000009c .LVL9
     /tmp/cceEUo9g.s:85     .text:000000000000005c .LVL7
     /tmp/cceEUo9g.s:107    .text:0000000000000080 .LVL8
     /tmp/cceEUo9g.s:171    .text:00000000000000d8 .LVL12
     /tmp/cceEUo9g.s:425    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cceEUo9g.s:60     .text:0000000000000038 .LBB4
     /tmp/cceEUo9g.s:129    .text:000000000000009c .LBE4
     /tmp/cceEUo9g.s:145    .text:00000000000000a8 .LBB9
     /tmp/cceEUo9g.s:182    .text:00000000000000e8 .LBE9
     /tmp/cceEUo9g.s:78     .text:0000000000000054 .LBB6
     /tmp/cceEUo9g.s:109    .text:0000000000000080 .LBE6
     /tmp/cceEUo9g.s:155    .text:00000000000000b8 .LBB7
     /tmp/cceEUo9g.s:173    .text:00000000000000d8 .LBE7

NO UNDEFINED SYMBOLS
GAS LISTING /tmp/cceEUo9g.s 			page 19


