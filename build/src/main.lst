GAS LISTING /tmp/ccMpEEO6.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7createCm
   9              	_Z7createCm:
  10              	.LFB31:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../h/syscall_c.hpp"
   4:src/main.cpp  **** #include "../h/print.hpp"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** 
   7:src/main.cpp  **** struct A {
   8:src/main.cpp  ****     int a;
   9:src/main.cpp  ****     int* b = nullptr;
  10:src/main.cpp  **** };
  11:src/main.cpp  **** 
  12:src/main.cpp  **** struct B {
  13:src/main.cpp  ****     int a;
  14:src/main.cpp  ****     int* b = nullptr;
  15:src/main.cpp  ****     long c;
  16:src/main.cpp  ****     char d[50];
  17:src/main.cpp  **** };
  18:src/main.cpp  **** 
  19:src/main.cpp  **** class C{
  20:src/main.cpp  **** private:
  21:src/main.cpp  ****     uint64 num;
  22:src/main.cpp  **** 
  23:src/main.cpp  **** public:
  24:src/main.cpp  **** 
  25:src/main.cpp  ****     C(uint64 n){
  26:src/main.cpp  ****         num = n;
  27:src/main.cpp  ****     }
  28:src/main.cpp  **** 
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  **** 
  32:src/main.cpp  **** };
  33:src/main.cpp  **** 
  34:src/main.cpp  **** C* createC(uint64 n){
  12              		.loc 1 34 21
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
  20              		.cfi_offset 1, -8
  21              		.cfi_offset 8, -16
  22              		.cfi_offset 9, -24
  23 0010 13040102 		addi	s0,sp,32
  24              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccMpEEO6.s 			page 2


  25 0014 93040500 		mv	s1,a0
  35:src/main.cpp  ****     return new C(n);
  26              		.loc 1 35 5
  27              		.loc 1 35 19 is_stmt 0
  28 0018 13058000 		li	a0,8
  29              	.LVL1:
  30 001c 97000000 		call	_Znwm@plt
  30      E7800000 
  31              	.LVL2:
  32              	.LBB28:
  33              	.LBB29:
  26:src/main.cpp  ****     }
  34              		.loc 1 26 9 is_stmt 1
  26:src/main.cpp  ****     }
  35              		.loc 1 26 13 is_stmt 0
  36 0024 23309500 		sd	s1,0(a0)
  37              	.LVL3:
  38              	.LBE29:
  39              	.LBE28:
  36:src/main.cpp  **** }
  40              		.loc 1 36 1
  41 0028 83308101 		ld	ra,24(sp)
  42              		.cfi_restore 1
  43 002c 03340101 		ld	s0,16(sp)
  44              		.cfi_restore 8
  45              		.cfi_def_cfa 2, 32
  46 0030 83348100 		ld	s1,8(sp)
  47              		.cfi_restore 9
  48              	.LVL4:
  49 0034 13010102 		addi	sp,sp,32
  50              		.cfi_def_cfa_offset 0
  51 0038 67800000 		jr	ra
  52              		.cfi_endproc
  53              	.LFE31:
  55              		.section	.rodata.str1.8,"aMS",@progbits,1
  56              		.align	3
  57              	.LC0:
  58 0000 4D41494E 		.string	"MAIN START\n"
  58      20535441 
  58      52540A00 
  59 000c 00000000 		.align	3
  60              	.LC1:
  61 0010 46696E69 		.string	"Finished\n"
  61      73686564 
  61      0A00
  62              		.text
  63              		.align	2
  64              		.globl	main
  66              	main:
  67              	.LFB32:
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** int main() {
  68              		.loc 1 39 12 is_stmt 1
  69              		.cfi_startproc
  70 003c 130101FD 		addi	sp,sp,-48
  71              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccMpEEO6.s 			page 3


  72 0040 23341102 		sd	ra,40(sp)
  73 0044 23308102 		sd	s0,32(sp)
  74 0048 233C9100 		sd	s1,24(sp)
  75 004c 23382101 		sd	s2,16(sp)
  76 0050 23343101 		sd	s3,8(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
  79              		.cfi_offset 9, -24
  80              		.cfi_offset 18, -32
  81              		.cfi_offset 19, -40
  82 0054 13040103 		addi	s0,sp,48
  83              		.cfi_def_cfa 8, 0
  40:src/main.cpp  **** 
  41:src/main.cpp  **** 
  42:src/main.cpp  ****     MemoryAllocator::getInstance().init();
  84              		.loc 1 42 5
  85              	.LBB30:
  86              	.LBB31:
  87              		.file 2 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
  88              		.loc 2 26 9
  89              		.loc 2 26 32 is_stmt 0
  90 0058 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
  90      83C70700 
  91 0060 63980700 		bnez	a5,.L4
  92              	.LVL5:
  93 0064 93071000 		li	a5,1
  94 0068 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
  94      2300F700 
  95              	.LVL6:
  96              	.L4:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
GAS LISTING /tmp/ccMpEEO6.s 			page 4


  97              		.loc 2 27 9 is_stmt 1
  98              	.LBE31:
  99              	.LBE30:
 100              	.LBB32:
 101              	.LBB33:
  28:src/../h/../h/MemoryAllocator.hpp ****     }
  29:src/../h/../h/MemoryAllocator.hpp **** 
  30:src/../h/../h/MemoryAllocator.hpp ****     static void init() {
  31:src/../h/../h/MemoryAllocator.hpp ****         // Initialize the free list
  32:src/../h/../h/MemoryAllocator.hpp **** 
  33:src/../h/../h/MemoryAllocator.hpp ****         // For testing purposes
  34:src/../h/../h/MemoryAllocator.hpp **** //        uint64 start = (uint64)((Block *) HEAP_START_ADDR);
  35:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(start);
  36:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  37:src/../h/../h/MemoryAllocator.hpp **** //        uint64 end = (uint64)((Block *) HEAP_END_ADDR);
  38:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(end);
  39:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  40:src/../h/../h/MemoryAllocator.hpp **** 
  41:src/../h/../h/MemoryAllocator.hpp ****         free_list = (Block *) HEAP_START_ADDR;
 102              		.loc 2 41 9
 103              		.loc 2 41 19 is_stmt 0
 104 0070 97070000 		la	a5,HEAP_START_ADDR
 104      83B70700 
 105 0078 03B70700 		ld	a4,0(a5)
 106 007c 97060000 		la	a3,_ZN15MemoryAllocator9free_listE
 106      83B60600 
 107 0084 23B0E600 		sd	a4,0(a3)
  42:src/../h/../h/MemoryAllocator.hpp ****         free_list->size = (uint64 *) HEAP_END_ADDR - (uint64 *) HEAP_START_ADDR;
 108              		.loc 2 42 9 is_stmt 1
 109              		.loc 2 42 27 is_stmt 0
 110 0088 97070000 		la	a5,HEAP_END_ADDR
 110      83B70700 
 111 0090 83B70700 		ld	a5,0(a5)
 112              		.loc 2 42 52
 113 0094 B387E740 		sub	a5,a5,a4
 114 0098 93D73740 		srai	a5,a5,3
 115              		.loc 2 42 25
 116 009c 2330F700 		sd	a5,0(a4)
  43:src/../h/../h/MemoryAllocator.hpp ****         free_list->next = nullptr;
 117              		.loc 2 43 9 is_stmt 1
 118              		.loc 2 43 20 is_stmt 0
 119 00a0 83B70600 		ld	a5,0(a3)
 120              		.loc 2 43 25
 121 00a4 23B40700 		sd	zero,8(a5)
  44:src/../h/../h/MemoryAllocator.hpp ****         allocated_list = nullptr;
 122              		.loc 2 44 9 is_stmt 1
 123              		.loc 2 44 24 is_stmt 0
 124 00a8 97070000 		la	a5,_ZN15MemoryAllocator14allocated_listE
 124      83B70700 
 125 00b0 23B00700 		sd	zero,0(a5)
 126              	.LBE33:
 127              	.LBE32:
  43:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap+1);
 128              		.loc 1 43 5 is_stmt 1
 129              		.loc 1 43 19 is_stmt 0
 130 00b4 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 130      83B70700 
GAS LISTING /tmp/ccMpEEO6.s 			page 5


 131 00bc 93871700 		addi	a5,a5,1
 132              	.LVL7:
 133              	.LBB34:
 134              	.LBB35:
 135              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   7:src/../h/riscv.hpp **** #include "../lib/console.h"
   8:src/../h/riscv.hpp **** #include "../h/print.hpp"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  12:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp **** class Riscv
  16:src/../h/riscv.hpp **** {
  17:src/../h/riscv.hpp **** public:
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  22:src/../h/riscv.hpp ****     static void popSppSpie();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  25:src/../h/riscv.hpp ****     static void pushRegisters();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  28:src/../h/riscv.hpp ****     static void popRegisters();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register scause
  31:src/../h/riscv.hpp ****     static uint64 r_scause();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register scause
  34:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register sepc
  37:src/../h/riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register sepc
  40:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // read register stvec
  43:src/../h/riscv.hpp ****     static uint64 r_stvec();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // write register stvec
  46:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // read register stval
  49:src/../h/riscv.hpp ****     static uint64 r_stval();
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // write register stval
  52:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
GAS LISTING /tmp/ccMpEEO6.s 			page 6


  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     enum BitMaskSip
  55:src/../h/riscv.hpp ****     {
  56:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  57:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  58:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  60:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sip
  64:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sip
  67:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sip
  70:src/../h/riscv.hpp ****     static uint64 r_sip();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sip
  73:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     enum BitMaskSstatus
  76:src/../h/riscv.hpp ****     {
  77:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  78:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  79:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  80:src/../h/riscv.hpp ****     };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // mask set register sstatus
  83:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // mask clear register sstatus
  86:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     // read register sstatus
  89:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     // write register sstatus
  92:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // mask set register sie
  95:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     // mask clear register sie
  98:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static void supervisorTrap();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static long r_a0();
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static void w_a0(long a0);
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static uint64 r_a1();
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 109:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccMpEEO6.s 			page 7


 110:src/../h/riscv.hpp ****     static void push_a0(long a0);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** private:
 113:src/../h/riscv.hpp ****     static void trapHandler();
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** };
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     uint64 volatile scause;
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 122:src/../h/riscv.hpp ****     return scause;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     uint64 volatile sepc;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 134:src/../h/riscv.hpp ****     return sepc;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     uint64 volatile stvec;
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 146:src/../h/riscv.hpp ****     return stvec;
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 136              		.loc 3 151 5 is_stmt 1
 137              		.loc 3 151 69 is_stmt 0
 138              	#APP
 139              	# 151 "src/../h/riscv.hpp" 1
 152              	}
 140              		csrw stvec, a5
 141              	# 0 "" 2
 142              	.LVL8:
 143              	#NO_APP
 144              	.LBE35:
 145              	.LBE34:
  44:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 146              		.loc 1 44 5 is_stmt 1
 147              	.LBB36:
 148              	.LBB37:
GAS LISTING /tmp/ccMpEEO6.s 			page 8


 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     uint64 volatile stval;
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 158:src/../h/riscv.hpp ****     return stval;
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 172:src/../h/riscv.hpp **** {
 173:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     uint64 volatile sip;
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 180:src/../h/riscv.hpp ****     return sip;
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 184:src/../h/riscv.hpp **** {
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 149              		.loc 3 190 5
 150              		.loc 3 190 68 is_stmt 0
 151 00c4 93072000 		li	a5,2
 152              	#APP
 153              	# 190 "src/../h/riscv.hpp" 1
 191              	}
 154              		csrs sstatus, a5
 155              	# 0 "" 2
 156              	.LVL9:
 157              	#NO_APP
 158              	.LBE37:
 159              	.LBE36:
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     printString("MAIN START\n");
 160              		.loc 1 46 5 is_stmt 1
 161              		.loc 1 46 16 is_stmt 0
 162 00cc 17050000 		lla	a0,.LC0
 162      13050500 
 163 00d4 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccMpEEO6.s 			page 9


 163      E7800000 
 164              	.LVL10:
  47:src/main.cpp  **** 
  48:src/main.cpp  ****     A* a0 = new A();
 165              		.loc 1 48 5 is_stmt 1
 166              		.loc 1 48 19 is_stmt 0
 167 00dc 13050001 		li	a0,16
 168 00e0 97000000 		call	_Znwm@plt
 168      E7800000 
 169              	.LVL11:
 170 00e8 93040500 		mv	s1,a0
 171 00ec 23200500 		sw	zero,0(a0)
 172 00f0 23340500 		sd	zero,8(a0)
 173              	.LVL12:
  49:src/main.cpp  ****     B* b0 = new B();
 174              		.loc 1 49 5 is_stmt 1
 175              		.loc 1 49 19 is_stmt 0
 176 00f4 13050005 		li	a0,80
 177 00f8 97000000 		call	_Znwm@plt
 177      E7800000 
 178              	.LVL13:
 179 0100 13090500 		mv	s2,a0
 180 0104 23300500 		sd	zero,0(a0)
 181 0108 23340500 		sd	zero,8(a0)
 182 010c 23380500 		sd	zero,16(a0)
 183 0110 233C0500 		sd	zero,24(a0)
 184 0114 23300502 		sd	zero,32(a0)
 185 0118 23340502 		sd	zero,40(a0)
 186 011c 23380502 		sd	zero,48(a0)
 187 0120 233C0502 		sd	zero,56(a0)
 188 0124 23300504 		sd	zero,64(a0)
 189 0128 23340504 		sd	zero,72(a0)
 190              	.LVL14:
  50:src/main.cpp  ****     A* a1 = new A();
 191              		.loc 1 50 5 is_stmt 1
 192              		.loc 1 50 19 is_stmt 0
 193 012c 13050001 		li	a0,16
 194              	.LVL15:
 195 0130 97000000 		call	_Znwm@plt
 195      E7800000 
 196              	.LVL16:
 197 0138 93090500 		mv	s3,a0
 198 013c 23340500 		sd	zero,8(a0)
 199              	.LVL17:
  51:src/main.cpp  ****     a0->a = 0;
 200              		.loc 1 51 5 is_stmt 1
 201              		.loc 1 51 11 is_stmt 0
 202 0140 23A00400 		sw	zero,0(s1)
  52:src/main.cpp  ****     a1->a = 1;
 203              		.loc 1 52 5 is_stmt 1
 204              		.loc 1 52 11 is_stmt 0
 205 0144 93071000 		li	a5,1
 206 0148 2320F500 		sw	a5,0(a0)
  53:src/main.cpp  ****     b0->a = 10;
 207              		.loc 1 53 5 is_stmt 1
 208              		.loc 1 53 11 is_stmt 0
 209 014c 9307A000 		li	a5,10
GAS LISTING /tmp/ccMpEEO6.s 			page 10


 210 0150 2320F900 		sw	a5,0(s2)
  54:src/main.cpp  ****     delete(a0);
 211              		.loc 1 54 5 is_stmt 1
 212              		.loc 1 54 15 is_stmt 0
 213 0154 63880400 		beqz	s1,.L5
 214              		.loc 1 54 14 discriminator 1
 215 0158 13850400 		mv	a0,s1
 216              	.LVL18:
 217 015c 97000000 		call	_ZdlPv@plt
 217      E7800000 
 218              	.LVL19:
 219              	.L5:
  55:src/main.cpp  ****     B* b1 = new B();
 220              		.loc 1 55 5 is_stmt 1
 221              		.loc 1 55 19 is_stmt 0
 222 0164 13050005 		li	a0,80
 223 0168 97000000 		call	_Znwm@plt
 223      E7800000 
 224              	.LVL20:
 225 0170 93040500 		mv	s1,a0
 226              	.LVL21:
 227 0174 23300500 		sd	zero,0(a0)
 228 0178 23340500 		sd	zero,8(a0)
 229 017c 23380500 		sd	zero,16(a0)
 230 0180 233C0500 		sd	zero,24(a0)
 231 0184 23300502 		sd	zero,32(a0)
 232 0188 23340502 		sd	zero,40(a0)
 233 018c 23380502 		sd	zero,48(a0)
 234 0190 233C0502 		sd	zero,56(a0)
 235 0194 23300504 		sd	zero,64(a0)
 236 0198 23340504 		sd	zero,72(a0)
 237              	.LVL22:
  56:src/main.cpp  ****     b1->a = 11;
 238              		.loc 1 56 5 is_stmt 1
 239              		.loc 1 56 11 is_stmt 0
 240 019c 9307B000 		li	a5,11
 241 01a0 2320F500 		sw	a5,0(a0)
  57:src/main.cpp  ****     delete(a1);
 242              		.loc 1 57 5 is_stmt 1
 243              		.loc 1 57 15 is_stmt 0
 244 01a4 63880900 		beqz	s3,.L6
 245              		.loc 1 57 14 discriminator 1
 246 01a8 13850900 		mv	a0,s3
 247 01ac 97000000 		call	_ZdlPv@plt
 247      E7800000 
 248              	.LVL23:
 249              	.L6:
  58:src/main.cpp  ****     delete(b0);
 250              		.loc 1 58 5 is_stmt 1
 251              		.loc 1 58 15 is_stmt 0
 252 01b4 63080900 		beqz	s2,.L7
 253              		.loc 1 58 14 discriminator 1
 254 01b8 13050900 		mv	a0,s2
 255 01bc 97000000 		call	_ZdlPv@plt
 255      E7800000 
 256              	.LVL24:
 257              	.L7:
GAS LISTING /tmp/ccMpEEO6.s 			page 11


  59:src/main.cpp  ****     delete(b1);
 258              		.loc 1 59 5 is_stmt 1
 259              		.loc 1 59 15 is_stmt 0
 260 01c4 63880400 		beqz	s1,.L8
 261              		.loc 1 59 14 discriminator 1
 262 01c8 13850400 		mv	a0,s1
 263 01cc 97000000 		call	_ZdlPv@plt
 263      E7800000 
 264              	.LVL25:
 265              	.L8:
  60:src/main.cpp  ****     C* c1 = createC(5);
 266              		.loc 1 60 5 is_stmt 1
 267              		.loc 1 60 20 is_stmt 0
 268 01d4 13055000 		li	a0,5
 269 01d8 97000000 		call	_Z7createCm
 269      E7800000 
 270              	.LVL26:
  61:src/main.cpp  ****     delete c1;
 271              		.loc 1 61 5 is_stmt 1
 272              		.loc 1 61 14 is_stmt 0
 273 01e0 63060500 		beqz	a0,.L9
 274              		.loc 1 61 12 discriminator 1
 275 01e4 97000000 		call	_ZdlPv@plt
 275      E7800000 
 276              	.LVL27:
 277              	.L9:
  62:src/main.cpp  **** 
  63:src/main.cpp  **** 
  64:src/main.cpp  ****     printString("Finished\n");
 278              		.loc 1 64 5 is_stmt 1
 279              		.loc 1 64 16 is_stmt 0
 280 01ec 17050000 		lla	a0,.LC1
 280      13050500 
 281 01f4 97000000 		call	_Z11printStringPKc@plt
 281      E7800000 
 282              	.LVL28:
  65:src/main.cpp  **** 
  66:src/main.cpp  ****     return 0;
 283              		.loc 1 66 5 is_stmt 1
  67:src/main.cpp  **** }
 284              		.loc 1 67 1 is_stmt 0
 285 01fc 13050000 		li	a0,0
 286 0200 83308102 		ld	ra,40(sp)
 287              		.cfi_restore 1
 288 0204 03340102 		ld	s0,32(sp)
 289              		.cfi_restore 8
 290              		.cfi_def_cfa 2, 48
 291 0208 83348101 		ld	s1,24(sp)
 292              		.cfi_restore 9
 293              	.LVL29:
 294 020c 03390101 		ld	s2,16(sp)
 295              		.cfi_restore 18
 296              	.LVL30:
 297 0210 83398100 		ld	s3,8(sp)
 298              		.cfi_restore 19
 299              	.LVL31:
 300 0214 13010103 		addi	sp,sp,48
GAS LISTING /tmp/ccMpEEO6.s 			page 12


 301              		.cfi_def_cfa_offset 0
 302 0218 67800000 		jr	ra
 303              		.cfi_endproc
 304              	.LFE32:
 306              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 307              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 308              		.align	3
 311              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 312 0000 00000000 		.zero	8
 312      00000000 
 313              		.text
 314              	.Letext0:
 315              		.file 4 "src/../h/../lib/hw.h"
 316              		.file 5 "src/../h/../h/print.hpp"
GAS LISTING /tmp/ccMpEEO6.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccMpEEO6.s:9      .text:0000000000000000 _Z7createCm
     /tmp/ccMpEEO6.s:13     .text:0000000000000000 .L0 
     /tmp/ccMpEEO6.s:15     .text:0000000000000000 .L0 
     /tmp/ccMpEEO6.s:16     .text:0000000000000004 .L0 
     /tmp/ccMpEEO6.s:20     .text:0000000000000010 .L0 
     /tmp/ccMpEEO6.s:21     .text:0000000000000010 .L0 
     /tmp/ccMpEEO6.s:22     .text:0000000000000010 .L0 
     /tmp/ccMpEEO6.s:24     .text:0000000000000014 .L0 
     /tmp/ccMpEEO6.s:27     .text:0000000000000018 .L0 
     /tmp/ccMpEEO6.s:28     .text:0000000000000018 .L0 
     /tmp/ccMpEEO6.s:35     .text:0000000000000024 .L0 
     /tmp/ccMpEEO6.s:36     .text:0000000000000024 .L0 
     /tmp/ccMpEEO6.s:41     .text:0000000000000028 .L0 
     /tmp/ccMpEEO6.s:42     .text:000000000000002c .L0 
     /tmp/ccMpEEO6.s:44     .text:0000000000000030 .L0 
     /tmp/ccMpEEO6.s:45     .text:0000000000000030 .L0 
     /tmp/ccMpEEO6.s:47     .text:0000000000000034 .L0 
     /tmp/ccMpEEO6.s:50     .text:0000000000000038 .L0 
     /tmp/ccMpEEO6.s:52     .text:000000000000003c .L0 
     /tmp/ccMpEEO6.s:66     .text:000000000000003c main
     /tmp/ccMpEEO6.s:69     .text:000000000000003c .L0 
     /tmp/ccMpEEO6.s:70     .text:000000000000003c .L0 
     /tmp/ccMpEEO6.s:71     .text:0000000000000040 .L0 
     /tmp/ccMpEEO6.s:77     .text:0000000000000054 .L0 
     /tmp/ccMpEEO6.s:78     .text:0000000000000054 .L0 
     /tmp/ccMpEEO6.s:79     .text:0000000000000054 .L0 
     /tmp/ccMpEEO6.s:80     .text:0000000000000054 .L0 
     /tmp/ccMpEEO6.s:81     .text:0000000000000054 .L0 
     /tmp/ccMpEEO6.s:83     .text:0000000000000058 .L0 
     /tmp/ccMpEEO6.s:88     .text:0000000000000058 .L0 
     /tmp/ccMpEEO6.s:89     .text:0000000000000058 .L0 
     /tmp/ccMpEEO6.s:311    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccMpEEO6.s:90     .text:0000000000000058 .L0 
     /tmp/ccMpEEO6.s:102    .text:0000000000000070 .L0 
     /tmp/ccMpEEO6.s:103    .text:0000000000000070 .L0 
     /tmp/ccMpEEO6.s:104    .text:0000000000000070 .L0 
     /tmp/ccMpEEO6.s:109    .text:0000000000000088 .L0 
     /tmp/ccMpEEO6.s:110    .text:0000000000000088 .L0 
     /tmp/ccMpEEO6.s:113    .text:0000000000000094 .L0 
     /tmp/ccMpEEO6.s:116    .text:000000000000009c .L0 
     /tmp/ccMpEEO6.s:118    .text:00000000000000a0 .L0 
     /tmp/ccMpEEO6.s:119    .text:00000000000000a0 .L0 
     /tmp/ccMpEEO6.s:121    .text:00000000000000a4 .L0 
     /tmp/ccMpEEO6.s:123    .text:00000000000000a8 .L0 
     /tmp/ccMpEEO6.s:124    .text:00000000000000a8 .L0 
     /tmp/ccMpEEO6.s:129    .text:00000000000000b4 .L0 
     /tmp/ccMpEEO6.s:130    .text:00000000000000b4 .L0 
     /tmp/ccMpEEO6.s:137    .text:00000000000000c0 .L0 
  src/../h/riscv.hpp:151    .text:00000000000000c0 .L0 
     /tmp/ccMpEEO6.s:149    .text:00000000000000c4 .L0 
     /tmp/ccMpEEO6.s:150    .text:00000000000000c4 .L0 
     /tmp/ccMpEEO6.s:151    .text:00000000000000c4 .L0 
     /tmp/ccMpEEO6.s:161    .text:00000000000000cc .L0 
     /tmp/ccMpEEO6.s:162    .text:00000000000000cc .L0 
     /tmp/ccMpEEO6.s:166    .text:00000000000000dc .L0 
GAS LISTING /tmp/ccMpEEO6.s 			page 14


     /tmp/ccMpEEO6.s:167    .text:00000000000000dc .L0 
     /tmp/ccMpEEO6.s:175    .text:00000000000000f4 .L0 
     /tmp/ccMpEEO6.s:176    .text:00000000000000f4 .L0 
     /tmp/ccMpEEO6.s:192    .text:000000000000012c .L0 
     /tmp/ccMpEEO6.s:193    .text:000000000000012c .L0 
     /tmp/ccMpEEO6.s:201    .text:0000000000000140 .L0 
     /tmp/ccMpEEO6.s:202    .text:0000000000000140 .L0 
     /tmp/ccMpEEO6.s:204    .text:0000000000000144 .L0 
     /tmp/ccMpEEO6.s:205    .text:0000000000000144 .L0 
     /tmp/ccMpEEO6.s:208    .text:000000000000014c .L0 
     /tmp/ccMpEEO6.s:209    .text:000000000000014c .L0 
     /tmp/ccMpEEO6.s:212    .text:0000000000000154 .L0 
     /tmp/ccMpEEO6.s:213    .text:0000000000000154 .L0 
     /tmp/ccMpEEO6.s:215    .text:0000000000000158 .L0 
     /tmp/ccMpEEO6.s:221    .text:0000000000000164 .L0 
     /tmp/ccMpEEO6.s:222    .text:0000000000000164 .L0 
     /tmp/ccMpEEO6.s:239    .text:000000000000019c .L0 
     /tmp/ccMpEEO6.s:240    .text:000000000000019c .L0 
     /tmp/ccMpEEO6.s:243    .text:00000000000001a4 .L0 
     /tmp/ccMpEEO6.s:244    .text:00000000000001a4 .L0 
     /tmp/ccMpEEO6.s:246    .text:00000000000001a8 .L0 
     /tmp/ccMpEEO6.s:251    .text:00000000000001b4 .L0 
     /tmp/ccMpEEO6.s:252    .text:00000000000001b4 .L0 
     /tmp/ccMpEEO6.s:254    .text:00000000000001b8 .L0 
     /tmp/ccMpEEO6.s:259    .text:00000000000001c4 .L0 
     /tmp/ccMpEEO6.s:260    .text:00000000000001c4 .L0 
     /tmp/ccMpEEO6.s:262    .text:00000000000001c8 .L0 
     /tmp/ccMpEEO6.s:267    .text:00000000000001d4 .L0 
     /tmp/ccMpEEO6.s:268    .text:00000000000001d4 .L0 
     /tmp/ccMpEEO6.s:272    .text:00000000000001e0 .L0 
     /tmp/ccMpEEO6.s:273    .text:00000000000001e0 .L0 
     /tmp/ccMpEEO6.s:275    .text:00000000000001e4 .L0 
     /tmp/ccMpEEO6.s:279    .text:00000000000001ec .L0 
     /tmp/ccMpEEO6.s:280    .text:00000000000001ec .L0 
     /tmp/ccMpEEO6.s:284    .text:00000000000001fc .L0 
     /tmp/ccMpEEO6.s:285    .text:00000000000001fc .L0 
     /tmp/ccMpEEO6.s:287    .text:0000000000000204 .L0 
     /tmp/ccMpEEO6.s:289    .text:0000000000000208 .L0 
     /tmp/ccMpEEO6.s:290    .text:0000000000000208 .L0 
     /tmp/ccMpEEO6.s:292    .text:000000000000020c .L0 
     /tmp/ccMpEEO6.s:295    .text:0000000000000210 .L0 
     /tmp/ccMpEEO6.s:298    .text:0000000000000214 .L0 
     /tmp/ccMpEEO6.s:301    .text:0000000000000218 .L0 
     /tmp/ccMpEEO6.s:303    .text:000000000000021c .L0 
     /tmp/ccMpEEO6.s:317    .text:000000000000021c .L0 
     /tmp/ccMpEEO6.s:90     .text:0000000000000058 .L0 
     /tmp/ccMpEEO6.s:94     .text:0000000000000068 .L0 
     /tmp/ccMpEEO6.s:104    .text:0000000000000070 .L0 
     /tmp/ccMpEEO6.s:106    .text:000000000000007c .L0 
     /tmp/ccMpEEO6.s:110    .text:0000000000000088 .L0 
     /tmp/ccMpEEO6.s:124    .text:00000000000000a8 .L0 
     /tmp/ccMpEEO6.s:130    .text:00000000000000b4 .L0 
     /tmp/ccMpEEO6.s:57     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccMpEEO6.s:162    .text:00000000000000cc .L0 
     /tmp/ccMpEEO6.s:60     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccMpEEO6.s:280    .text:00000000000001ec .L0 
     /tmp/ccMpEEO6.s:96     .text:0000000000000070 .L4
GAS LISTING /tmp/ccMpEEO6.s 			page 15


     /tmp/ccMpEEO6.s:219    .text:0000000000000164 .L5
     /tmp/ccMpEEO6.s:249    .text:00000000000001b4 .L6
     /tmp/ccMpEEO6.s:257    .text:00000000000001c4 .L7
     /tmp/ccMpEEO6.s:265    .text:00000000000001d4 .L8
     /tmp/ccMpEEO6.s:277    .text:00000000000001ec .L9
     /tmp/ccMpEEO6.s:1390   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccMpEEO6.s:2619   .debug_str:00000000000005cc .LASF109
     /tmp/ccMpEEO6.s:2521   .debug_str:000000000000033b .LASF110
     /tmp/ccMpEEO6.s:2459   .debug_str:0000000000000113 .LASF111
     /tmp/ccMpEEO6.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccMpEEO6.s:314    .text:000000000000021c .Letext0
     /tmp/ccMpEEO6.s:2415   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccMpEEO6.s:2561   .debug_str:0000000000000454 .LASF0
     /tmp/ccMpEEO6.s:2573   .debug_str:000000000000048a .LASF1
     /tmp/ccMpEEO6.s:2541   .debug_str:00000000000003c7 .LASF2
     /tmp/ccMpEEO6.s:2509   .debug_str:00000000000002de .LASF4
     /tmp/ccMpEEO6.s:2597   .debug_str:000000000000052b .LASF3
     /tmp/ccMpEEO6.s:2437   .debug_str:000000000000008b .LASF5
     /tmp/ccMpEEO6.s:2575   .debug_str:000000000000049d .LASF6
     /tmp/ccMpEEO6.s:2559   .debug_str:0000000000000441 .LASF7
     /tmp/ccMpEEO6.s:2631   .debug_str:00000000000006e7 .LASF8
     /tmp/ccMpEEO6.s:2495   .debug_str:0000000000000254 .LASF9
     /tmp/ccMpEEO6.s:2585   .debug_str:00000000000004c6 .LASF10
     /tmp/ccMpEEO6.s:2623   .debug_str:000000000000069c .LASF11
     /tmp/ccMpEEO6.s:2443   .debug_str:00000000000000a3 .LASF12
     /tmp/ccMpEEO6.s:2421   .debug_str:0000000000000022 .LASF13
     /tmp/ccMpEEO6.s:2451   .debug_str:00000000000000ed .LASF14
     /tmp/ccMpEEO6.s:2593   .debug_str:00000000000004fd .LASF15
     /tmp/ccMpEEO6.s:2461   .debug_str:0000000000000136 .LASF16
     /tmp/ccMpEEO6.s:2455   .debug_str:0000000000000101 .LASF92
     /tmp/ccMpEEO6.s:2611   .debug_str:0000000000000594 .LASF17
     /tmp/ccMpEEO6.s:2655   .debug_str:0000000000000799 .LASF18
     /tmp/ccMpEEO6.s:2535   .debug_str:000000000000039f .LASF27
     /tmp/ccMpEEO6.s:2469   .debug_str:000000000000018f .LASF45
     /tmp/ccMpEEO6.s:2633   .debug_str:00000000000006f7 .LASF19
     /tmp/ccMpEEO6.s:2609   .debug_str:0000000000000585 .LASF20
     /tmp/ccMpEEO6.s:2621   .debug_str:0000000000000690 .LASF40
     /tmp/ccMpEEO6.s:2435   .debug_str:0000000000000067 .LASF42
     /tmp/ccMpEEO6.s:2579   .debug_str:00000000000004b5 .LASF32
     /tmp/ccMpEEO6.s:2617   .debug_str:00000000000005b0 .LASF34
     /tmp/ccMpEEO6.s:2569   .debug_str:000000000000047b .LASF21
     /tmp/ccMpEEO6.s:2467   .debug_str:000000000000016f .LASF23
     /tmp/ccMpEEO6.s:2529   .debug_str:0000000000000376 .LASF22
     /tmp/ccMpEEO6.s:2519   .debug_str:0000000000000317 .LASF24
     /tmp/ccMpEEO6.s:2629   .debug_str:00000000000006cb .LASF112
     /tmp/ccMpEEO6.s:2553   .debug_str:000000000000041d .LASF25
     /tmp/ccMpEEO6.s:2523   .debug_str:0000000000000348 .LASF26
     /tmp/ccMpEEO6.s:2571   .debug_str:0000000000000484 .LASF28
     /tmp/ccMpEEO6.s:2465   .debug_str:0000000000000160 .LASF113
     /tmp/ccMpEEO6.s:2457   .debug_str:0000000000000107 .LASF29
     /tmp/ccMpEEO6.s:2525   .debug_str:0000000000000364 .LASF30
     /tmp/ccMpEEO6.s:2439   .debug_str:0000000000000092 .LASF31
     /tmp/ccMpEEO6.s:2591   .debug_str:00000000000004f2 .LASF33
     /tmp/ccMpEEO6.s:2649   .debug_str:0000000000000765 .LASF35
     /tmp/ccMpEEO6.s:2433   .debug_str:0000000000000059 .LASF36
     /tmp/ccMpEEO6.s:2477   .debug_str:00000000000001d0 .LASF37
     /tmp/ccMpEEO6.s:2607   .debug_str:0000000000000578 .LASF38
GAS LISTING /tmp/ccMpEEO6.s 			page 16


     /tmp/ccMpEEO6.s:2419   .debug_str:0000000000000008 .LASF39
     /tmp/ccMpEEO6.s:2423   .debug_str:0000000000000032 .LASF41
     /tmp/ccMpEEO6.s:2605   .debug_str:0000000000000563 .LASF43
     /tmp/ccMpEEO6.s:2475   .debug_str:00000000000001c7 .LASF44
     /tmp/ccMpEEO6.s:2473   .debug_str:00000000000001b2 .LASF46
     /tmp/ccMpEEO6.s:2599   .debug_str:000000000000053d .LASF47
     /tmp/ccMpEEO6.s:2587   .debug_str:00000000000004d5 .LASF48
     /tmp/ccMpEEO6.s:2625   .debug_str:00000000000006ab .LASF49
     /tmp/ccMpEEO6.s:2493   .debug_str:0000000000000241 .LASF50
     /tmp/ccMpEEO6.s:2487   .debug_str:000000000000022b .LASF51
     /tmp/ccMpEEO6.s:2463   .debug_str:000000000000014c .LASF52
     /tmp/ccMpEEO6.s:2417   .debug_str:0000000000000000 .LASF53
     /tmp/ccMpEEO6.s:2501   .debug_str:000000000000027d .LASF54
     /tmp/ccMpEEO6.s:2481   .debug_str:00000000000001fc .LASF55
     /tmp/ccMpEEO6.s:2445   .debug_str:00000000000000b3 .LASF56
     /tmp/ccMpEEO6.s:2503   .debug_str:0000000000000291 .LASF57
     /tmp/ccMpEEO6.s:2483   .debug_str:0000000000000204 .LASF58
     /tmp/ccMpEEO6.s:2563   .debug_str:0000000000000461 .LASF59
     /tmp/ccMpEEO6.s:2645   .debug_str:000000000000074d .LASF60
     /tmp/ccMpEEO6.s:2431   .debug_str:0000000000000052 .LASF61
     /tmp/ccMpEEO6.s:2485   .debug_str:0000000000000218 .LASF62
     /tmp/ccMpEEO6.s:2491   .debug_str:000000000000023b .LASF63
     /tmp/ccMpEEO6.s:2615   .debug_str:000000000000059e .LASF64
     /tmp/ccMpEEO6.s:2429   .debug_str:000000000000004c .LASF65
     /tmp/ccMpEEO6.s:2659   .debug_str:00000000000007a3 .LASF66
     /tmp/ccMpEEO6.s:2653   .debug_str:000000000000078e .LASF67
     /tmp/ccMpEEO6.s:2595   .debug_str:0000000000000513 .LASF68
     /tmp/ccMpEEO6.s:2515   .debug_str:0000000000000300 .LASF69
     /tmp/ccMpEEO6.s:2531   .debug_str:0000000000000381 .LASF70
     /tmp/ccMpEEO6.s:2449   .debug_str:00000000000000e3 .LASF71
     /tmp/ccMpEEO6.s:2505   .debug_str:0000000000000299 .LASF72
     /tmp/ccMpEEO6.s:2547   .debug_str:00000000000003fb .LASF73
     /tmp/ccMpEEO6.s:2499   .debug_str:0000000000000267 .LASF74
     /tmp/ccMpEEO6.s:2581   .debug_str:00000000000004ba .LASF75
     /tmp/ccMpEEO6.s:2643   .debug_str:000000000000073a .LASF76
     /tmp/ccMpEEO6.s:2425   .debug_str:000000000000003b .LASF77
     /tmp/ccMpEEO6.s:2543   .debug_str:00000000000003d5 .LASF78
     /tmp/ccMpEEO6.s:2601   .debug_str:0000000000000544 .LASF79
     /tmp/ccMpEEO6.s:2447   .debug_str:00000000000000c7 .LASF80
     /tmp/ccMpEEO6.s:2613   .debug_str:0000000000000599 .LASF81
     /tmp/ccMpEEO6.s:2479   .debug_str:00000000000001eb .LASF82
     /tmp/ccMpEEO6.s:2497   .debug_str:0000000000000262 .LASF83
     /tmp/ccMpEEO6.s:2549   .debug_str:0000000000000405 .LASF84
     /tmp/ccMpEEO6.s:2527   .debug_str:0000000000000371 .LASF85
     /tmp/ccMpEEO6.s:2651   .debug_str:000000000000077d .LASF86
     /tmp/ccMpEEO6.s:2441   .debug_str:000000000000009e .LASF87
     /tmp/ccMpEEO6.s:2513   .debug_str:00000000000002ef .LASF88
     /tmp/ccMpEEO6.s:2453   .debug_str:00000000000000f9 .LASF89
     /tmp/ccMpEEO6.s:2555   .debug_str:0000000000000427 .LASF90
     /tmp/ccMpEEO6.s:2537   .debug_str:00000000000003af .LASF114
     /tmp/ccMpEEO6.s:2627   .debug_str:00000000000006b2 .LASF115
     /tmp/ccMpEEO6.s:2641   .debug_str:0000000000000731 .LASF91
     /tmp/ccMpEEO6.s:2471   .debug_str:00000000000001a8 .LASF93
     /tmp/ccMpEEO6.s:2637   .debug_str:000000000000071a .LASF94
     /tmp/ccMpEEO6.s:2577   .debug_str:00000000000004b0 .LASF95
     /tmp/ccMpEEO6.s:2511   .debug_str:00000000000002e5 .LASF116
     /tmp/ccMpEEO6.s:2583   .debug_str:00000000000004c1 .LASF96
GAS LISTING /tmp/ccMpEEO6.s 			page 17


     /tmp/ccMpEEO6.s:67     .text:000000000000003c .LFB32
     /tmp/ccMpEEO6.s:304    .text:000000000000021c .LFE32
     /tmp/ccMpEEO6.s:2314   .debug_loc:0000000000000000 .LLST3
     /tmp/ccMpEEO6.s:2321   .debug_loc:0000000000000023 .LLST4
     /tmp/ccMpEEO6.s:2332   .debug_loc:0000000000000059 .LLST5
     /tmp/ccMpEEO6.s:2343   .debug_loc:000000000000008f .LLST6
     /tmp/ccMpEEO6.s:2350   .debug_loc:00000000000000b2 .LLST7
     /tmp/ccMpEEO6.s:85     .text:0000000000000058 .LBB30
     /tmp/ccMpEEO6.s:99     .text:0000000000000070 .LBE30
     /tmp/ccMpEEO6.s:100    .text:0000000000000070 .LBB32
     /tmp/ccMpEEO6.s:127    .text:00000000000000b4 .LBE32
     /tmp/ccMpEEO6.s:133    .text:00000000000000c0 .LBB34
     /tmp/ccMpEEO6.s:145    .text:00000000000000c4 .LBE34
     /tmp/ccMpEEO6.s:2357   .debug_loc:00000000000000d5 .LLST8
     /tmp/ccMpEEO6.s:147    .text:00000000000000c4 .LBB36
     /tmp/ccMpEEO6.s:159    .text:00000000000000cc .LBE36
     /tmp/ccMpEEO6.s:2364   .debug_loc:00000000000000f8 .LLST9
     /tmp/ccMpEEO6.s:164    .text:00000000000000dc .LVL10
     /tmp/ccMpEEO6.s:169    .text:00000000000000e8 .LVL11
     /tmp/ccMpEEO6.s:178    .text:0000000000000100 .LVL13
     /tmp/ccMpEEO6.s:196    .text:0000000000000138 .LVL16
     /tmp/ccMpEEO6.s:218    .text:0000000000000164 .LVL19
     /tmp/ccMpEEO6.s:224    .text:0000000000000170 .LVL20
     /tmp/ccMpEEO6.s:248    .text:00000000000001b4 .LVL23
     /tmp/ccMpEEO6.s:256    .text:00000000000001c4 .LVL24
     /tmp/ccMpEEO6.s:264    .text:00000000000001d4 .LVL25
     /tmp/ccMpEEO6.s:270    .text:00000000000001e0 .LVL26
     /tmp/ccMpEEO6.s:276    .text:00000000000001ec .LVL27
     /tmp/ccMpEEO6.s:282    .text:00000000000001fc .LVL28
     /tmp/ccMpEEO6.s:2647   .debug_str:0000000000000760 .LASF97
     /tmp/ccMpEEO6.s:2427   .debug_str:0000000000000042 .LASF98
     /tmp/ccMpEEO6.s:2589   .debug_str:00000000000004e8 .LASF99
     /tmp/ccMpEEO6.s:2489   .debug_str:0000000000000233 .LASF117
     /tmp/ccMpEEO6.s:2539   .debug_str:00000000000003bb .LASF118
     /tmp/ccMpEEO6.s:10     .text:0000000000000000 .LFB31
     /tmp/ccMpEEO6.s:53     .text:000000000000003c .LFE31
     /tmp/ccMpEEO6.s:2372   .debug_loc:000000000000011c .LLST0
     /tmp/ccMpEEO6.s:32     .text:0000000000000024 .LBB28
     /tmp/ccMpEEO6.s:39     .text:0000000000000028 .LBE28
     /tmp/ccMpEEO6.s:2388   .debug_loc:0000000000000166 .LLST1
     /tmp/ccMpEEO6.s:2395   .debug_loc:0000000000000189 .LLST2
     /tmp/ccMpEEO6.s:31     .text:0000000000000024 .LVL2
     /tmp/ccMpEEO6.s:2565   .debug_str:0000000000000468 .LASF100
     /tmp/ccMpEEO6.s:2657   .debug_str:000000000000079e .LASF101
     /tmp/ccMpEEO6.s:2557   .debug_str:000000000000043b .LASF102
     /tmp/ccMpEEO6.s:2567   .debug_str:0000000000000472 .LASF103
     /tmp/ccMpEEO6.s:2507   .debug_str:00000000000002af .LASF119
     /tmp/ccMpEEO6.s:2635   .debug_str:0000000000000701 .LASF104
     /tmp/ccMpEEO6.s:2545   .debug_str:00000000000003e8 .LASF120
     /tmp/ccMpEEO6.s:2517   .debug_str:000000000000030b .LASF121
     /tmp/ccMpEEO6.s:2533   .debug_str:0000000000000399 .LASF105
     /tmp/ccMpEEO6.s:2639   .debug_str:0000000000000724 .LASF107
     /tmp/ccMpEEO6.s:2551   .debug_str:0000000000000416 .LASF106
     /tmp/ccMpEEO6.s:2603   .debug_str:0000000000000553 .LASF108
     /tmp/ccMpEEO6.s:173    .text:00000000000000f4 .LVL12
     /tmp/ccMpEEO6.s:226    .text:0000000000000174 .LVL21
     /tmp/ccMpEEO6.s:190    .text:000000000000012c .LVL14
GAS LISTING /tmp/ccMpEEO6.s 			page 18


     /tmp/ccMpEEO6.s:194    .text:0000000000000130 .LVL15
     /tmp/ccMpEEO6.s:296    .text:0000000000000210 .LVL30
     /tmp/ccMpEEO6.s:199    .text:0000000000000140 .LVL17
     /tmp/ccMpEEO6.s:216    .text:000000000000015c .LVL18
     /tmp/ccMpEEO6.s:299    .text:0000000000000214 .LVL31
     /tmp/ccMpEEO6.s:237    .text:000000000000019c .LVL22
     /tmp/ccMpEEO6.s:293    .text:000000000000020c .LVL29
     /tmp/ccMpEEO6.s:132    .text:00000000000000c0 .LVL7
     /tmp/ccMpEEO6.s:142    .text:00000000000000c4 .LVL8
     /tmp/ccMpEEO6.s:156    .text:00000000000000cc .LVL9
     /tmp/ccMpEEO6.s:14     .text:0000000000000000 .LVL0
     /tmp/ccMpEEO6.s:29     .text:000000000000001c .LVL1
     /tmp/ccMpEEO6.s:48     .text:0000000000000034 .LVL4
     /tmp/ccMpEEO6.s:37     .text:0000000000000028 .LVL3
     /tmp/ccMpEEO6.s:318    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Znwm
HEAP_START_ADDR
_ZN15MemoryAllocator9free_listE
HEAP_END_ADDR
_ZN15MemoryAllocator14allocated_listE
_ZN5Riscv14supervisorTrapEv
_Z11printStringPKc
_ZdlPv
