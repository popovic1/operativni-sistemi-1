GAS LISTING /tmp/ccLMRHOZ.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB48:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** 
   3:src/main.cpp  **** 
   4:src/main.cpp  **** #include "../h/riscv.hpp"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** struct A {
   7:src/main.cpp  ****     int a;
   8:src/main.cpp  ****     int* b = nullptr;
   9:src/main.cpp  **** };
  10:src/main.cpp  **** 
  11:src/main.cpp  **** struct B {
  12:src/main.cpp  ****     int a;
  13:src/main.cpp  ****     int* b = nullptr;
  14:src/main.cpp  ****     long c;
  15:src/main.cpp  ****     char d[50];
  16:src/main.cpp  **** };
  17:src/main.cpp  **** 
  18:src/main.cpp  **** extern void userMain();
  19:src/main.cpp  **** 
  20:src/main.cpp  **** int main() {
  12              		.loc 1 20 12
  13              		.cfi_startproc
  14 0000 130101FD 		addi	sp,sp,-48
  15              		.cfi_def_cfa_offset 48
  16 0004 23341102 		sd	ra,40(sp)
  17 0008 23308102 		sd	s0,32(sp)
  18 000c 233C9100 		sd	s1,24(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040103 		addi	s0,sp,48
  23              		.cfi_def_cfa 8, 0
  21:src/main.cpp  **** 
  22:src/main.cpp  **** 
  23:src/main.cpp  ****     MemoryAllocator::getInstance().init();
  24              		.loc 1 23 5
  25              	.LBB21:
  26              	.LBB22:
  27              		.file 2 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "print.hpp"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
GAS LISTING /tmp/ccLMRHOZ.s 			page 2


   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
  28              		.loc 2 26 9
  29              		.loc 2 26 32 is_stmt 0
  30 0014 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
  30      83C70700 
  31 001c 63980700 		bnez	a5,.L2
  32              	.LVL0:
  33 0020 93071000 		li	a5,1
  34 0024 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
  34      2300F700 
  35              	.LVL1:
  36              	.L2:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
  37              		.loc 2 27 9 is_stmt 1
  38              	.LBE22:
  39              	.LBE21:
  40              	.LBB23:
  41              	.LBB24:
  28:src/../h/../h/MemoryAllocator.hpp ****     }
  29:src/../h/../h/MemoryAllocator.hpp **** 
  30:src/../h/../h/MemoryAllocator.hpp ****     static void init() {
  31:src/../h/../h/MemoryAllocator.hpp ****         // Initialize the free list
  32:src/../h/../h/MemoryAllocator.hpp **** 
  33:src/../h/../h/MemoryAllocator.hpp ****         // For testing purposes
  34:src/../h/../h/MemoryAllocator.hpp **** //        uint64 start = (uint64)((Block *) HEAP_START_ADDR);
  35:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(start);
  36:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  37:src/../h/../h/MemoryAllocator.hpp **** //        uint64 end = (uint64)((Block *) HEAP_END_ADDR);
  38:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(end);
  39:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  40:src/../h/../h/MemoryAllocator.hpp **** 
  41:src/../h/../h/MemoryAllocator.hpp ****         free_list = (Block *) HEAP_START_ADDR;
  42              		.loc 2 41 9
  43              		.loc 2 41 19 is_stmt 0
  44 002c 97070000 		la	a5,HEAP_START_ADDR
  44      83B70700 
  45 0034 03B70700 		ld	a4,0(a5)
  46 0038 97060000 		la	a3,_ZN15MemoryAllocator9free_listE
  46      83B60600 
  47 0040 23B0E600 		sd	a4,0(a3)
GAS LISTING /tmp/ccLMRHOZ.s 			page 3


  42:src/../h/../h/MemoryAllocator.hpp ****         free_list->size = (uint64 *) HEAP_END_ADDR - (uint64 *) HEAP_START_ADDR;
  48              		.loc 2 42 9 is_stmt 1
  49              		.loc 2 42 27 is_stmt 0
  50 0044 97070000 		la	a5,HEAP_END_ADDR
  50      83B70700 
  51 004c 83B70700 		ld	a5,0(a5)
  52              		.loc 2 42 52
  53 0050 B387E740 		sub	a5,a5,a4
  54 0054 93D73740 		srai	a5,a5,3
  55              		.loc 2 42 25
  56 0058 2330F700 		sd	a5,0(a4)
  43:src/../h/../h/MemoryAllocator.hpp ****         free_list->next = nullptr;
  57              		.loc 2 43 9 is_stmt 1
  58              		.loc 2 43 20 is_stmt 0
  59 005c 83B70600 		ld	a5,0(a3)
  60              		.loc 2 43 25
  61 0060 23B40700 		sd	zero,8(a5)
  44:src/../h/../h/MemoryAllocator.hpp ****         allocated_list = nullptr;
  62              		.loc 2 44 9 is_stmt 1
  63              		.loc 2 44 24 is_stmt 0
  64 0064 97070000 		la	a5,_ZN15MemoryAllocator14allocated_listE
  64      83B70700 
  65 006c 23B00700 		sd	zero,0(a5)
  66              	.LBE24:
  67              	.LBE23:
  24:src/main.cpp  ****     PCB::running = PCB::createThread(nullptr, nullptr);
  68              		.loc 1 24 5 is_stmt 1
  69              		.loc 1 24 37 is_stmt 0
  70 0070 93050000 		li	a1,0
  71 0074 13050000 		li	a0,0
  72 0078 97000000 		call	_ZN3PCB12createThreadEPFvPvES0_@plt
  72      E7800000 
  73              	.LVL2:
  74              		.loc 1 24 18
  75 0080 97070000 		la	a5,_ZN3PCB7runningE
  75      83B70700 
  76 0088 23B0A700 		sd	a0,0(a5)
  25:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap+1);
  77              		.loc 1 25 5 is_stmt 1
  78              		.loc 1 25 19 is_stmt 0
  79 008c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  79      83B70700 
  80 0094 93871700 		addi	a5,a5,1
  81              	.LVL3:
  82              	.LBB25:
  83              	.LBB26:
  84              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   6:src/../h/riscv.hpp **** #include "PCB.hpp"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  10:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
GAS LISTING /tmp/ccLMRHOZ.s 			page 4


  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  20:src/../h/riscv.hpp ****     static void popSppSpie();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void pushRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  26:src/../h/riscv.hpp ****     static void popRegisters();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register scause
  29:src/../h/riscv.hpp ****     static uint64 r_scause();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register scause
  32:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register sepc
  35:src/../h/riscv.hpp ****     static uint64 r_sepc();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register sepc
  38:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stvec
  41:src/../h/riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stvec
  44:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // read register stval
  47:src/../h/riscv.hpp ****     static uint64 r_stval();
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // write register stval
  50:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSip
  53:src/../h/riscv.hpp ****     {
  54:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  55:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  56:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  57:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  58:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  59:src/../h/riscv.hpp ****     };
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask set register sip
  62:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask clear register sip
  65:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // read register sip
GAS LISTING /tmp/ccLMRHOZ.s 			page 5


  68:src/../h/riscv.hpp ****     static uint64 r_sip();
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // write register sip
  71:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     enum BitMaskSstatus
  74:src/../h/riscv.hpp ****     {
  75:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/riscv.hpp ****     };
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask set register sstatus
  81:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask clear register sstatus
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register sstatus
  87:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // write register sstatus
  90:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // mask set register sie
  93:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // mask clear register sie
  96:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     static void supervisorTrap();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static long r_a0();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static void w_a0(long a0);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static uint64 r_a1();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static uint64 r_a2();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void w_a2(uint64 a1);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static uint64 r_a3();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void w_a3(uint64 a1);
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void push_a0(long a0);
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** private:
 119:src/../h/riscv.hpp ****     static void trapHandler();
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** };
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
GAS LISTING /tmp/ccLMRHOZ.s 			page 6


 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile scause;
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 128:src/../h/riscv.hpp ****     return scause;
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     uint64 volatile sepc;
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 140:src/../h/riscv.hpp ****     return sepc;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     uint64 volatile stvec;
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 152:src/../h/riscv.hpp ****     return stvec;
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  85              		.loc 3 157 5 is_stmt 1
  86              		.loc 3 157 69 is_stmt 0
  87              	#APP
  88              	# 157 "src/../h/riscv.hpp" 1
 158              	}
  89              		csrw stvec, a5
  90              	# 0 "" 2
  91              	.LVL4:
  92              	#NO_APP
  93              	.LBE26:
  94              	.LBE25:
  26:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  95              		.loc 1 26 5 is_stmt 1
  96              	.LBB27:
  97              	.LBB28:
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     uint64 volatile stval;
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 164:src/../h/riscv.hpp ****     return stval;
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
GAS LISTING /tmp/ccLMRHOZ.s 			page 7


 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 178:src/../h/riscv.hpp **** {
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 180:src/../h/riscv.hpp **** }
 181:src/../h/riscv.hpp **** 
 182:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 183:src/../h/riscv.hpp **** {
 184:src/../h/riscv.hpp ****     uint64 volatile sip;
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 186:src/../h/riscv.hpp ****     return sip;
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 192:src/../h/riscv.hpp **** }
 193:src/../h/riscv.hpp **** 
 194:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 195:src/../h/riscv.hpp **** {
 196:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  98              		.loc 3 196 5
  99              		.loc 3 196 68 is_stmt 0
 100 009c 93072000 		li	a5,2
 101              	#APP
 102              	# 196 "src/../h/riscv.hpp" 1
 197              	}
 103              		csrs sstatus, a5
 104              	# 0 "" 2
 105              	.LVL5:
 106              	#NO_APP
 107              	.LBE28:
 108              	.LBE27:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     //printString("MAIN START\n");
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     thread_t t;
 109              		.loc 1 30 5 is_stmt 1
  31:src/main.cpp  ****     thread_create(&t, (void (*)(void *))(userMain), nullptr);
 110              		.loc 1 31 5
 111              		.loc 1 31 18 is_stmt 0
 112 00a4 13060000 		li	a2,0
 113 00a8 97050000 		la	a1,_Z8userMainv
 113      83B50500 
 114 00b0 130584FD 		addi	a0,s0,-40
 115 00b4 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 115      E7800000 
 116              	.LVL6:
 117              	.L4:
GAS LISTING /tmp/ccLMRHOZ.s 			page 8


  32:src/main.cpp  **** 
  33:src/main.cpp  ****     while(!((PCB*)t)->isFinished()){
 118              		.loc 1 33 5 is_stmt 1
 119              		.loc 1 33 11
 120              		.loc 1 33 33 is_stmt 0
 121 00bc 833484FD 		ld	s1,-40(s0)
 122              	.LVL7:
 123              	.LBB29:
 124              	.LBB30:
 125              		.file 4 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_1_PCB_HPP
   2:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_1_PCB_HPP
   3:src/../h/PCB.hpp **** 
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #include "Scheduler.hpp"
   6:src/../h/PCB.hpp **** #include "riscv.hpp"
   7:src/../h/PCB.hpp **** #include "../h/syscall_c.hpp"
   8:src/../h/PCB.hpp **** 
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** 
  11:src/../h/PCB.hpp **** 
  12:src/../h/PCB.hpp **** class PCB {
  13:src/../h/PCB.hpp **** public:
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     struct Context
  16:src/../h/PCB.hpp ****     {
  17:src/../h/PCB.hpp ****         uint64 ra;
  18:src/../h/PCB.hpp ****         uint64 sp;
  19:src/../h/PCB.hpp ****     };
  20:src/../h/PCB.hpp **** 
  21:src/../h/PCB.hpp ****     enum State{
  22:src/../h/PCB.hpp ****         READY,
  23:src/../h/PCB.hpp ****         RUNNING,
  24:src/../h/PCB.hpp ****         SUSPENDED,
  25:src/../h/PCB.hpp ****         FINISHED
  26:src/../h/PCB.hpp ****     };
  27:src/../h/PCB.hpp ****     ~PCB() { delete[] stack; }
  28:src/../h/PCB.hpp **** 
  29:src/../h/PCB.hpp ****     bool isFinished() const { return state==FINISHED; }
 126              		.loc 4 29 31 is_stmt 1
 127              		.loc 4 29 38 is_stmt 0
 128 00c0 03A78402 		lw	a4,40(s1)
 129              	.LVL8:
 130              	.LBE30:
 131              	.LBE29:
 132              		.loc 1 33 11
 133 00c4 93073000 		li	a5,3
 134 00c8 6308F700 		beq	a4,a5,.L3
  34:src/main.cpp  ****         thread_dispatch();
 135              		.loc 1 34 9 is_stmt 1
 136              		.loc 1 34 24 is_stmt 0
 137 00cc 97000000 		call	_Z15thread_dispatchv@plt
 137      E7800000 
 138              	.LVL9:
 139 00d4 6FF09FFE 		j	.L4
 140              	.L3:
  35:src/main.cpp  ****     }
GAS LISTING /tmp/ccLMRHOZ.s 			page 9


  36:src/main.cpp  **** 
  37:src/main.cpp  ****     delete (PCB*)t;
 141              		.loc 1 37 5 is_stmt 1
 142              		.loc 1 37 19 is_stmt 0
 143 00d8 63800402 		beqz	s1,.L5
 144              	.LVL10:
 145              	.LBB31:
 146              	.LBB32:
  27:src/../h/PCB.hpp **** 
 147              		.loc 4 27 14 is_stmt 1
  27:src/../h/PCB.hpp **** 
 148              		.loc 4 27 23 is_stmt 0
 149 00dc 03B58400 		ld	a0,8(s1)
  27:src/../h/PCB.hpp **** 
 150              		.loc 4 27 28
 151 00e0 63060500 		beqz	a0,.L6
  27:src/../h/PCB.hpp **** 
 152              		.loc 4 27 23
 153 00e4 97000000 		call	_ZdaPv@plt
 153      E7800000 
 154              	.LVL11:
 155              	.L6:
 156              	.LBE32:
 157              	.LBE31:
 158              		.loc 1 37 18
 159 00ec 13850400 		mv	a0,s1
 160 00f0 97000000 		call	_ZdlPv@plt
 160      E7800000 
 161              	.LVL12:
 162              	.L5:
  38:src/main.cpp  **** 
  39:src/main.cpp  ****     delete PCB::running;
 163              		.loc 1 39 5 is_stmt 1
 164              		.loc 1 39 17 is_stmt 0
 165 00f8 97070000 		la	a5,_ZN3PCB7runningE
 165      83B70700 
 166 0100 83B40700 		ld	s1,0(a5)
 167              		.loc 1 39 24
 168 0104 63800402 		beqz	s1,.L7
 169              	.LVL13:
 170              	.LBB33:
 171              	.LBB34:
  27:src/../h/PCB.hpp **** 
 172              		.loc 4 27 14 is_stmt 1
  27:src/../h/PCB.hpp **** 
 173              		.loc 4 27 23 is_stmt 0
 174 0108 03B58400 		ld	a0,8(s1)
  27:src/../h/PCB.hpp **** 
 175              		.loc 4 27 28
 176 010c 63060500 		beqz	a0,.L8
  27:src/../h/PCB.hpp **** 
 177              		.loc 4 27 23
 178 0110 97000000 		call	_ZdaPv@plt
 178      E7800000 
 179              	.LVL14:
 180              	.L8:
 181              	.LBE34:
GAS LISTING /tmp/ccLMRHOZ.s 			page 10


 182              	.LBE33:
 183              		.loc 1 39 17
 184 0118 13850400 		mv	a0,s1
 185 011c 97000000 		call	_ZdlPv@plt
 185      E7800000 
 186              	.LVL15:
 187              	.L7:
  40:src/main.cpp  **** 
  41:src/main.cpp  **** //    A* a0 = new A();
  42:src/main.cpp  **** //    B* b0 = new B();
  43:src/main.cpp  **** //    A* a1 = new A();
  44:src/main.cpp  **** //    a0->a = 0;
  45:src/main.cpp  **** //    a1->a = 1;
  46:src/main.cpp  **** //    b0->a = 10;
  47:src/main.cpp  **** //    delete(a0);
  48:src/main.cpp  **** //    B* b1 = new B();
  49:src/main.cpp  **** //    b1->a = 11;
  50:src/main.cpp  **** //    delete(a1);
  51:src/main.cpp  **** //    delete(b0);
  52:src/main.cpp  **** //    delete(b1);
  53:src/main.cpp  **** 
  54:src/main.cpp  **** 
  55:src/main.cpp  **** 
  56:src/main.cpp  ****     //printString("Finished\n");
  57:src/main.cpp  **** 
  58:src/main.cpp  ****     return 0;
 188              		.loc 1 58 5 is_stmt 1
  59:src/main.cpp  **** }
 189              		.loc 1 59 1 is_stmt 0
 190 0124 13050000 		li	a0,0
 191 0128 83308102 		ld	ra,40(sp)
 192              		.cfi_restore 1
 193 012c 03340102 		ld	s0,32(sp)
 194              		.cfi_restore 8
 195              		.cfi_def_cfa 2, 48
 196 0130 83348101 		ld	s1,24(sp)
 197              		.cfi_restore 9
 198 0134 13010103 		addi	sp,sp,48
 199              		.cfi_def_cfa_offset 0
 200 0138 67800000 		jr	ra
 201              		.cfi_endproc
 202              	.LFE48:
 204              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 205              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 206              		.align	3
 209              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 210 0000 00000000 		.zero	8
 210      00000000 
 211              		.text
 212              	.Letext0:
 213              		.file 5 "src/../h/../h/../lib/hw.h"
 214              		.file 6 "src/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/ccLMRHOZ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccLMRHOZ.s:9      .text:0000000000000000 main
     /tmp/ccLMRHOZ.s:13     .text:0000000000000000 .L0 
     /tmp/ccLMRHOZ.s:14     .text:0000000000000000 .L0 
     /tmp/ccLMRHOZ.s:15     .text:0000000000000004 .L0 
     /tmp/ccLMRHOZ.s:19     .text:0000000000000010 .L0 
     /tmp/ccLMRHOZ.s:20     .text:0000000000000010 .L0 
     /tmp/ccLMRHOZ.s:21     .text:0000000000000010 .L0 
     /tmp/ccLMRHOZ.s:23     .text:0000000000000014 .L0 
     /tmp/ccLMRHOZ.s:28     .text:0000000000000014 .L0 
     /tmp/ccLMRHOZ.s:29     .text:0000000000000014 .L0 
     /tmp/ccLMRHOZ.s:209    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccLMRHOZ.s:30     .text:0000000000000014 .L0 
     /tmp/ccLMRHOZ.s:42     .text:000000000000002c .L0 
     /tmp/ccLMRHOZ.s:43     .text:000000000000002c .L0 
     /tmp/ccLMRHOZ.s:44     .text:000000000000002c .L0 
     /tmp/ccLMRHOZ.s:49     .text:0000000000000044 .L0 
     /tmp/ccLMRHOZ.s:50     .text:0000000000000044 .L0 
     /tmp/ccLMRHOZ.s:53     .text:0000000000000050 .L0 
     /tmp/ccLMRHOZ.s:56     .text:0000000000000058 .L0 
     /tmp/ccLMRHOZ.s:58     .text:000000000000005c .L0 
     /tmp/ccLMRHOZ.s:59     .text:000000000000005c .L0 
     /tmp/ccLMRHOZ.s:61     .text:0000000000000060 .L0 
     /tmp/ccLMRHOZ.s:63     .text:0000000000000064 .L0 
     /tmp/ccLMRHOZ.s:64     .text:0000000000000064 .L0 
     /tmp/ccLMRHOZ.s:69     .text:0000000000000070 .L0 
     /tmp/ccLMRHOZ.s:70     .text:0000000000000070 .L0 
     /tmp/ccLMRHOZ.s:75     .text:0000000000000080 .L0 
     /tmp/ccLMRHOZ.s:78     .text:000000000000008c .L0 
     /tmp/ccLMRHOZ.s:79     .text:000000000000008c .L0 
     /tmp/ccLMRHOZ.s:86     .text:0000000000000098 .L0 
  src/../h/riscv.hpp:157    .text:0000000000000098 .L0 
     /tmp/ccLMRHOZ.s:98     .text:000000000000009c .L0 
     /tmp/ccLMRHOZ.s:99     .text:000000000000009c .L0 
     /tmp/ccLMRHOZ.s:100    .text:000000000000009c .L0 
     /tmp/ccLMRHOZ.s:110    .text:00000000000000a4 .L0 
     /tmp/ccLMRHOZ.s:111    .text:00000000000000a4 .L0 
     /tmp/ccLMRHOZ.s:112    .text:00000000000000a4 .L0 
     /tmp/ccLMRHOZ.s:119    .text:00000000000000bc .L0 
     /tmp/ccLMRHOZ.s:120    .text:00000000000000bc .L0 
     /tmp/ccLMRHOZ.s:121    .text:00000000000000bc .L0 
     /tmp/ccLMRHOZ.s:127    .text:00000000000000c0 .L0 
     /tmp/ccLMRHOZ.s:128    .text:00000000000000c0 .L0 
     /tmp/ccLMRHOZ.s:133    .text:00000000000000c4 .L0 
     /tmp/ccLMRHOZ.s:136    .text:00000000000000cc .L0 
     /tmp/ccLMRHOZ.s:137    .text:00000000000000cc .L0 
     /tmp/ccLMRHOZ.s:142    .text:00000000000000d8 .L0 
     /tmp/ccLMRHOZ.s:143    .text:00000000000000d8 .L0 
     /tmp/ccLMRHOZ.s:148    .text:00000000000000dc .L0 
     /tmp/ccLMRHOZ.s:149    .text:00000000000000dc .L0 
     /tmp/ccLMRHOZ.s:151    .text:00000000000000e0 .L0 
     /tmp/ccLMRHOZ.s:153    .text:00000000000000e4 .L0 
     /tmp/ccLMRHOZ.s:159    .text:00000000000000ec .L0 
     /tmp/ccLMRHOZ.s:164    .text:00000000000000f8 .L0 
     /tmp/ccLMRHOZ.s:165    .text:00000000000000f8 .L0 
     /tmp/ccLMRHOZ.s:168    .text:0000000000000104 .L0 
GAS LISTING /tmp/ccLMRHOZ.s 			page 12


     /tmp/ccLMRHOZ.s:173    .text:0000000000000108 .L0 
     /tmp/ccLMRHOZ.s:174    .text:0000000000000108 .L0 
     /tmp/ccLMRHOZ.s:176    .text:000000000000010c .L0 
     /tmp/ccLMRHOZ.s:178    .text:0000000000000110 .L0 
     /tmp/ccLMRHOZ.s:184    .text:0000000000000118 .L0 
     /tmp/ccLMRHOZ.s:189    .text:0000000000000124 .L0 
     /tmp/ccLMRHOZ.s:190    .text:0000000000000124 .L0 
     /tmp/ccLMRHOZ.s:192    .text:000000000000012c .L0 
     /tmp/ccLMRHOZ.s:194    .text:0000000000000130 .L0 
     /tmp/ccLMRHOZ.s:195    .text:0000000000000130 .L0 
     /tmp/ccLMRHOZ.s:197    .text:0000000000000134 .L0 
     /tmp/ccLMRHOZ.s:199    .text:0000000000000138 .L0 
     /tmp/ccLMRHOZ.s:201    .text:000000000000013c .L0 
     /tmp/ccLMRHOZ.s:215    .text:000000000000013c .L0 
     /tmp/ccLMRHOZ.s:30     .text:0000000000000014 .L0 
     /tmp/ccLMRHOZ.s:34     .text:0000000000000024 .L0 
     /tmp/ccLMRHOZ.s:44     .text:000000000000002c .L0 
     /tmp/ccLMRHOZ.s:46     .text:0000000000000038 .L0 
     /tmp/ccLMRHOZ.s:50     .text:0000000000000044 .L0 
     /tmp/ccLMRHOZ.s:64     .text:0000000000000064 .L0 
     /tmp/ccLMRHOZ.s:75     .text:0000000000000080 .L0 
     /tmp/ccLMRHOZ.s:79     .text:000000000000008c .L0 
     /tmp/ccLMRHOZ.s:113    .text:00000000000000a8 .L0 
     /tmp/ccLMRHOZ.s:165    .text:00000000000000f8 .L0 
     /tmp/ccLMRHOZ.s:36     .text:000000000000002c .L2
     /tmp/ccLMRHOZ.s:140    .text:00000000000000d8 .L3
     /tmp/ccLMRHOZ.s:117    .text:00000000000000bc .L4
     /tmp/ccLMRHOZ.s:162    .text:00000000000000f8 .L5
     /tmp/ccLMRHOZ.s:155    .text:00000000000000ec .L6
     /tmp/ccLMRHOZ.s:187    .text:0000000000000124 .L7
     /tmp/ccLMRHOZ.s:180    .text:0000000000000118 .L8
     /tmp/ccLMRHOZ.s:1325   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLMRHOZ.s:2586   .debug_str:000000000000078b .LASF147
     /tmp/ccLMRHOZ.s:2458   .debug_str:0000000000000478 .LASF148
     /tmp/ccLMRHOZ.s:2382   .debug_str:00000000000001f7 .LASF149
     /tmp/ccLMRHOZ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLMRHOZ.s:212    .text:000000000000013c .Letext0
     /tmp/ccLMRHOZ.s:2312   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLMRHOZ.s:2502   .debug_str:0000000000000597 .LASF0
     /tmp/ccLMRHOZ.s:2520   .debug_str:00000000000005dc .LASF1
     /tmp/ccLMRHOZ.s:2480   .debug_str:000000000000050a .LASF2
     /tmp/ccLMRHOZ.s:2444   .debug_str:0000000000000409 .LASF4
     /tmp/ccLMRHOZ.s:2562   .debug_str:00000000000006e2 .LASF3
     /tmp/ccLMRHOZ.s:2346   .debug_str:00000000000000fc .LASF5
     /tmp/ccLMRHOZ.s:2522   .debug_str:00000000000005ef .LASF6
     /tmp/ccLMRHOZ.s:2500   .debug_str:0000000000000584 .LASF7
     /tmp/ccLMRHOZ.s:2598   .debug_str:00000000000008a6 .LASF8
     /tmp/ccLMRHOZ.s:2426   .debug_str:0000000000000372 .LASF9
     /tmp/ccLMRHOZ.s:2538   .debug_str:0000000000000641 .LASF10
     /tmp/ccLMRHOZ.s:2590   .debug_str:000000000000085b .LASF11
     /tmp/ccLMRHOZ.s:2352   .debug_str:0000000000000114 .LASF12
     /tmp/ccLMRHOZ.s:2326   .debug_str:000000000000005a .LASF13
     /tmp/ccLMRHOZ.s:2370   .debug_str:00000000000001b0 .LASF14
     /tmp/ccLMRHOZ.s:2552   .debug_str:0000000000000692 .LASF15
     /tmp/ccLMRHOZ.s:2384   .debug_str:000000000000021a .LASF16
     /tmp/ccLMRHOZ.s:2378   .debug_str:00000000000001e5 .LASF150
     /tmp/ccLMRHOZ.s:2578   .debug_str:0000000000000753 .LASF17
GAS LISTING /tmp/ccLMRHOZ.s 			page 13


     /tmp/ccLMRHOZ.s:2624   .debug_str:000000000000096b .LASF18
     /tmp/ccLMRHOZ.s:2476   .debug_str:00000000000004f1 .LASF27
     /tmp/ccLMRHOZ.s:2394   .debug_str:000000000000027f .LASF71
     /tmp/ccLMRHOZ.s:2600   .debug_str:00000000000008b6 .LASF19
     /tmp/ccLMRHOZ.s:2576   .debug_str:0000000000000744 .LASF20
     /tmp/ccLMRHOZ.s:2588   .debug_str:000000000000084f .LASF45
     /tmp/ccLMRHOZ.s:2344   .debug_str:00000000000000d8 .LASF47
     /tmp/ccLMRHOZ.s:2530   .debug_str:0000000000000617 .LASF41
     /tmp/ccLMRHOZ.s:2584   .debug_str:000000000000076f .LASF43
     /tmp/ccLMRHOZ.s:2516   .debug_str:00000000000005cd .LASF21
     /tmp/ccLMRHOZ.s:2390   .debug_str:0000000000000253 .LASF23
     /tmp/ccLMRHOZ.s:2466   .debug_str:00000000000004b3 .LASF22
     /tmp/ccLMRHOZ.s:2456   .debug_str:0000000000000454 .LASF24
     /tmp/ccLMRHOZ.s:2596   .debug_str:000000000000088a .LASF35
     /tmp/ccLMRHOZ.s:2492   .debug_str:0000000000000559 .LASF25
     /tmp/ccLMRHOZ.s:2460   .debug_str:0000000000000485 .LASF26
     /tmp/ccLMRHOZ.s:2332   .debug_str:0000000000000080 .LASF151
     /tmp/ccLMRHOZ.s:2432   .debug_str:000000000000039b .LASF57
     /tmp/ccLMRHOZ.s:2536   .debug_str:000000000000063b .LASF28
     /tmp/ccLMRHOZ.s:2534   .debug_str:0000000000000633 .LASF29
     /tmp/ccLMRHOZ.s:2556   .debug_str:00000000000006b9 .LASF30
     /tmp/ccLMRHOZ.s:2570   .debug_str:000000000000071e .LASF31
     /tmp/ccLMRHOZ.s:2548   .debug_str:0000000000000682 .LASF32
     /tmp/ccLMRHOZ.s:2358   .debug_str:000000000000013a .LASF33
     /tmp/ccLMRHOZ.s:2524   .debug_str:0000000000000602 .LASF34
     /tmp/ccLMRHOZ.s:2532   .debug_str:000000000000061c .LASF36
     /tmp/ccLMRHOZ.s:2482   .debug_str:0000000000000518 .LASF37
     /tmp/ccLMRHOZ.s:2362   .debug_str:0000000000000162 .LASF38
     /tmp/ccLMRHOZ.s:2318   .debug_str:0000000000000010 .LASF39
     /tmp/ccLMRHOZ.s:2446   .debug_str:0000000000000410 .LASF40
     /tmp/ccLMRHOZ.s:2546   .debug_str:000000000000067d .LASF152
     /tmp/ccLMRHOZ.s:2506   .debug_str:00000000000005ab .LASF42
     /tmp/ccLMRHOZ.s:2436   .debug_str:00000000000003a9 .LASF44
     /tmp/ccLMRHOZ.s:2470   .debug_str:00000000000004d6 .LASF46
     /tmp/ccLMRHOZ.s:2328   .debug_str:000000000000006a .LASF48
     /tmp/ccLMRHOZ.s:2402   .debug_str:00000000000002d1 .LASF153
     /tmp/ccLMRHOZ.s:2604   .debug_str:00000000000008d9 .LASF154
     /tmp/ccLMRHOZ.s:2366   .debug_str:000000000000017e .LASF155
     /tmp/ccLMRHOZ.s:2574   .debug_str:000000000000073c .LASF125
     /tmp/ccLMRHOZ.s:2320   .debug_str:000000000000001d .LASF127
     /tmp/ccLMRHOZ.s:2420   .debug_str:0000000000000345 .LASF156
     /tmp/ccLMRHOZ.s:2450   .debug_str:000000000000043c .LASF49
     /tmp/ccLMRHOZ.s:2508   .debug_str:00000000000005b4 .LASF50
     /tmp/ccLMRHOZ.s:2510   .debug_str:00000000000005ba .LASF51
     /tmp/ccLMRHOZ.s:2454   .debug_str:000000000000044c .LASF52
     /tmp/ccLMRHOZ.s:2336   .debug_str:000000000000008e .LASF53
     /tmp/ccLMRHOZ.s:2314   .debug_str:0000000000000000 .LASF54
     /tmp/ccLMRHOZ.s:2442   .debug_str:0000000000000401 .LASF157
     /tmp/ccLMRHOZ.s:2408   .debug_str:00000000000002f5 .LASF55
     /tmp/ccLMRHOZ.s:2518   .debug_str:00000000000005d6 .LASF56
     /tmp/ccLMRHOZ.s:2388   .debug_str:0000000000000244 .LASF58
     /tmp/ccLMRHOZ.s:2380   .debug_str:00000000000001eb .LASF59
     /tmp/ccLMRHOZ.s:2462   .debug_str:00000000000004a1 .LASF60
     /tmp/ccLMRHOZ.s:2348   .debug_str:0000000000000103 .LASF61
     /tmp/ccLMRHOZ.s:2550   .debug_str:0000000000000687 .LASF62
     /tmp/ccLMRHOZ.s:2618   .debug_str:0000000000000937 .LASF63
     /tmp/ccLMRHOZ.s:2340   .debug_str:00000000000000b9 .LASF64
GAS LISTING /tmp/ccLMRHOZ.s 			page 14


     /tmp/ccLMRHOZ.s:2400   .debug_str:00000000000002b6 .LASF65
     /tmp/ccLMRHOZ.s:2410   .debug_str:00000000000002fa .LASF66
     /tmp/ccLMRHOZ.s:2322   .debug_str:000000000000002f .LASF67
     /tmp/ccLMRHOZ.s:2478   .debug_str:0000000000000501 .LASF68
     /tmp/ccLMRHOZ.s:2572   .debug_str:0000000000000727 .LASF69
     /tmp/ccLMRHOZ.s:2398   .debug_str:00000000000002ad .LASF70
     /tmp/ccLMRHOZ.s:2396   .debug_str:0000000000000298 .LASF72
     /tmp/ccLMRHOZ.s:2564   .debug_str:00000000000006f4 .LASF73
     /tmp/ccLMRHOZ.s:2544   .debug_str:000000000000066a .LASF74
     /tmp/ccLMRHOZ.s:2592   .debug_str:000000000000086a .LASF75
     /tmp/ccLMRHOZ.s:2424   .debug_str:000000000000035f .LASF76
     /tmp/ccLMRHOZ.s:2416   .debug_str:000000000000032f .LASF77
     /tmp/ccLMRHOZ.s:2386   .debug_str:0000000000000230 .LASF78
     /tmp/ccLMRHOZ.s:2610   .debug_str:0000000000000904 .LASF79
     /tmp/ccLMRHOZ.s:2566   .debug_str:00000000000006fb .LASF80
     /tmp/ccLMRHOZ.s:2404   .debug_str:00000000000002d9 .LASF81
     /tmp/ccLMRHOZ.s:2606   .debug_str:00000000000008e7 .LASF82
     /tmp/ccLMRHOZ.s:2434   .debug_str:00000000000003a1 .LASF83
     /tmp/ccLMRHOZ.s:2406   .debug_str:00000000000002e1 .LASF84
     /tmp/ccLMRHOZ.s:2504   .debug_str:00000000000005a4 .LASF85
     /tmp/ccLMRHOZ.s:2614   .debug_str:000000000000091f .LASF86
     /tmp/ccLMRHOZ.s:2316   .debug_str:0000000000000009 .LASF87
     /tmp/ccLMRHOZ.s:2414   .debug_str:000000000000031c .LASF88
     /tmp/ccLMRHOZ.s:2422   .debug_str:0000000000000359 .LASF89
     /tmp/ccLMRHOZ.s:2582   .debug_str:000000000000075d .LASF90
     /tmp/ccLMRHOZ.s:2334   .debug_str:0000000000000088 .LASF91
     /tmp/ccLMRHOZ.s:2630   .debug_str:0000000000000988 .LASF92
     /tmp/ccLMRHOZ.s:2622   .debug_str:0000000000000960 .LASF93
     /tmp/ccLMRHOZ.s:2558   .debug_str:00000000000006c3 .LASF94
     /tmp/ccLMRHOZ.s:2452   .debug_str:0000000000000441 .LASF95
     /tmp/ccLMRHOZ.s:2468   .debug_str:00000000000004be .LASF96
     /tmp/ccLMRHOZ.s:2368   .debug_str:00000000000001a6 .LASF97
     /tmp/ccLMRHOZ.s:2438   .debug_str:00000000000003bc .LASF98
     /tmp/ccLMRHOZ.s:2486   .debug_str:0000000000000537 .LASF99
     /tmp/ccLMRHOZ.s:2430   .debug_str:0000000000000385 .LASF100
     /tmp/ccLMRHOZ.s:2496   .debug_str:0000000000000577 .LASF101
     /tmp/ccLMRHOZ.s:2612   .debug_str:000000000000090c .LASF102
     /tmp/ccLMRHOZ.s:2330   .debug_str:0000000000000079 .LASF103
     /tmp/ccLMRHOZ.s:2484   .debug_str:0000000000000524 .LASF104
     /tmp/ccLMRHOZ.s:2568   .debug_str:000000000000070f .LASF105
     /tmp/ccLMRHOZ.s:2360   .debug_str:0000000000000146 .LASF106
     /tmp/ccLMRHOZ.s:2580   .debug_str:0000000000000758 .LASF107
     /tmp/ccLMRHOZ.s:2472   .debug_str:00000000000004db .LASF108
     /tmp/ccLMRHOZ.s:2428   .debug_str:0000000000000380 .LASF109
     /tmp/ccLMRHOZ.s:2488   .debug_str:0000000000000541 .LASF110
     /tmp/ccLMRHOZ.s:2464   .debug_str:00000000000004ae .LASF111
     /tmp/ccLMRHOZ.s:2620   .debug_str:000000000000094f .LASF112
     /tmp/ccLMRHOZ.s:2350   .debug_str:000000000000010f .LASF113
     /tmp/ccLMRHOZ.s:2324   .debug_str:0000000000000049 .LASF114
     /tmp/ccLMRHOZ.s:2526   .debug_str:000000000000060d .LASF115
     /tmp/ccLMRHOZ.s:2342   .debug_str:00000000000000c7 .LASF116
     /tmp/ccLMRHOZ.s:2514   .debug_str:00000000000005c8 .LASF117
     /tmp/ccLMRHOZ.s:2356   .debug_str:0000000000000129 .LASF118
     /tmp/ccLMRHOZ.s:2474   .debug_str:00000000000004ec .LASF119
     /tmp/ccLMRHOZ.s:2554   .debug_str:00000000000006a8 .LASF120
     /tmp/ccLMRHOZ.s:2354   .debug_str:0000000000000124 .LASF121
     /tmp/ccLMRHOZ.s:2372   .debug_str:00000000000001bc .LASF122
GAS LISTING /tmp/ccLMRHOZ.s 			page 15


     /tmp/ccLMRHOZ.s:2376   .debug_str:00000000000001dd .LASF123
     /tmp/ccLMRHOZ.s:2494   .debug_str:0000000000000563 .LASF124
     /tmp/ccLMRHOZ.s:2448   .debug_str:0000000000000430 .LASF126
     /tmp/ccLMRHOZ.s:2594   .debug_str:0000000000000871 .LASF128
     /tmp/ccLMRHOZ.s:2608   .debug_str:00000000000008fb .LASF129
     /tmp/ccLMRHOZ.s:2528   .debug_str:0000000000000612 .LASF130
     /tmp/ccLMRHOZ.s:2364   .debug_str:0000000000000179 .LASF131
     /tmp/ccLMRHOZ.s:10     .text:0000000000000000 .LFB48
     /tmp/ccLMRHOZ.s:202    .text:000000000000013c .LFE48
     /tmp/ccLMRHOZ.s:25     .text:0000000000000014 .LBB21
     /tmp/ccLMRHOZ.s:39     .text:000000000000002c .LBE21
     /tmp/ccLMRHOZ.s:40     .text:000000000000002c .LBB23
     /tmp/ccLMRHOZ.s:67     .text:0000000000000070 .LBE23
     /tmp/ccLMRHOZ.s:82     .text:0000000000000098 .LBB25
     /tmp/ccLMRHOZ.s:94     .text:000000000000009c .LBE25
     /tmp/ccLMRHOZ.s:2263   .debug_loc:0000000000000000 .LLST0
     /tmp/ccLMRHOZ.s:96     .text:000000000000009c .LBB27
     /tmp/ccLMRHOZ.s:108    .text:00000000000000a4 .LBE27
     /tmp/ccLMRHOZ.s:2270   .debug_loc:0000000000000023 .LLST1
     /tmp/ccLMRHOZ.s:123    .text:00000000000000c0 .LBB29
     /tmp/ccLMRHOZ.s:131    .text:00000000000000c4 .LBE29
     /tmp/ccLMRHOZ.s:2278   .debug_loc:0000000000000047 .LLST2
     /tmp/ccLMRHOZ.s:145    .text:00000000000000dc .LBB31
     /tmp/ccLMRHOZ.s:157    .text:00000000000000ec .LBE31
     /tmp/ccLMRHOZ.s:2285   .debug_loc:000000000000006a .LLST3
     /tmp/ccLMRHOZ.s:154    .text:00000000000000ec .LVL11
     /tmp/ccLMRHOZ.s:170    .text:0000000000000108 .LBB33
     /tmp/ccLMRHOZ.s:182    .text:0000000000000118 .LBE33
     /tmp/ccLMRHOZ.s:2292   .debug_loc:000000000000008d .LLST4
     /tmp/ccLMRHOZ.s:179    .text:0000000000000118 .LVL14
     /tmp/ccLMRHOZ.s:73     .text:0000000000000080 .LVL2
     /tmp/ccLMRHOZ.s:116    .text:00000000000000bc .LVL6
     /tmp/ccLMRHOZ.s:138    .text:00000000000000d4 .LVL9
     /tmp/ccLMRHOZ.s:161    .text:00000000000000f8 .LVL12
     /tmp/ccLMRHOZ.s:186    .text:0000000000000124 .LVL15
     /tmp/ccLMRHOZ.s:2626   .debug_str:0000000000000970 .LASF132
     /tmp/ccLMRHOZ.s:2498   .debug_str:000000000000057e .LASF133
     /tmp/ccLMRHOZ.s:2616   .debug_str:0000000000000932 .LASF134
     /tmp/ccLMRHOZ.s:2540   .debug_str:0000000000000650 .LASF135
     /tmp/ccLMRHOZ.s:2392   .debug_str:0000000000000273 .LASF137
     /tmp/ccLMRHOZ.s:2512   .debug_str:00000000000005bf .LASF136
     /tmp/ccLMRHOZ.s:2440   .debug_str:00000000000003d2 .LASF158
     /tmp/ccLMRHOZ.s:2602   .debug_str:00000000000008c0 .LASF138
     /tmp/ccLMRHOZ.s:2560   .debug_str:00000000000006db .LASF143
     /tmp/ccLMRHOZ.s:2628   .debug_str:0000000000000975 .LASF145
     /tmp/ccLMRHOZ.s:2338   .debug_str:0000000000000094 .LASF139
     /tmp/ccLMRHOZ.s:2418   .debug_str:0000000000000337 .LASF141
     /tmp/ccLMRHOZ.s:2412   .debug_str:0000000000000307 .LASF140
     /tmp/ccLMRHOZ.s:2374   .debug_str:00000000000001cd .LASF142
     /tmp/ccLMRHOZ.s:2490   .debug_str:0000000000000552 .LASF144
     /tmp/ccLMRHOZ.s:2542   .debug_str:000000000000065a .LASF146
     /tmp/ccLMRHOZ.s:81     .text:0000000000000098 .LVL3
     /tmp/ccLMRHOZ.s:91     .text:000000000000009c .LVL4
     /tmp/ccLMRHOZ.s:105    .text:00000000000000a4 .LVL5
     /tmp/ccLMRHOZ.s:122    .text:00000000000000c0 .LVL7
     /tmp/ccLMRHOZ.s:129    .text:00000000000000c4 .LVL8
     /tmp/ccLMRHOZ.s:144    .text:00000000000000dc .LVL10
GAS LISTING /tmp/ccLMRHOZ.s 			page 16


     /tmp/ccLMRHOZ.s:169    .text:0000000000000108 .LVL13
     /tmp/ccLMRHOZ.s:216    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
_ZN15MemoryAllocator9free_listE
HEAP_END_ADDR
_ZN15MemoryAllocator14allocated_listE
_ZN3PCB12createThreadEPFvPvES0_
_ZN3PCB7runningE
_ZN5Riscv14supervisorTrapEv
_Z8userMainv
_Z13thread_createPP7_threadPFvPvES2_
_Z15thread_dispatchv
_ZdaPv
_ZdlPv
