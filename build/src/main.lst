GAS LISTING /tmp/ccw2s4Na.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7createCm
   9              	_Z7createCm:
  10              	.LFB52:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../h/syscall_c.hpp"
   4:src/main.cpp  **** #include "../h/print.hpp"
   5:src/main.cpp  **** #include "../h/PCB.hpp"
   6:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   7:src/main.cpp  **** 
   8:src/main.cpp  **** 
   9:src/main.cpp  **** struct A {
  10:src/main.cpp  ****     int a;
  11:src/main.cpp  ****     int* b = nullptr;
  12:src/main.cpp  **** };
  13:src/main.cpp  **** 
  14:src/main.cpp  **** struct B {
  15:src/main.cpp  ****     int a;
  16:src/main.cpp  ****     int* b = nullptr;
  17:src/main.cpp  ****     long c;
  18:src/main.cpp  ****     char d[50];
  19:src/main.cpp  **** };
  20:src/main.cpp  **** 
  21:src/main.cpp  **** class C{
  22:src/main.cpp  **** private:
  23:src/main.cpp  ****     uint64 num;
  24:src/main.cpp  **** 
  25:src/main.cpp  **** public:
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     C(uint64 n){
  28:src/main.cpp  ****         num = n;
  29:src/main.cpp  ****     }
  30:src/main.cpp  **** 
  31:src/main.cpp  **** 
  32:src/main.cpp  **** 
  33:src/main.cpp  **** 
  34:src/main.cpp  **** };
  35:src/main.cpp  **** 
  36:src/main.cpp  **** C* createC(uint64 n){
  12              		.loc 1 36 21
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
  20              		.cfi_offset 1, -8
  21              		.cfi_offset 8, -16
  22              		.cfi_offset 9, -24
GAS LISTING /tmp/ccw2s4Na.s 			page 2


  23 0010 13040102 		addi	s0,sp,32
  24              		.cfi_def_cfa 8, 0
  25 0014 93040500 		mv	s1,a0
  37:src/main.cpp  ****     return new C(n);
  26              		.loc 1 37 5
  27              		.loc 1 37 19 is_stmt 0
  28 0018 13058000 		li	a0,8
  29              	.LVL1:
  30 001c 97000000 		call	_Znwm@plt
  30      E7800000 
  31              	.LVL2:
  32              	.LBB35:
  33              	.LBB36:
  28:src/main.cpp  ****     }
  34              		.loc 1 28 9 is_stmt 1
  28:src/main.cpp  ****     }
  35              		.loc 1 28 13 is_stmt 0
  36 0024 23309500 		sd	s1,0(a0)
  37              	.LVL3:
  38              	.LBE36:
  39              	.LBE35:
  38:src/main.cpp  **** }
  40              		.loc 1 38 1
  41 0028 83308101 		ld	ra,24(sp)
  42              		.cfi_restore 1
  43 002c 03340101 		ld	s0,16(sp)
  44              		.cfi_restore 8
  45              		.cfi_def_cfa 2, 32
  46 0030 83348100 		ld	s1,8(sp)
  47              		.cfi_restore 9
  48              	.LVL4:
  49 0034 13010102 		addi	sp,sp,32
  50              		.cfi_def_cfa_offset 0
  51 0038 67800000 		jr	ra
  52              		.cfi_endproc
  53              	.LFE52:
  55              		.align	2
  56              		.globl	main
  58              	main:
  59              	.LFB53:
  39:src/main.cpp  **** 
  40:src/main.cpp  **** extern void userMain();
  41:src/main.cpp  **** 
  42:src/main.cpp  **** int main() {
  60              		.loc 1 42 12 is_stmt 1
  61              		.cfi_startproc
  62 003c 130101FD 		addi	sp,sp,-48
  63              		.cfi_def_cfa_offset 48
  64 0040 23341102 		sd	ra,40(sp)
  65 0044 23308102 		sd	s0,32(sp)
  66 0048 233C9100 		sd	s1,24(sp)
  67 004c 23382101 		sd	s2,16(sp)
  68 0050 23343101 		sd	s3,8(sp)
  69 0054 23304101 		sd	s4,0(sp)
  70              		.cfi_offset 1, -8
  71              		.cfi_offset 8, -16
  72              		.cfi_offset 9, -24
GAS LISTING /tmp/ccw2s4Na.s 			page 3


  73              		.cfi_offset 18, -32
  74              		.cfi_offset 19, -40
  75              		.cfi_offset 20, -48
  76 0058 13040103 		addi	s0,sp,48
  77              		.cfi_def_cfa 8, 0
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  ****     MemoryAllocator::getInstance().init();
  78              		.loc 1 45 5
  79              	.LBB37:
  80              	.LBB38:
  81              		.file 2 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "print.hpp"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
  82              		.loc 2 26 9
  83              		.loc 2 26 32 is_stmt 0
  84 005c 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
  84      83C70700 
  85 0064 63980700 		bnez	a5,.L4
  86              	.LVL5:
  87 0068 93071000 		li	a5,1
  88 006c 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
  88      2300F700 
  89              	.LVL6:
  90              	.L4:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
  91              		.loc 2 27 9 is_stmt 1
  92              	.LBE38:
  93              	.LBE37:
  94              	.LBB39:
  95              	.LBB40:
  28:src/../h/../h/MemoryAllocator.hpp ****     }
  29:src/../h/../h/MemoryAllocator.hpp **** 
GAS LISTING /tmp/ccw2s4Na.s 			page 4


  30:src/../h/../h/MemoryAllocator.hpp ****     static void init() {
  31:src/../h/../h/MemoryAllocator.hpp ****         // Initialize the free list
  32:src/../h/../h/MemoryAllocator.hpp **** 
  33:src/../h/../h/MemoryAllocator.hpp ****         // For testing purposes
  34:src/../h/../h/MemoryAllocator.hpp **** //        uint64 start = (uint64)((Block *) HEAP_START_ADDR);
  35:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(start);
  36:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  37:src/../h/../h/MemoryAllocator.hpp **** //        uint64 end = (uint64)((Block *) HEAP_END_ADDR);
  38:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(end);
  39:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  40:src/../h/../h/MemoryAllocator.hpp **** 
  41:src/../h/../h/MemoryAllocator.hpp ****         free_list = (Block *) HEAP_START_ADDR;
  96              		.loc 2 41 9
  97              		.loc 2 41 19 is_stmt 0
  98 0074 97070000 		la	a5,HEAP_START_ADDR
  98      83B70700 
  99 007c 03B70700 		ld	a4,0(a5)
 100 0080 97060000 		la	a3,_ZN15MemoryAllocator9free_listE
 100      83B60600 
 101 0088 23B0E600 		sd	a4,0(a3)
  42:src/../h/../h/MemoryAllocator.hpp ****         free_list->size = (uint64 *) HEAP_END_ADDR - (uint64 *) HEAP_START_ADDR;
 102              		.loc 2 42 9 is_stmt 1
 103              		.loc 2 42 27 is_stmt 0
 104 008c 97070000 		la	a5,HEAP_END_ADDR
 104      83B70700 
 105 0094 83B70700 		ld	a5,0(a5)
 106              		.loc 2 42 52
 107 0098 B387E740 		sub	a5,a5,a4
 108 009c 93D73740 		srai	a5,a5,3
 109              		.loc 2 42 25
 110 00a0 2330F700 		sd	a5,0(a4)
  43:src/../h/../h/MemoryAllocator.hpp ****         free_list->next = nullptr;
 111              		.loc 2 43 9 is_stmt 1
 112              		.loc 2 43 20 is_stmt 0
 113 00a4 83B70600 		ld	a5,0(a3)
 114              		.loc 2 43 25
 115 00a8 23B40700 		sd	zero,8(a5)
  44:src/../h/../h/MemoryAllocator.hpp ****         allocated_list = nullptr;
 116              		.loc 2 44 9 is_stmt 1
 117              		.loc 2 44 24 is_stmt 0
 118 00ac 97070000 		la	a5,_ZN15MemoryAllocator14allocated_listE
 118      83B70700 
 119 00b4 23B00700 		sd	zero,0(a5)
 120              	.LBE40:
 121              	.LBE39:
  46:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap+1);
 122              		.loc 1 46 5 is_stmt 1
 123              		.loc 1 46 19 is_stmt 0
 124 00b8 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 124      83B70700 
 125 00c0 93871700 		addi	a5,a5,1
 126              	.LVL7:
 127              	.LBB41:
 128              	.LBB42:
 129              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
GAS LISTING /tmp/ccw2s4Na.s 			page 5


   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   6:src/../h/riscv.hpp **** #include "PCB.hpp"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  10:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  20:src/../h/riscv.hpp ****     static void popSppSpie();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void pushRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  26:src/../h/riscv.hpp ****     static void popRegisters();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register scause
  29:src/../h/riscv.hpp ****     static uint64 r_scause();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register scause
  32:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register sepc
  35:src/../h/riscv.hpp ****     static uint64 r_sepc();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register sepc
  38:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stvec
  41:src/../h/riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stvec
  44:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // read register stval
  47:src/../h/riscv.hpp ****     static uint64 r_stval();
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // write register stval
  50:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSip
  53:src/../h/riscv.hpp ****     {
  54:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  55:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  56:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  57:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  58:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  59:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccw2s4Na.s 			page 6


  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask set register sip
  62:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask clear register sip
  65:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // read register sip
  68:src/../h/riscv.hpp ****     static uint64 r_sip();
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // write register sip
  71:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     enum BitMaskSstatus
  74:src/../h/riscv.hpp ****     {
  75:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/riscv.hpp ****     };
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask set register sstatus
  81:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask clear register sstatus
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register sstatus
  87:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // write register sstatus
  90:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // mask set register sie
  93:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // mask clear register sie
  96:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     static void supervisorTrap();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static long r_a0();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static void w_a0(long a0);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static uint64 r_a1();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static uint64 r_a2();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void w_a2(uint64 a1);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static uint64 r_a3();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void w_a3(uint64 a1);
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void push_a0(long a0);
GAS LISTING /tmp/ccw2s4Na.s 			page 7


 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** private:
 119:src/../h/riscv.hpp ****     static void trapHandler();
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** };
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile scause;
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 128:src/../h/riscv.hpp ****     return scause;
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     uint64 volatile sepc;
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 140:src/../h/riscv.hpp ****     return sepc;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     uint64 volatile stvec;
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 152:src/../h/riscv.hpp ****     return stvec;
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130              		.loc 3 157 5 is_stmt 1
 131              		.loc 3 157 69 is_stmt 0
 132              	#APP
 133              	# 157 "src/../h/riscv.hpp" 1
 158              	}
 134              		csrw stvec, a5
 135              	# 0 "" 2
 136              	.LVL8:
 137              	#NO_APP
 138              	.LBE42:
 139              	.LBE41:
  47:src/main.cpp  ****     PCB* pcb = new PCB(nullptr, nullptr, nullptr);
 140              		.loc 1 47 5 is_stmt 1
 141              		.loc 1 47 49 is_stmt 0
 142 00c8 13050003 		li	a0,48
 143 00cc 97000000 		call	_Znwm@plt
GAS LISTING /tmp/ccw2s4Na.s 			page 8


 143      E7800000 
 144              	.LVL9:
 145 00d4 13090500 		mv	s2,a0
 146              	.LVL10:
 147              	.LBB43:
 148              	.LBB44:
 149              		.file 4 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_1_PCB_HPP
   2:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_1_PCB_HPP
   3:src/../h/PCB.hpp **** 
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #include "Scheduler.hpp"
   6:src/../h/PCB.hpp **** #include "riscv.hpp"
   7:src/../h/PCB.hpp **** #include "../h/syscall_c.hpp"
   8:src/../h/PCB.hpp **** 
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB {
  11:src/../h/PCB.hpp **** public:
  12:src/../h/PCB.hpp ****     struct Context {
  13:src/../h/PCB.hpp ****         uint64 ra;
  14:src/../h/PCB.hpp ****         uint64 sp;
  15:src/../h/PCB.hpp ****     };
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     enum State {
  18:src/../h/PCB.hpp ****         READY,
  19:src/../h/PCB.hpp ****         RUNNING,
  20:src/../h/PCB.hpp ****         SUSPENDED,
  21:src/../h/PCB.hpp ****         FINISHED
  22:src/../h/PCB.hpp ****     };
  23:src/../h/PCB.hpp **** 
  24:src/../h/PCB.hpp ****     ~PCB() { delete[] stack; }
  25:src/../h/PCB.hpp **** 
  26:src/../h/PCB.hpp ****     bool isFinished() const { return state == FINISHED; }
  27:src/../h/PCB.hpp **** 
  28:src/../h/PCB.hpp ****     void setState(State s) { state = s; }
  29:src/../h/PCB.hpp **** 
  30:src/../h/PCB.hpp ****     using Body = void (*)(void *);
  31:src/../h/PCB.hpp **** 
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     static void dispatch();
  34:src/../h/PCB.hpp **** 
  35:src/../h/PCB.hpp ****     static int exit();
  36:src/../h/PCB.hpp **** 
  37:src/../h/PCB.hpp **** 
  38:src/../h/PCB.hpp ****     static PCB *running;
  39:src/../h/PCB.hpp **** 
  40:src/../h/PCB.hpp **** private:
  41:src/../h/PCB.hpp **** 
  42:src/../h/PCB.hpp ****     static void contextSwitch(Context *old, Context *running);
  43:src/../h/PCB.hpp **** 
  44:src/../h/PCB.hpp ****     static void wrapper();
  45:src/../h/PCB.hpp **** 
  46:src/../h/PCB.hpp **** public:
  47:src/../h/PCB.hpp ****     PCB(Body body, void *args, uint64 *stack) {
  48:src/../h/PCB.hpp ****         this->body = body;
 150              		.loc 4 48 9 is_stmt 1
 151              		.loc 4 48 20 is_stmt 0
GAS LISTING /tmp/ccw2s4Na.s 			page 9


 152 00d8 23300500 		sd	zero,0(a0)
  49:src/../h/PCB.hpp **** 
  50:src/../h/PCB.hpp ****         this->stack = stack;
 153              		.loc 4 50 9 is_stmt 1
 154              		.loc 4 50 21 is_stmt 0
 155 00dc 23340500 		sd	zero,8(a0)
  51:src/../h/PCB.hpp ****         context = {(uint64) &wrapper,
 156              		.loc 4 51 9 is_stmt 1
 157              		.loc 4 51 17 is_stmt 0
 158 00e0 170A0000 		la	s4,_ZN3PCB7wrapperEv
 158      033A0A00 
 159 00e8 233C4501 		sd	s4,24(a0)
 160 00ec 23300502 		sd	zero,32(a0)
  52:src/../h/PCB.hpp ****                    stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE] : 0
  53:src/../h/PCB.hpp ****         };
  54:src/../h/PCB.hpp ****         this->args = args;
 161              		.loc 4 54 9 is_stmt 1
 162              		.loc 4 54 20 is_stmt 0
 163 00f0 23380500 		sd	zero,16(a0)
  55:src/../h/PCB.hpp ****         state = READY;
 164              		.loc 4 55 9 is_stmt 1
 165              	.LVL11:
 166              	.LBE44:
 167              	.LBE43:
  48:src/main.cpp  ****     PCB::running=pcb;
 168              		.loc 1 48 5
 169              		.loc 1 48 17 is_stmt 0
 170 00f4 97070000 		la	a5,_ZN3PCB7runningE
 170      83B70700 
 171 00fc 23B0A700 		sd	a0,0(a5)
  49:src/main.cpp  ****     pcb->setState(PCB::RUNNING);
 172              		.loc 1 49 5 is_stmt 1
 173              	.LVL12:
 174              	.LBB45:
 175              	.LBB46:
  28:src/../h/PCB.hpp **** 
 176              		.loc 4 28 30
  28:src/../h/PCB.hpp **** 
 177              		.loc 4 28 36 is_stmt 0
 178 0100 93071000 		li	a5,1
 179 0104 2324F502 		sw	a5,40(a0)
 180              	.LVL13:
 181              	.LBE46:
 182              	.LBE45:
  50:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 183              		.loc 1 50 5 is_stmt 1
 184              	.LBB47:
 185              	.LBB48:
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     uint64 volatile stval;
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 164:src/../h/riscv.hpp ****     return stval;
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
GAS LISTING /tmp/ccw2s4Na.s 			page 10


 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 178:src/../h/riscv.hpp **** {
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 180:src/../h/riscv.hpp **** }
 181:src/../h/riscv.hpp **** 
 182:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 183:src/../h/riscv.hpp **** {
 184:src/../h/riscv.hpp ****     uint64 volatile sip;
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 186:src/../h/riscv.hpp ****     return sip;
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 192:src/../h/riscv.hpp **** }
 193:src/../h/riscv.hpp **** 
 194:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 195:src/../h/riscv.hpp **** {
 196:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 186              		.loc 3 196 5
 187              		.loc 3 196 68 is_stmt 0
 188 0108 93072000 		li	a5,2
 189              	#APP
 190              	# 196 "src/../h/riscv.hpp" 1
 197              	}
 191              		csrs sstatus, a5
 192              	# 0 "" 2
 193              	.LVL14:
 194              	#NO_APP
 195              	.LBE48:
 196              	.LBE47:
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     switchToUserMode();
 197              		.loc 1 52 5 is_stmt 1
 198              		.loc 1 52 21 is_stmt 0
 199 0110 97000000 		call	_Z16switchToUserModev@plt
 199      E7800000 
 200              	.LVL15:
  53:src/main.cpp  **** 
  54:src/main.cpp  ****     uint64* stack = (uint64*)MemoryAllocator::getInstance().allocate(((DEFAULT_STACK_SIZE + 16+ MEM
 201              		.loc 1 54 5 is_stmt 1
 202              	.LBB49:
 203              	.LBB50:
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 204              		.loc 2 26 9
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 205              		.loc 2 26 32 is_stmt 0
GAS LISTING /tmp/ccw2s4Na.s 			page 11


 206 0118 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 206      83C70700 
 207 0120 63980700 		bnez	a5,.L5
 208              	.LVL16:
 209 0124 93071000 		li	a5,1
 210 0128 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 210      2300F700 
 211              	.LVL17:
 212              	.L5:
  27:src/../h/../h/MemoryAllocator.hpp ****     }
 213              		.loc 2 27 9 is_stmt 1
 214              	.LBE50:
 215              	.LBE49:
 216              		.loc 1 54 134 is_stmt 0
 217 0130 13051004 		li	a0,65
 218 0134 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 218      E7800000 
 219              	.LVL18:
 220 013c 93090500 		mv	s3,a0
 221              	.LVL19:
  55:src/main.cpp  ****     PCB* usrT = new PCB((void (*)(void *))(userMain), nullptr, stack);
 222              		.loc 1 55 5 is_stmt 1
 223              		.loc 1 55 69 is_stmt 0
 224 0140 13050003 		li	a0,48
 225              	.LVL20:
 226 0144 97000000 		call	_Znwm@plt
 226      E7800000 
 227              	.LVL21:
 228 014c 93040500 		mv	s1,a0
 229              	.LVL22:
 230              	.LBB51:
 231              	.LBB52:
  48:src/../h/PCB.hpp **** 
 232              		.loc 4 48 9 is_stmt 1
  48:src/../h/PCB.hpp **** 
 233              		.loc 4 48 20 is_stmt 0
 234 0150 97070000 		la	a5,_Z8userMainv
 234      83B70700 
 235 0158 2330F500 		sd	a5,0(a0)
  50:src/../h/PCB.hpp ****         context = {(uint64) &wrapper,
 236              		.loc 4 50 9 is_stmt 1
  50:src/../h/PCB.hpp ****         context = {(uint64) &wrapper,
 237              		.loc 4 50 21 is_stmt 0
 238 015c 23343501 		sd	s3,8(a0)
  51:src/../h/PCB.hpp ****                    stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE] : 0
 239              		.loc 4 51 9 is_stmt 1
  52:src/../h/PCB.hpp ****         };
 240              		.loc 4 52 37 is_stmt 0
 241 0160 63800904 		beqz	s3,.L13
  52:src/../h/PCB.hpp ****         };
 242              		.loc 4 52 48
 243 0164 37850000 		li	a0,32768
 244 0168 B389A900 		add	s3,s3,a0
 245              	.LVL23:
 246              	.L6:
  51:src/../h/PCB.hpp ****                    stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE] : 0
 247              		.loc 4 51 17
GAS LISTING /tmp/ccw2s4Na.s 			page 12


 248 016c 23BC4401 		sd	s4,24(s1)
 249 0170 23B03403 		sd	s3,32(s1)
  54:src/../h/PCB.hpp ****         state = READY;
 250              		.loc 4 54 9 is_stmt 1
  54:src/../h/PCB.hpp ****         state = READY;
 251              		.loc 4 54 20 is_stmt 0
 252 0174 23B80400 		sd	zero,16(s1)
 253              		.loc 4 55 9 is_stmt 1
 254              		.loc 4 55 15 is_stmt 0
 255 0178 23A40402 		sw	zero,40(s1)
 256              	.LVL24:
 257              	.LBE52:
 258              	.LBE51:
  56:src/main.cpp  ****     Scheduler::put(usrT);
 259              		.loc 1 56 5 is_stmt 1
 260              		.loc 1 56 19 is_stmt 0
 261 017c 13850400 		mv	a0,s1
 262 0180 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 262      E7800000 
 263              	.LVL25:
 264              	.L8:
  57:src/main.cpp  **** 
  58:src/main.cpp  **** 
  59:src/main.cpp  ****     while (!usrT->isFinished()){
 265              		.loc 1 59 5 is_stmt 1
 266              		.loc 1 59 12
 267              	.LBB54:
 268              	.LBB55:
  26:src/../h/PCB.hpp **** 
 269              		.loc 4 26 31
  26:src/../h/PCB.hpp **** 
 270              		.loc 4 26 38 is_stmt 0
 271 0188 03A78402 		lw	a4,40(s1)
 272              	.LVL26:
 273              	.LBE55:
 274              	.LBE54:
 275              		.loc 1 59 12
 276 018c 93073000 		li	a5,3
 277 0190 630CF700 		beq	a4,a5,.L7
  60:src/main.cpp  ****         thread_dispatch();
 278              		.loc 1 60 9 is_stmt 1
 279              		.loc 1 60 24 is_stmt 0
 280 0194 97000000 		call	_Z15thread_dispatchv@plt
 280      E7800000 
 281              	.LVL27:
  59:src/main.cpp  ****         thread_dispatch();
 282              		.loc 1 59 5
 283 019c 6FF0DFFE 		j	.L8
 284              	.LVL28:
 285              	.L13:
 286              	.LBB56:
 287              	.LBB53:
  52:src/../h/PCB.hpp ****         };
 288              		.loc 4 52 37
 289 01a0 93090000 		li	s3,0
 290              	.LVL29:
 291 01a4 6FF09FFC 		j	.L6
GAS LISTING /tmp/ccw2s4Na.s 			page 13


 292              	.LVL30:
 293              	.L7:
 294              	.LBE53:
 295              	.LBE56:
  61:src/main.cpp  ****     }
  62:src/main.cpp  **** 
  63:src/main.cpp  **** 
  64:src/main.cpp  ****     delete usrT;
 296              		.loc 1 64 5 is_stmt 1
 297              		.loc 1 64 16 is_stmt 0
 298 01a8 63800402 		beqz	s1,.L9
 299              	.LVL31:
 300              	.LBB57:
 301              	.LBB58:
  24:src/../h/PCB.hpp **** 
 302              		.loc 4 24 14 is_stmt 1
  24:src/../h/PCB.hpp **** 
 303              		.loc 4 24 23 is_stmt 0
 304 01ac 03B58400 		ld	a0,8(s1)
  24:src/../h/PCB.hpp **** 
 305              		.loc 4 24 28
 306 01b0 63060500 		beqz	a0,.L10
  24:src/../h/PCB.hpp **** 
 307              		.loc 4 24 23
 308 01b4 97000000 		call	_ZdaPv@plt
 308      E7800000 
 309              	.LVL32:
 310              	.L10:
 311              	.LBE58:
 312              	.LBE57:
 313              		.loc 1 64 12
 314 01bc 13850400 		mv	a0,s1
 315 01c0 97000000 		call	_ZdlPv@plt
 315      E7800000 
 316              	.LVL33:
 317              	.L9:
  65:src/main.cpp  ****     delete pcb;
 318              		.loc 1 65 5 is_stmt 1
 319              		.loc 1 65 15 is_stmt 0
 320 01c8 63000902 		beqz	s2,.L11
 321              	.LVL34:
 322              	.LBB59:
 323              	.LBB60:
  24:src/../h/PCB.hpp **** 
 324              		.loc 4 24 14 is_stmt 1
  24:src/../h/PCB.hpp **** 
 325              		.loc 4 24 23 is_stmt 0
 326 01cc 03358900 		ld	a0,8(s2)
  24:src/../h/PCB.hpp **** 
 327              		.loc 4 24 28
 328 01d0 63060500 		beqz	a0,.L12
  24:src/../h/PCB.hpp **** 
 329              		.loc 4 24 23
 330 01d4 97000000 		call	_ZdaPv@plt
 330      E7800000 
 331              	.LVL35:
 332              	.L12:
GAS LISTING /tmp/ccw2s4Na.s 			page 14


 333              	.LBE60:
 334              	.LBE59:
 335              		.loc 1 65 12
 336 01dc 13050900 		mv	a0,s2
 337 01e0 97000000 		call	_ZdlPv@plt
 337      E7800000 
 338              	.LVL36:
 339              	.L11:
  66:src/main.cpp  **** 
  67:src/main.cpp  ****     //printString("MAIN START\n");
  68:src/main.cpp  **** 
  69:src/main.cpp  **** 
  70:src/main.cpp  **** 
  71:src/main.cpp  **** 
  72:src/main.cpp  ****     //printString("Finished\n");
  73:src/main.cpp  **** 
  74:src/main.cpp  ****     return 0;
 340              		.loc 1 74 5 is_stmt 1
  75:src/main.cpp  **** }...
 341              		.loc 1 75 1 is_stmt 0
 342 01e8 13050000 		li	a0,0
 343 01ec 83308102 		ld	ra,40(sp)
 344              		.cfi_restore 1
 345 01f0 03340102 		ld	s0,32(sp)
 346              		.cfi_restore 8
 347              		.cfi_def_cfa 2, 48
 348 01f4 83348101 		ld	s1,24(sp)
 349              		.cfi_restore 9
 350              	.LVL37:
 351 01f8 03390101 		ld	s2,16(sp)
 352              		.cfi_restore 18
 353              	.LVL38:
 354 01fc 83398100 		ld	s3,8(sp)
 355              		.cfi_restore 19
 356 0200 033A0100 		ld	s4,0(sp)
 357              		.cfi_restore 20
 358 0204 13010103 		addi	sp,sp,48
 359              		.cfi_def_cfa_offset 0
 360 0208 67800000 		jr	ra
 361              		.cfi_endproc
 362              	.LFE53:
 364              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 365              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 366              		.align	3
 369              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 370 0000 00000000 		.zero	8
 370      00000000 
 371              		.text
 372              	.Letext0:
 373              		.file 5 "src/../h/../h/../lib/hw.h"
 374              		.file 6 "src/../h/Scheduler.hpp"
 375              		.file 7 "src/../h/syscall_cpp.hpp"
 376              		.file 8 "src/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/ccw2s4Na.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccw2s4Na.s:9      .text:0000000000000000 _Z7createCm
     /tmp/ccw2s4Na.s:13     .text:0000000000000000 .L0 
     /tmp/ccw2s4Na.s:15     .text:0000000000000000 .L0 
     /tmp/ccw2s4Na.s:16     .text:0000000000000004 .L0 
     /tmp/ccw2s4Na.s:20     .text:0000000000000010 .L0 
     /tmp/ccw2s4Na.s:21     .text:0000000000000010 .L0 
     /tmp/ccw2s4Na.s:22     .text:0000000000000010 .L0 
     /tmp/ccw2s4Na.s:24     .text:0000000000000014 .L0 
     /tmp/ccw2s4Na.s:27     .text:0000000000000018 .L0 
     /tmp/ccw2s4Na.s:28     .text:0000000000000018 .L0 
     /tmp/ccw2s4Na.s:35     .text:0000000000000024 .L0 
     /tmp/ccw2s4Na.s:36     .text:0000000000000024 .L0 
     /tmp/ccw2s4Na.s:41     .text:0000000000000028 .L0 
     /tmp/ccw2s4Na.s:42     .text:000000000000002c .L0 
     /tmp/ccw2s4Na.s:44     .text:0000000000000030 .L0 
     /tmp/ccw2s4Na.s:45     .text:0000000000000030 .L0 
     /tmp/ccw2s4Na.s:47     .text:0000000000000034 .L0 
     /tmp/ccw2s4Na.s:50     .text:0000000000000038 .L0 
     /tmp/ccw2s4Na.s:52     .text:000000000000003c .L0 
     /tmp/ccw2s4Na.s:58     .text:000000000000003c main
     /tmp/ccw2s4Na.s:61     .text:000000000000003c .L0 
     /tmp/ccw2s4Na.s:62     .text:000000000000003c .L0 
     /tmp/ccw2s4Na.s:63     .text:0000000000000040 .L0 
     /tmp/ccw2s4Na.s:70     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:71     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:72     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:73     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:74     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:75     .text:0000000000000058 .L0 
     /tmp/ccw2s4Na.s:77     .text:000000000000005c .L0 
     /tmp/ccw2s4Na.s:82     .text:000000000000005c .L0 
     /tmp/ccw2s4Na.s:83     .text:000000000000005c .L0 
     /tmp/ccw2s4Na.s:369    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccw2s4Na.s:84     .text:000000000000005c .L0 
     /tmp/ccw2s4Na.s:96     .text:0000000000000074 .L0 
     /tmp/ccw2s4Na.s:97     .text:0000000000000074 .L0 
     /tmp/ccw2s4Na.s:98     .text:0000000000000074 .L0 
     /tmp/ccw2s4Na.s:103    .text:000000000000008c .L0 
     /tmp/ccw2s4Na.s:104    .text:000000000000008c .L0 
     /tmp/ccw2s4Na.s:107    .text:0000000000000098 .L0 
     /tmp/ccw2s4Na.s:110    .text:00000000000000a0 .L0 
     /tmp/ccw2s4Na.s:112    .text:00000000000000a4 .L0 
     /tmp/ccw2s4Na.s:113    .text:00000000000000a4 .L0 
     /tmp/ccw2s4Na.s:115    .text:00000000000000a8 .L0 
     /tmp/ccw2s4Na.s:117    .text:00000000000000ac .L0 
     /tmp/ccw2s4Na.s:118    .text:00000000000000ac .L0 
     /tmp/ccw2s4Na.s:123    .text:00000000000000b8 .L0 
     /tmp/ccw2s4Na.s:124    .text:00000000000000b8 .L0 
     /tmp/ccw2s4Na.s:131    .text:00000000000000c4 .L0 
  src/../h/riscv.hpp:157    .text:00000000000000c4 .L0 
     /tmp/ccw2s4Na.s:141    .text:00000000000000c8 .L0 
     /tmp/ccw2s4Na.s:142    .text:00000000000000c8 .L0 
     /tmp/ccw2s4Na.s:151    .text:00000000000000d8 .L0 
     /tmp/ccw2s4Na.s:152    .text:00000000000000d8 .L0 
     /tmp/ccw2s4Na.s:154    .text:00000000000000dc .L0 
GAS LISTING /tmp/ccw2s4Na.s 			page 16


     /tmp/ccw2s4Na.s:155    .text:00000000000000dc .L0 
     /tmp/ccw2s4Na.s:157    .text:00000000000000e0 .L0 
     /tmp/ccw2s4Na.s:158    .text:00000000000000e0 .L0 
     /tmp/ccw2s4Na.s:162    .text:00000000000000f0 .L0 
     /tmp/ccw2s4Na.s:163    .text:00000000000000f0 .L0 
     /tmp/ccw2s4Na.s:168    .text:00000000000000f4 .L0 
     /tmp/ccw2s4Na.s:169    .text:00000000000000f4 .L0 
     /tmp/ccw2s4Na.s:170    .text:00000000000000f4 .L0 
     /tmp/ccw2s4Na.s:176    .text:0000000000000100 .L0 
     /tmp/ccw2s4Na.s:177    .text:0000000000000100 .L0 
     /tmp/ccw2s4Na.s:178    .text:0000000000000100 .L0 
     /tmp/ccw2s4Na.s:186    .text:0000000000000108 .L0 
     /tmp/ccw2s4Na.s:187    .text:0000000000000108 .L0 
     /tmp/ccw2s4Na.s:188    .text:0000000000000108 .L0 
     /tmp/ccw2s4Na.s:198    .text:0000000000000110 .L0 
     /tmp/ccw2s4Na.s:199    .text:0000000000000110 .L0 
     /tmp/ccw2s4Na.s:204    .text:0000000000000118 .L0 
     /tmp/ccw2s4Na.s:205    .text:0000000000000118 .L0 
     /tmp/ccw2s4Na.s:206    .text:0000000000000118 .L0 
     /tmp/ccw2s4Na.s:216    .text:0000000000000130 .L0 
     /tmp/ccw2s4Na.s:217    .text:0000000000000130 .L0 
     /tmp/ccw2s4Na.s:223    .text:0000000000000140 .L0 
     /tmp/ccw2s4Na.s:224    .text:0000000000000140 .L0 
     /tmp/ccw2s4Na.s:233    .text:0000000000000150 .L0 
     /tmp/ccw2s4Na.s:234    .text:0000000000000150 .L0 
     /tmp/ccw2s4Na.s:237    .text:000000000000015c .L0 
     /tmp/ccw2s4Na.s:238    .text:000000000000015c .L0 
     /tmp/ccw2s4Na.s:240    .text:0000000000000160 .L0 
     /tmp/ccw2s4Na.s:241    .text:0000000000000160 .L0 
     /tmp/ccw2s4Na.s:243    .text:0000000000000164 .L0 
     /tmp/ccw2s4Na.s:248    .text:000000000000016c .L0 
     /tmp/ccw2s4Na.s:251    .text:0000000000000174 .L0 
     /tmp/ccw2s4Na.s:252    .text:0000000000000174 .L0 
     /tmp/ccw2s4Na.s:254    .text:0000000000000178 .L0 
     /tmp/ccw2s4Na.s:255    .text:0000000000000178 .L0 
     /tmp/ccw2s4Na.s:260    .text:000000000000017c .L0 
     /tmp/ccw2s4Na.s:261    .text:000000000000017c .L0 
     /tmp/ccw2s4Na.s:266    .text:0000000000000188 .L0 
     /tmp/ccw2s4Na.s:269    .text:0000000000000188 .L0 
     /tmp/ccw2s4Na.s:270    .text:0000000000000188 .L0 
     /tmp/ccw2s4Na.s:271    .text:0000000000000188 .L0 
     /tmp/ccw2s4Na.s:276    .text:000000000000018c .L0 
     /tmp/ccw2s4Na.s:279    .text:0000000000000194 .L0 
     /tmp/ccw2s4Na.s:280    .text:0000000000000194 .L0 
     /tmp/ccw2s4Na.s:283    .text:000000000000019c .L0 
     /tmp/ccw2s4Na.s:289    .text:00000000000001a0 .L0 
     /tmp/ccw2s4Na.s:297    .text:00000000000001a8 .L0 
     /tmp/ccw2s4Na.s:298    .text:00000000000001a8 .L0 
     /tmp/ccw2s4Na.s:303    .text:00000000000001ac .L0 
     /tmp/ccw2s4Na.s:304    .text:00000000000001ac .L0 
     /tmp/ccw2s4Na.s:306    .text:00000000000001b0 .L0 
     /tmp/ccw2s4Na.s:308    .text:00000000000001b4 .L0 
     /tmp/ccw2s4Na.s:314    .text:00000000000001bc .L0 
     /tmp/ccw2s4Na.s:319    .text:00000000000001c8 .L0 
     /tmp/ccw2s4Na.s:320    .text:00000000000001c8 .L0 
     /tmp/ccw2s4Na.s:325    .text:00000000000001cc .L0 
     /tmp/ccw2s4Na.s:326    .text:00000000000001cc .L0 
GAS LISTING /tmp/ccw2s4Na.s 			page 17


     /tmp/ccw2s4Na.s:328    .text:00000000000001d0 .L0 
     /tmp/ccw2s4Na.s:330    .text:00000000000001d4 .L0 
     /tmp/ccw2s4Na.s:336    .text:00000000000001dc .L0 
     /tmp/ccw2s4Na.s:341    .text:00000000000001e8 .L0 
     /tmp/ccw2s4Na.s:342    .text:00000000000001e8 .L0 
     /tmp/ccw2s4Na.s:344    .text:00000000000001f0 .L0 
     /tmp/ccw2s4Na.s:346    .text:00000000000001f4 .L0 
     /tmp/ccw2s4Na.s:347    .text:00000000000001f4 .L0 
     /tmp/ccw2s4Na.s:349    .text:00000000000001f8 .L0 
     /tmp/ccw2s4Na.s:352    .text:00000000000001fc .L0 
     /tmp/ccw2s4Na.s:355    .text:0000000000000200 .L0 
     /tmp/ccw2s4Na.s:357    .text:0000000000000204 .L0 
     /tmp/ccw2s4Na.s:359    .text:0000000000000208 .L0 
     /tmp/ccw2s4Na.s:361    .text:000000000000020c .L0 
     /tmp/ccw2s4Na.s:377    .text:000000000000020c .L0 
     /tmp/ccw2s4Na.s:84     .text:000000000000005c .L0 
     /tmp/ccw2s4Na.s:88     .text:000000000000006c .L0 
     /tmp/ccw2s4Na.s:98     .text:0000000000000074 .L0 
     /tmp/ccw2s4Na.s:100    .text:0000000000000080 .L0 
     /tmp/ccw2s4Na.s:104    .text:000000000000008c .L0 
     /tmp/ccw2s4Na.s:118    .text:00000000000000ac .L0 
     /tmp/ccw2s4Na.s:124    .text:00000000000000b8 .L0 
     /tmp/ccw2s4Na.s:158    .text:00000000000000e0 .L0 
     /tmp/ccw2s4Na.s:170    .text:00000000000000f4 .L0 
     /tmp/ccw2s4Na.s:206    .text:0000000000000118 .L0 
     /tmp/ccw2s4Na.s:210    .text:0000000000000128 .L0 
     /tmp/ccw2s4Na.s:234    .text:0000000000000150 .L0 
     /tmp/ccw2s4Na.s:90     .text:0000000000000074 .L4
     /tmp/ccw2s4Na.s:212    .text:0000000000000130 .L5
     /tmp/ccw2s4Na.s:285    .text:00000000000001a0 .L13
     /tmp/ccw2s4Na.s:293    .text:00000000000001a8 .L7
     /tmp/ccw2s4Na.s:264    .text:0000000000000188 .L8
     /tmp/ccw2s4Na.s:246    .text:000000000000016c .L6
     /tmp/ccw2s4Na.s:317    .text:00000000000001c8 .L9
     /tmp/ccw2s4Na.s:310    .text:00000000000001bc .L10
     /tmp/ccw2s4Na.s:339    .text:00000000000001e8 .L11
     /tmp/ccw2s4Na.s:332    .text:00000000000001dc .L12
     /tmp/ccw2s4Na.s:1786   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccw2s4Na.s:3404   .debug_str:0000000000000784 .LASF157
     /tmp/ccw2s4Na.s:3220   .debug_str:000000000000028e .LASF158
     /tmp/ccw2s4Na.s:3412   .debug_str:000000000000087f .LASF159
     /tmp/ccw2s4Na.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccw2s4Na.s:372    .text:000000000000020c .Letext0
     /tmp/ccw2s4Na.s:3130   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccw2s4Na.s:3246   .debug_str:000000000000033f .LASF0
     /tmp/ccw2s4Na.s:3278   .debug_str:000000000000041f .LASF1
     /tmp/ccw2s4Na.s:3346   .debug_str:000000000000060e .LASF2
     /tmp/ccw2s4Na.s:3356   .debug_str:0000000000000656 .LASF4
     /tmp/ccw2s4Na.s:3256   .debug_str:000000000000038f .LASF3
     /tmp/ccw2s4Na.s:3138   .debug_str:0000000000000021 .LASF5
     /tmp/ccw2s4Na.s:3324   .debug_str:0000000000000569 .LASF6
     /tmp/ccw2s4Na.s:3272   .debug_str:00000000000003f4 .LASF7
     /tmp/ccw2s4Na.s:3230   .debug_str:00000000000002b6 .LASF8
     /tmp/ccw2s4Na.s:3236   .debug_str:00000000000002eb .LASF9
     /tmp/ccw2s4Na.s:3168   .debug_str:0000000000000125 .LASF10
     /tmp/ccw2s4Na.s:3218   .debug_str:000000000000027f .LASF11
     /tmp/ccw2s4Na.s:3180   .debug_str:000000000000016a .LASF12
GAS LISTING /tmp/ccw2s4Na.s 			page 18


     /tmp/ccw2s4Na.s:3166   .debug_str:0000000000000115 .LASF13
     /tmp/ccw2s4Na.s:3388   .debug_str:0000000000000733 .LASF14
     /tmp/ccw2s4Na.s:3204   .debug_str:0000000000000210 .LASF15
     /tmp/ccw2s4Na.s:3380   .debug_str:00000000000006f6 .LASF16
     /tmp/ccw2s4Na.s:3264   .debug_str:00000000000003d3 .LASF160
     /tmp/ccw2s4Na.s:3276   .debug_str:000000000000041a .LASF17
     /tmp/ccw2s4Na.s:3170   .debug_str:0000000000000134 .LASF18
     /tmp/ccw2s4Na.s:3320   .debug_str:0000000000000548 .LASF27
     /tmp/ccw2s4Na.s:3150   .debug_str:000000000000008f .LASF57
     /tmp/ccw2s4Na.s:3422   .debug_str:00000000000008d7 .LASF19
     /tmp/ccw2s4Na.s:3382   .debug_str:000000000000070c .LASF20
     /tmp/ccw2s4Na.s:3454   .debug_str:0000000000000987 .LASF30
     /tmp/ccw2s4Na.s:3294   .debug_str:0000000000000492 .LASF49
     /tmp/ccw2s4Na.s:3156   .debug_str:00000000000000e6 .LASF31
     /tmp/ccw2s4Na.s:3468   .debug_str:00000000000009ef .LASF33
     /tmp/ccw2s4Na.s:3474   .debug_str:0000000000000a20 .LASF21
     /tmp/ccw2s4Na.s:3234   .debug_str:00000000000002cb .LASF23
     /tmp/ccw2s4Na.s:3290   .debug_str:0000000000000471 .LASF22
     /tmp/ccw2s4Na.s:3316   .debug_str:000000000000051c .LASF24
     /tmp/ccw2s4Na.s:3260   .debug_str:00000000000003b2 .LASF42
     /tmp/ccw2s4Na.s:3348   .debug_str:000000000000061c .LASF25
     /tmp/ccw2s4Na.s:3426   .debug_str:00000000000008e6 .LASF26
     /tmp/ccw2s4Na.s:3228   .debug_str:00000000000002ac .LASF28
     /tmp/ccw2s4Na.s:3178   .debug_str:000000000000015f .LASF29
     /tmp/ccw2s4Na.s:3462   .debug_str:00000000000009c3 .LASF161
     /tmp/ccw2s4Na.s:3142   .debug_str:0000000000000033 .LASF134
     /tmp/ccw2s4Na.s:3132   .debug_str:0000000000000000 .LASF32
     /tmp/ccw2s4Na.s:3366   .debug_str:000000000000069b .LASF34
     /tmp/ccw2s4Na.s:3164   .debug_str:000000000000010b .LASF162
     /tmp/ccw2s4Na.s:3392   .debug_str:0000000000000751 .LASF163
     /tmp/ccw2s4Na.s:3398   .debug_str:0000000000000769 .LASF61
     /tmp/ccw2s4Na.s:3162   .debug_str:0000000000000105 .LASF35
     /tmp/ccw2s4Na.s:3370   .debug_str:00000000000006c3 .LASF36
     /tmp/ccw2s4Na.s:3174   .debug_str:000000000000014c .LASF37
     /tmp/ccw2s4Na.s:3158   .debug_str:00000000000000eb .LASF38
     /tmp/ccw2s4Na.s:3440   .debug_str:000000000000093a .LASF39
     /tmp/ccw2s4Na.s:3466   .debug_str:00000000000009e3 .LASF40
     /tmp/ccw2s4Na.s:3394   .debug_str:0000000000000759 .LASF41
     /tmp/ccw2s4Na.s:3446   .debug_str:0000000000000949 .LASF43
     /tmp/ccw2s4Na.s:3354   .debug_str:000000000000064d .LASF44
     /tmp/ccw2s4Na.s:3254   .debug_str:0000000000000373 .LASF45
     /tmp/ccw2s4Na.s:3196   .debug_str:00000000000001f2 .LASF46
     /tmp/ccw2s4Na.s:3148   .debug_str:000000000000007c .LASF47
     /tmp/ccw2s4Na.s:3374   .debug_str:00000000000006d1 .LASF48
     /tmp/ccw2s4Na.s:3352   .debug_str:000000000000063e .LASF50
     /tmp/ccw2s4Na.s:3400   .debug_str:000000000000076f .LASF164
     /tmp/ccw2s4Na.s:3182   .debug_str:000000000000017a .LASF165
     /tmp/ccw2s4Na.s:3154   .debug_str:00000000000000be .LASF166
     /tmp/ccw2s4Na.s:3428   .debug_str:0000000000000902 .LASF128
     /tmp/ccw2s4Na.s:3390   .debug_str:000000000000073f .LASF130
     /tmp/ccw2s4Na.s:3362   .debug_str:0000000000000677 .LASF167
     /tmp/ccw2s4Na.s:3312   .debug_str:0000000000000506 .LASF168
     /tmp/ccw2s4Na.s:3194   .debug_str:00000000000001ed .LASF51
     /tmp/ccw2s4Na.s:3372   .debug_str:00000000000006cb .LASF52
     /tmp/ccw2s4Na.s:3424   .debug_str:00000000000008e1 .LASF53
     /tmp/ccw2s4Na.s:3414   .debug_str:00000000000008a2 .LASF54
     /tmp/ccw2s4Na.s:3198   .debug_str:00000000000001fb .LASF55
GAS LISTING /tmp/ccw2s4Na.s 			page 19


     /tmp/ccw2s4Na.s:3460   .debug_str:00000000000009bd .LASF56
     /tmp/ccw2s4Na.s:3408   .debug_str:000000000000085b .LASF58
     /tmp/ccw2s4Na.s:3288   .debug_str:000000000000046c .LASF59
     /tmp/ccw2s4Na.s:3436   .debug_str:000000000000092a .LASF60
     /tmp/ccw2s4Na.s:3208   .debug_str:0000000000000241 .LASF62
     /tmp/ccw2s4Na.s:3212   .debug_str:000000000000025a .LASF63
     /tmp/ccw2s4Na.s:3402   .debug_str:0000000000000777 .LASF64
     /tmp/ccw2s4Na.s:3190   .debug_str:00000000000001cf .LASF65
     /tmp/ccw2s4Na.s:3238   .debug_str:00000000000002f9 .LASF66
     /tmp/ccw2s4Na.s:3242   .debug_str:0000000000000316 .LASF67
     /tmp/ccw2s4Na.s:3364   .debug_str:000000000000068d .LASF68
     /tmp/ccw2s4Na.s:3206   .debug_str:0000000000000226 .LASF69
     /tmp/ccw2s4Na.s:3248   .debug_str:000000000000034c .LASF70
     /tmp/ccw2s4Na.s:3450   .debug_str:0000000000000965 .LASF71
     /tmp/ccw2s4Na.s:3420   .debug_str:00000000000008ce .LASF72
     /tmp/ccw2s4Na.s:3416   .debug_str:00000000000008aa .LASF73
     /tmp/ccw2s4Na.s:3342   .debug_str:00000000000005fa .LASF74
     /tmp/ccw2s4Na.s:3308   .debug_str:00000000000004ea .LASF75
     /tmp/ccw2s4Na.s:3328   .debug_str:0000000000000586 .LASF76
     /tmp/ccw2s4Na.s:3334   .debug_str:00000000000005bb .LASF77
     /tmp/ccw2s4Na.s:3300   .debug_str:00000000000004c3 .LASF78
     /tmp/ccw2s4Na.s:3274   .debug_str:0000000000000407 .LASF79
     /tmp/ccw2s4Na.s:3452   .debug_str:000000000000097f .LASF80
     /tmp/ccw2s4Na.s:3410   .debug_str:000000000000086b .LASF81
     /tmp/ccw2s4Na.s:3298   .debug_str:00000000000004bb .LASF82
     /tmp/ccw2s4Na.s:3306   .debug_str:00000000000004d6 .LASF83
     /tmp/ccw2s4Na.s:3282   .debug_str:000000000000044b .LASF84
     /tmp/ccw2s4Na.s:3336   .debug_str:00000000000005ce .LASF85
     /tmp/ccw2s4Na.s:3472   .debug_str:0000000000000a18 .LASF86
     /tmp/ccw2s4Na.s:3252   .debug_str:000000000000035f .LASF87
     /tmp/ccw2s4Na.s:3384   .debug_str:000000000000071b .LASF88
     /tmp/ccw2s4Na.s:3358   .debug_str:000000000000065d .LASF89
     /tmp/ccw2s4Na.s:3360   .debug_str:0000000000000670 .LASF90
     /tmp/ccw2s4Na.s:3172   .debug_str:0000000000000139 .LASF91
     /tmp/ccw2s4Na.s:3200   .debug_str:0000000000000201 .LASF92
     /tmp/ccw2s4Na.s:3240   .debug_str:0000000000000304 .LASF93
     /tmp/ccw2s4Na.s:3250   .debug_str:0000000000000359 .LASF94
     /tmp/ccw2s4Na.s:3192   .debug_str:00000000000001db .LASF95
     /tmp/ccw2s4Na.s:3140   .debug_str:0000000000000028 .LASF96
     /tmp/ccw2s4Na.s:3350   .debug_str:0000000000000626 .LASF97
     /tmp/ccw2s4Na.s:3344   .debug_str:0000000000000603 .LASF98
     /tmp/ccw2s4Na.s:3330   .debug_str:000000000000058d .LASF99
     /tmp/ccw2s4Na.s:3438   .debug_str:0000000000000930 .LASF100
     /tmp/ccw2s4Na.s:3456   .debug_str:0000000000000993 .LASF101
     /tmp/ccw2s4Na.s:3432   .debug_str:000000000000090f .LASF102
     /tmp/ccw2s4Na.s:3292   .debug_str:000000000000047c .LASF103
     /tmp/ccw2s4Na.s:3376   .debug_str:00000000000006d6 .LASF104
     /tmp/ccw2s4Na.s:3286   .debug_str:0000000000000459 .LASF105
     /tmp/ccw2s4Na.s:3226   .debug_str:00000000000002a5 .LASF106
     /tmp/ccw2s4Na.s:3406   .debug_str:0000000000000848 .LASF107
     /tmp/ccw2s4Na.s:3418   .debug_str:00000000000008bf .LASF108
     /tmp/ccw2s4Na.s:3146   .debug_str:0000000000000060 .LASF109
     /tmp/ccw2s4Na.s:3442   .debug_str:000000000000093f .LASF110
     /tmp/ccw2s4Na.s:3314   .debug_str:000000000000050b .LASF111
     /tmp/ccw2s4Na.s:3262   .debug_str:00000000000003ce .LASF112
     /tmp/ccw2s4Na.s:3386   .debug_str:0000000000000722 .LASF113
     /tmp/ccw2s4Na.s:3444   .debug_str:0000000000000944 .LASF114
GAS LISTING /tmp/ccw2s4Na.s 			page 20


     /tmp/ccw2s4Na.s:3258   .debug_str:00000000000003a1 .LASF115
     /tmp/ccw2s4Na.s:3296   .debug_str:00000000000004b6 .LASF116
     /tmp/ccw2s4Na.s:3322   .debug_str:0000000000000558 .LASF117
     /tmp/ccw2s4Na.s:3304   .debug_str:00000000000004d1 .LASF118
     /tmp/ccw2s4Na.s:3160   .debug_str:00000000000000f4 .LASF119
     /tmp/ccw2s4Na.s:3266   .debug_str:00000000000003d9 .LASF120
     /tmp/ccw2s4Na.s:3270   .debug_str:00000000000003e3 .LASF121
     /tmp/ccw2s4Na.s:3448   .debug_str:0000000000000960 .LASF122
     /tmp/ccw2s4Na.s:3244   .debug_str:000000000000032e .LASF123
     /tmp/ccw2s4Na.s:3268   .debug_str:00000000000003de .LASF124
     /tmp/ccw2s4Na.s:3368   .debug_str:00000000000006b2 .LASF125
     /tmp/ccw2s4Na.s:3318   .debug_str:0000000000000540 .LASF126
     /tmp/ccw2s4Na.s:3458   .debug_str:00000000000009a9 .LASF127
     /tmp/ccw2s4Na.s:3464   .debug_str:00000000000009d7 .LASF129
     /tmp/ccw2s4Na.s:3280   .debug_str:0000000000000432 .LASF131
     /tmp/ccw2s4Na.s:3202   .debug_str:0000000000000207 .LASF132
     /tmp/ccw2s4Na.s:3396   .debug_str:0000000000000764 .LASF133
     /tmp/ccw2s4Na.s:3326   .debug_str:000000000000057c .LASF135
     /tmp/ccw2s4Na.s:3224   .debug_str:00000000000002a0 .LASF136
     /tmp/ccw2s4Na.s:59     .text:000000000000003c .LFB53
     /tmp/ccw2s4Na.s:362    .text:000000000000020c .LFE53
     /tmp/ccw2s4Na.s:2921   .debug_loc:0000000000000000 .LLST3
     /tmp/ccw2s4Na.s:2932   .debug_loc:0000000000000036 .LLST4
     /tmp/ccw2s4Na.s:3232   .debug_str:00000000000002c6 .LASF137
     /tmp/ccw2s4Na.s:2957   .debug_loc:00000000000000a7 .LLST5
     /tmp/ccw2s4Na.s:79     .text:000000000000005c .LBB37
     /tmp/ccw2s4Na.s:93     .text:0000000000000074 .LBE37
     /tmp/ccw2s4Na.s:94     .text:0000000000000074 .LBB39
     /tmp/ccw2s4Na.s:121    .text:00000000000000b8 .LBE39
     /tmp/ccw2s4Na.s:127    .text:00000000000000c4 .LBB41
     /tmp/ccw2s4Na.s:139    .text:00000000000000c8 .LBE41
     /tmp/ccw2s4Na.s:2968   .debug_loc:00000000000000dd .LLST6
     /tmp/ccw2s4Na.s:147    .text:00000000000000d8 .LBB43
     /tmp/ccw2s4Na.s:167    .text:00000000000000f4 .LBE43
     /tmp/ccw2s4Na.s:2975   .debug_loc:0000000000000100 .LLST7
     /tmp/ccw2s4Na.s:2983   .debug_loc:0000000000000124 .LLST10
     /tmp/ccw2s4Na.s:174    .text:0000000000000100 .LBB45
     /tmp/ccw2s4Na.s:182    .text:0000000000000108 .LBE45
     /tmp/ccw2s4Na.s:2990   .debug_loc:0000000000000147 .LLST11
     /tmp/ccw2s4Na.s:2998   .debug_loc:000000000000016b .LLST12
     /tmp/ccw2s4Na.s:184    .text:0000000000000108 .LBB47
     /tmp/ccw2s4Na.s:196    .text:0000000000000110 .LBE47
     /tmp/ccw2s4Na.s:3005   .debug_loc:000000000000018e .LLST13
     /tmp/ccw2s4Na.s:202    .text:0000000000000118 .LBB49
     /tmp/ccw2s4Na.s:215    .text:0000000000000130 .LBE49
     /tmp/ccw2s4Na.s:230    .text:0000000000000150 .LBB51
     /tmp/ccw2s4Na.s:3122   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccw2s4Na.s:3013   .debug_loc:00000000000001b2 .LLST14
     /tmp/ccw2s4Na.s:3034   .debug_loc:0000000000000210 .LLST15
     /tmp/ccw2s4Na.s:3047   .debug_loc:0000000000000248 .LLST16
     /tmp/ccw2s4Na.s:267    .text:0000000000000188 .LBB54
     /tmp/ccw2s4Na.s:274    .text:000000000000018c .LBE54
     /tmp/ccw2s4Na.s:3058   .debug_loc:000000000000027e .LLST17
     /tmp/ccw2s4Na.s:300    .text:00000000000001ac .LBB57
     /tmp/ccw2s4Na.s:312    .text:00000000000001bc .LBE57
     /tmp/ccw2s4Na.s:3065   .debug_loc:00000000000002a1 .LLST18
     /tmp/ccw2s4Na.s:309    .text:00000000000001bc .LVL32
GAS LISTING /tmp/ccw2s4Na.s 			page 21


     /tmp/ccw2s4Na.s:322    .text:00000000000001cc .LBB59
     /tmp/ccw2s4Na.s:334    .text:00000000000001dc .LBE59
     /tmp/ccw2s4Na.s:3072   .debug_loc:00000000000002c4 .LLST19
     /tmp/ccw2s4Na.s:331    .text:00000000000001dc .LVL35
     /tmp/ccw2s4Na.s:144    .text:00000000000000d4 .LVL9
     /tmp/ccw2s4Na.s:200    .text:0000000000000118 .LVL15
     /tmp/ccw2s4Na.s:219    .text:000000000000013c .LVL18
     /tmp/ccw2s4Na.s:227    .text:000000000000014c .LVL21
     /tmp/ccw2s4Na.s:263    .text:0000000000000188 .LVL25
     /tmp/ccw2s4Na.s:281    .text:000000000000019c .LVL27
     /tmp/ccw2s4Na.s:316    .text:00000000000001c8 .LVL33
     /tmp/ccw2s4Na.s:338    .text:00000000000001e8 .LVL36
     /tmp/ccw2s4Na.s:3340   .debug_str:00000000000005f2 .LASF169
     /tmp/ccw2s4Na.s:3186   .debug_str:0000000000000194 .LASF170
     /tmp/ccw2s4Na.s:10     .text:0000000000000000 .LFB52
     /tmp/ccw2s4Na.s:53     .text:000000000000003c .LFE52
     /tmp/ccw2s4Na.s:3079   .debug_loc:00000000000002e7 .LLST0
     /tmp/ccw2s4Na.s:32     .text:0000000000000024 .LBB35
     /tmp/ccw2s4Na.s:39     .text:0000000000000028 .LBE35
     /tmp/ccw2s4Na.s:3095   .debug_loc:0000000000000331 .LLST1
     /tmp/ccw2s4Na.s:3102   .debug_loc:0000000000000354 .LLST2
     /tmp/ccw2s4Na.s:31     .text:0000000000000024 .LVL2
     /tmp/ccw2s4Na.s:3222   .debug_str:000000000000029b .LASF140
     /tmp/ccw2s4Na.s:3210   .debug_str:0000000000000250 .LASF141
     /tmp/ccw2s4Na.s:3430   .debug_str:000000000000090a .LASF138
     /tmp/ccw2s4Na.s:3284   .debug_str:0000000000000453 .LASF139
     /tmp/ccw2s4Na.s:3152   .debug_str:00000000000000a8 .LASF142
     /tmp/ccw2s4Na.s:3136   .debug_str:0000000000000017 .LASF143
     /tmp/ccw2s4Na.s:3184   .debug_str:0000000000000188 .LASF144
     /tmp/ccw2s4Na.s:3176   .debug_str:0000000000000156 .LASF145
     /tmp/ccw2s4Na.s:3188   .debug_str:00000000000001a0 .LASF171
     /tmp/ccw2s4Na.s:3378   .debug_str:00000000000006dd .LASF146
     /tmp/ccw2s4Na.s:3302   .debug_str:00000000000004ca .LASF147
     /tmp/ccw2s4Na.s:3214   .debug_str:0000000000000266 .LASF149
     /tmp/ccw2s4Na.s:3216   .debug_str:0000000000000279 .LASF148
     /tmp/ccw2s4Na.s:3470   .debug_str:0000000000000a0b .LASF150
     /tmp/ccw2s4Na.s:3332   .debug_str:00000000000005a5 .LASF151
     /tmp/ccw2s4Na.s:3434   .debug_str:0000000000000919 .LASF152
     /tmp/ccw2s4Na.s:3144   .debug_str:000000000000004b .LASF153
     /tmp/ccw2s4Na.s:3338   .debug_str:00000000000005e2 .LASF154
     /tmp/ccw2s4Na.s:3310   .debug_str:00000000000004ff .LASF155
     /tmp/ccw2s4Na.s:3134   .debug_str:0000000000000007 .LASF156
     /tmp/ccw2s4Na.s:165    .text:00000000000000f4 .LVL11
     /tmp/ccw2s4Na.s:353    .text:00000000000001fc .LVL38
     /tmp/ccw2s4Na.s:221    .text:0000000000000140 .LVL19
     /tmp/ccw2s4Na.s:225    .text:0000000000000144 .LVL20
     /tmp/ccw2s4Na.s:245    .text:000000000000016c .LVL23
     /tmp/ccw2s4Na.s:284    .text:00000000000001a0 .LVL28
     /tmp/ccw2s4Na.s:290    .text:00000000000001a4 .LVL29
     /tmp/ccw2s4Na.s:292    .text:00000000000001a8 .LVL30
     /tmp/ccw2s4Na.s:256    .text:000000000000017c .LVL24
     /tmp/ccw2s4Na.s:350    .text:00000000000001f8 .LVL37
     /tmp/ccw2s4Na.s:126    .text:00000000000000c4 .LVL7
     /tmp/ccw2s4Na.s:136    .text:00000000000000c8 .LVL8
     /tmp/ccw2s4Na.s:146    .text:00000000000000d8 .LVL10
     /tmp/ccw2s4Na.s:173    .text:0000000000000100 .LVL12
     /tmp/ccw2s4Na.s:180    .text:0000000000000108 .LVL13
GAS LISTING /tmp/ccw2s4Na.s 			page 22


     /tmp/ccw2s4Na.s:193    .text:0000000000000110 .LVL14
     /tmp/ccw2s4Na.s:229    .text:0000000000000150 .LVL22
     /tmp/ccw2s4Na.s:272    .text:000000000000018c .LVL26
     /tmp/ccw2s4Na.s:299    .text:00000000000001ac .LVL31
     /tmp/ccw2s4Na.s:321    .text:00000000000001cc .LVL34
     /tmp/ccw2s4Na.s:14     .text:0000000000000000 .LVL0
     /tmp/ccw2s4Na.s:29     .text:000000000000001c .LVL1
     /tmp/ccw2s4Na.s:48     .text:0000000000000034 .LVL4
     /tmp/ccw2s4Na.s:37     .text:0000000000000028 .LVL3
     /tmp/ccw2s4Na.s:378    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccw2s4Na.s:258    .text:000000000000017c .LBE51
     /tmp/ccw2s4Na.s:286    .text:00000000000001a0 .LBB56
     /tmp/ccw2s4Na.s:295    .text:00000000000001a8 .LBE56

UNDEFINED SYMBOLS
_Znwm
HEAP_START_ADDR
_ZN15MemoryAllocator9free_listE
HEAP_END_ADDR
_ZN15MemoryAllocator14allocated_listE
_ZN5Riscv14supervisorTrapEv
_ZN3PCB7wrapperEv
_ZN3PCB7runningE
_Z16switchToUserModev
_ZN15MemoryAllocator8allocateEm
_Z8userMainv
_ZN9Scheduler3putEP3PCB
_Z15thread_dispatchv
_ZdaPv
_ZdlPv
