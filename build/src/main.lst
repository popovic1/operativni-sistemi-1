GAS LISTING /tmp/ccI0cT1O.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 4D41494E 		.string	"MAIN START\n"
   9      20535441 
   9      52540A00 
  10 000c 00000000 		.align	3
  11              	.LC1:
  12 0010 46696E69 		.string	"Finished\n"
  12      73686564 
  12      0A00
  13              		.text
  14              		.align	2
  15              		.globl	main
  17              	main:
  18              	.LFB44:
  19              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/PCB.hpp"
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../h/syscall_c.hpp"
   4:src/main.cpp  **** #include "../h/print.hpp"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** 
   7:src/main.cpp  **** struct A {
   8:src/main.cpp  ****     int a;
   9:src/main.cpp  ****     int* b = nullptr;
  10:src/main.cpp  **** };
  11:src/main.cpp  **** 
  12:src/main.cpp  **** struct B {
  13:src/main.cpp  ****     int a;
  14:src/main.cpp  ****     int* b = nullptr;
  15:src/main.cpp  ****     long c;
  16:src/main.cpp  ****     char d[50];
  17:src/main.cpp  **** };
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** int main() {
  20              		.loc 1 20 12
  21              		.cfi_startproc
  22 0000 130101FD 		addi	sp,sp,-48
  23              		.cfi_def_cfa_offset 48
  24 0004 23341102 		sd	ra,40(sp)
  25 0008 23308102 		sd	s0,32(sp)
  26 000c 233C9100 		sd	s1,24(sp)
  27 0010 23382101 		sd	s2,16(sp)
  28 0014 23343101 		sd	s3,8(sp)
  29              		.cfi_offset 1, -8
  30              		.cfi_offset 8, -16
  31              		.cfi_offset 9, -24
  32              		.cfi_offset 18, -32
  33              		.cfi_offset 19, -40
  34 0018 13040103 		addi	s0,sp,48
GAS LISTING /tmp/ccI0cT1O.s 			page 2


  35              		.cfi_def_cfa 8, 0
  21:src/main.cpp  **** 
  22:src/main.cpp  **** 
  23:src/main.cpp  ****     MemoryAllocator::getInstance().init();
  36              		.loc 1 23 5
  37              	.LBB25:
  38              	.LBB26:
  39              		.file 2 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
  40              		.loc 2 26 9
  41              		.loc 2 26 32 is_stmt 0
  42 001c 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
  42      83C70700 
  43 0024 63980700 		bnez	a5,.L2
  44              	.LVL0:
  45 0028 93071000 		li	a5,1
  46 002c 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
  46      2300F700 
  47              	.LVL1:
  48              	.L2:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
  49              		.loc 2 27 9 is_stmt 1
  50              	.LBE26:
  51              	.LBE25:
  52              	.LBB27:
  53              	.LBB28:
  28:src/../h/../h/MemoryAllocator.hpp ****     }
  29:src/../h/../h/MemoryAllocator.hpp **** 
  30:src/../h/../h/MemoryAllocator.hpp ****     static void init() {
  31:src/../h/../h/MemoryAllocator.hpp ****         // Initialize the free list
  32:src/../h/../h/MemoryAllocator.hpp **** 
  33:src/../h/../h/MemoryAllocator.hpp ****         // For testing purposes
GAS LISTING /tmp/ccI0cT1O.s 			page 3


  34:src/../h/../h/MemoryAllocator.hpp **** //        uint64 start = (uint64)((Block *) HEAP_START_ADDR);
  35:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(start);
  36:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  37:src/../h/../h/MemoryAllocator.hpp **** //        uint64 end = (uint64)((Block *) HEAP_END_ADDR);
  38:src/../h/../h/MemoryAllocator.hpp **** //        printInteger(end);
  39:src/../h/../h/MemoryAllocator.hpp **** //        printString("\n");
  40:src/../h/../h/MemoryAllocator.hpp **** 
  41:src/../h/../h/MemoryAllocator.hpp ****         free_list = (Block *) HEAP_START_ADDR;
  54              		.loc 2 41 9
  55              		.loc 2 41 19 is_stmt 0
  56 0034 97070000 		la	a5,HEAP_START_ADDR
  56      83B70700 
  57 003c 03B70700 		ld	a4,0(a5)
  58 0040 97060000 		la	a3,_ZN15MemoryAllocator9free_listE
  58      83B60600 
  59 0048 23B0E600 		sd	a4,0(a3)
  42:src/../h/../h/MemoryAllocator.hpp ****         free_list->size = (uint64 *) HEAP_END_ADDR - (uint64 *) HEAP_START_ADDR;
  60              		.loc 2 42 9 is_stmt 1
  61              		.loc 2 42 27 is_stmt 0
  62 004c 97070000 		la	a5,HEAP_END_ADDR
  62      83B70700 
  63 0054 83B70700 		ld	a5,0(a5)
  64              		.loc 2 42 52
  65 0058 B387E740 		sub	a5,a5,a4
  66 005c 93D73740 		srai	a5,a5,3
  67              		.loc 2 42 25
  68 0060 2330F700 		sd	a5,0(a4)
  43:src/../h/../h/MemoryAllocator.hpp ****         free_list->next = nullptr;
  69              		.loc 2 43 9 is_stmt 1
  70              		.loc 2 43 20 is_stmt 0
  71 0064 83B70600 		ld	a5,0(a3)
  72              		.loc 2 43 25
  73 0068 23B40700 		sd	zero,8(a5)
  44:src/../h/../h/MemoryAllocator.hpp ****         allocated_list = nullptr;
  74              		.loc 2 44 9 is_stmt 1
  75              		.loc 2 44 24 is_stmt 0
  76 006c 97070000 		la	a5,_ZN15MemoryAllocator14allocated_listE
  76      83B70700 
  77 0074 23B00700 		sd	zero,0(a5)
  78              	.LBE28:
  79              	.LBE27:
  24:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap+1);
  80              		.loc 1 24 5 is_stmt 1
  81              		.loc 1 24 19 is_stmt 0
  82 0078 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  82      83B70700 
  83 0080 93871700 		addi	a5,a5,1
  84              	.LVL2:
  85              	.LBB29:
  86              	.LBB30:
  87              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccI0cT1O.s 			page 4


   7:src/../h/riscv.hpp **** #include "../lib/console.h"
   8:src/../h/riscv.hpp **** #include "../h/print.hpp"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  12:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp **** class Riscv
  16:src/../h/riscv.hpp **** {
  17:src/../h/riscv.hpp **** public:
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  22:src/../h/riscv.hpp ****     static void popSppSpie();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  25:src/../h/riscv.hpp ****     static void pushRegisters();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  28:src/../h/riscv.hpp ****     static void popRegisters();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register scause
  31:src/../h/riscv.hpp ****     static uint64 r_scause();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register scause
  34:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register sepc
  37:src/../h/riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register sepc
  40:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // read register stvec
  43:src/../h/riscv.hpp ****     static uint64 r_stvec();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // write register stvec
  46:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // read register stval
  49:src/../h/riscv.hpp ****     static uint64 r_stval();
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // write register stval
  52:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     enum BitMaskSip
  55:src/../h/riscv.hpp ****     {
  56:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  57:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  58:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  60:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sip
GAS LISTING /tmp/ccI0cT1O.s 			page 5


  64:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sip
  67:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sip
  70:src/../h/riscv.hpp ****     static uint64 r_sip();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sip
  73:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     enum BitMaskSstatus
  76:src/../h/riscv.hpp ****     {
  77:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  78:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  79:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  80:src/../h/riscv.hpp ****     };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // mask set register sstatus
  83:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // mask clear register sstatus
  86:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     // read register sstatus
  89:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     // write register sstatus
  92:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // mask set register sie
  95:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     // mask clear register sie
  98:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static void supervisorTrap();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static long r_a0();
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static void w_a0(long a0);
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static uint64 r_a1();
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void push_a0(long a0);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** private:
 113:src/../h/riscv.hpp ****     static void trapHandler();
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** };
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     uint64 volatile scause;
GAS LISTING /tmp/ccI0cT1O.s 			page 6


 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 122:src/../h/riscv.hpp ****     return scause;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     uint64 volatile sepc;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 134:src/../h/riscv.hpp ****     return sepc;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     uint64 volatile stvec;
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 146:src/../h/riscv.hpp ****     return stvec;
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  88              		.loc 3 151 5 is_stmt 1
  89              		.loc 3 151 69 is_stmt 0
  90              	#APP
  91              	# 151 "src/../h/riscv.hpp" 1
 152              	}
  92              		csrw stvec, a5
  93              	# 0 "" 2
  94              	.LVL3:
  95              	#NO_APP
  96              	.LBE30:
  97              	.LBE29:
  25:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  98              		.loc 1 25 5 is_stmt 1
  99              	.LBB31:
 100              	.LBB32:
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     uint64 volatile stval;
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 158:src/../h/riscv.hpp ****     return stval;
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
GAS LISTING /tmp/ccI0cT1O.s 			page 7


 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 172:src/../h/riscv.hpp **** {
 173:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     uint64 volatile sip;
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 180:src/../h/riscv.hpp ****     return sip;
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 184:src/../h/riscv.hpp **** {
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 101              		.loc 3 190 5
 102              		.loc 3 190 68 is_stmt 0
 103 0088 93072000 		li	a5,2
 104              	#APP
 105              	# 190 "src/../h/riscv.hpp" 1
 191              	}
 106              		csrs sstatus, a5
 107              	# 0 "" 2
 108              	.LVL4:
 109              	#NO_APP
 110              	.LBE32:
 111              	.LBE31:
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     printString("MAIN START\n");
 112              		.loc 1 27 5 is_stmt 1
 113              		.loc 1 27 16 is_stmt 0
 114 0090 17050000 		lla	a0,.LC0
 114      13050500 
 115 0098 97000000 		call	_Z11printStringPKc@plt
 115      E7800000 
 116              	.LVL5:
  28:src/main.cpp  **** 
  29:src/main.cpp  ****     A* a0 = new A();
 117              		.loc 1 29 5 is_stmt 1
 118              		.loc 1 29 19 is_stmt 0
 119 00a0 13050001 		li	a0,16
 120 00a4 97000000 		call	_Znwm@plt
 120      E7800000 
 121              	.LVL6:
 122 00ac 93040500 		mv	s1,a0
GAS LISTING /tmp/ccI0cT1O.s 			page 8


 123 00b0 23200500 		sw	zero,0(a0)
 124 00b4 23340500 		sd	zero,8(a0)
 125              	.LVL7:
  30:src/main.cpp  ****     B* b0 = new B();
 126              		.loc 1 30 5 is_stmt 1
 127              		.loc 1 30 19 is_stmt 0
 128 00b8 13050005 		li	a0,80
 129 00bc 97000000 		call	_Znwm@plt
 129      E7800000 
 130              	.LVL8:
 131 00c4 13090500 		mv	s2,a0
 132 00c8 23300500 		sd	zero,0(a0)
 133 00cc 23340500 		sd	zero,8(a0)
 134 00d0 23380500 		sd	zero,16(a0)
 135 00d4 233C0500 		sd	zero,24(a0)
 136 00d8 23300502 		sd	zero,32(a0)
 137 00dc 23340502 		sd	zero,40(a0)
 138 00e0 23380502 		sd	zero,48(a0)
 139 00e4 233C0502 		sd	zero,56(a0)
 140 00e8 23300504 		sd	zero,64(a0)
 141 00ec 23340504 		sd	zero,72(a0)
 142              	.LVL9:
  31:src/main.cpp  ****     A* a1 = new A();
 143              		.loc 1 31 5 is_stmt 1
 144              		.loc 1 31 19 is_stmt 0
 145 00f0 13050001 		li	a0,16
 146              	.LVL10:
 147 00f4 97000000 		call	_Znwm@plt
 147      E7800000 
 148              	.LVL11:
 149 00fc 93090500 		mv	s3,a0
 150 0100 23340500 		sd	zero,8(a0)
 151              	.LVL12:
  32:src/main.cpp  ****     a0->a = 0;
 152              		.loc 1 32 5 is_stmt 1
 153              		.loc 1 32 11 is_stmt 0
 154 0104 23A00400 		sw	zero,0(s1)
  33:src/main.cpp  ****     a1->a = 1;
 155              		.loc 1 33 5 is_stmt 1
 156              		.loc 1 33 11 is_stmt 0
 157 0108 93071000 		li	a5,1
 158 010c 2320F500 		sw	a5,0(a0)
  34:src/main.cpp  ****     b0->a = 10;
 159              		.loc 1 34 5 is_stmt 1
 160              		.loc 1 34 11 is_stmt 0
 161 0110 9307A000 		li	a5,10
 162 0114 2320F900 		sw	a5,0(s2)
  35:src/main.cpp  ****     delete(a0);
 163              		.loc 1 35 5 is_stmt 1
 164              		.loc 1 35 15 is_stmt 0
 165 0118 63880400 		beqz	s1,.L3
 166              		.loc 1 35 14 discriminator 1
 167 011c 13850400 		mv	a0,s1
 168              	.LVL13:
 169 0120 97000000 		call	_ZdlPv@plt
 169      E7800000 
 170              	.LVL14:
GAS LISTING /tmp/ccI0cT1O.s 			page 9


 171              	.L3:
  36:src/main.cpp  ****     B* b1 = new B();
 172              		.loc 1 36 5 is_stmt 1
 173              		.loc 1 36 19 is_stmt 0
 174 0128 13050005 		li	a0,80
 175 012c 97000000 		call	_Znwm@plt
 175      E7800000 
 176              	.LVL15:
 177 0134 93040500 		mv	s1,a0
 178              	.LVL16:
 179 0138 23300500 		sd	zero,0(a0)
 180 013c 23340500 		sd	zero,8(a0)
 181 0140 23380500 		sd	zero,16(a0)
 182 0144 233C0500 		sd	zero,24(a0)
 183 0148 23300502 		sd	zero,32(a0)
 184 014c 23340502 		sd	zero,40(a0)
 185 0150 23380502 		sd	zero,48(a0)
 186 0154 233C0502 		sd	zero,56(a0)
 187 0158 23300504 		sd	zero,64(a0)
 188 015c 23340504 		sd	zero,72(a0)
 189              	.LVL17:
  37:src/main.cpp  ****     b1->a = 11;
 190              		.loc 1 37 5 is_stmt 1
 191              		.loc 1 37 11 is_stmt 0
 192 0160 9307B000 		li	a5,11
 193 0164 2320F500 		sw	a5,0(a0)
  38:src/main.cpp  ****     delete(a1);
 194              		.loc 1 38 5 is_stmt 1
 195              		.loc 1 38 15 is_stmt 0
 196 0168 63880900 		beqz	s3,.L4
 197              		.loc 1 38 14 discriminator 1
 198 016c 13850900 		mv	a0,s3
 199 0170 97000000 		call	_ZdlPv@plt
 199      E7800000 
 200              	.LVL18:
 201              	.L4:
  39:src/main.cpp  ****     delete(b0);
 202              		.loc 1 39 5 is_stmt 1
 203              		.loc 1 39 15 is_stmt 0
 204 0178 63080900 		beqz	s2,.L5
 205              		.loc 1 39 14 discriminator 1
 206 017c 13050900 		mv	a0,s2
 207 0180 97000000 		call	_ZdlPv@plt
 207      E7800000 
 208              	.LVL19:
 209              	.L5:
  40:src/main.cpp  ****     delete(b1);
 210              		.loc 1 40 5 is_stmt 1
 211              		.loc 1 40 15 is_stmt 0
 212 0188 63880400 		beqz	s1,.L6
 213              		.loc 1 40 14 discriminator 1
 214 018c 13850400 		mv	a0,s1
 215 0190 97000000 		call	_ZdlPv@plt
 215      E7800000 
 216              	.LVL20:
 217              	.L6:
  41:src/main.cpp  **** 
GAS LISTING /tmp/ccI0cT1O.s 			page 10


  42:src/main.cpp  **** 
  43:src/main.cpp  **** 
  44:src/main.cpp  ****     printString("Finished\n");
 218              		.loc 1 44 5 is_stmt 1
 219              		.loc 1 44 16 is_stmt 0
 220 0198 17050000 		lla	a0,.LC1
 220      13050500 
 221 01a0 97000000 		call	_Z11printStringPKc@plt
 221      E7800000 
 222              	.LVL21:
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     return 0;
 223              		.loc 1 46 5 is_stmt 1
  47:src/main.cpp  **** }
 224              		.loc 1 47 1 is_stmt 0
 225 01a8 13050000 		li	a0,0
 226 01ac 83308102 		ld	ra,40(sp)
 227              		.cfi_restore 1
 228 01b0 03340102 		ld	s0,32(sp)
 229              		.cfi_restore 8
 230              		.cfi_def_cfa 2, 48
 231 01b4 83348101 		ld	s1,24(sp)
 232              		.cfi_restore 9
 233              	.LVL22:
 234 01b8 03390101 		ld	s2,16(sp)
 235              		.cfi_restore 18
 236              	.LVL23:
 237 01bc 83398100 		ld	s3,8(sp)
 238              		.cfi_restore 19
 239              	.LVL24:
 240 01c0 13010103 		addi	sp,sp,48
 241              		.cfi_def_cfa_offset 0
 242 01c4 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE44:
 246              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 247              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 248              		.align	3
 251              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 252 0000 00000000 		.zero	8
 252      00000000 
 253              		.text
 254              	.Letext0:
 255              		.file 4 "src/../h/../lib/hw.h"
 256              		.file 5 "src/../h/../h/print.hpp"
GAS LISTING /tmp/ccI0cT1O.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccI0cT1O.s:17     .text:0000000000000000 main
     /tmp/ccI0cT1O.s:21     .text:0000000000000000 .L0 
     /tmp/ccI0cT1O.s:22     .text:0000000000000000 .L0 
     /tmp/ccI0cT1O.s:23     .text:0000000000000004 .L0 
     /tmp/ccI0cT1O.s:29     .text:0000000000000018 .L0 
     /tmp/ccI0cT1O.s:30     .text:0000000000000018 .L0 
     /tmp/ccI0cT1O.s:31     .text:0000000000000018 .L0 
     /tmp/ccI0cT1O.s:32     .text:0000000000000018 .L0 
     /tmp/ccI0cT1O.s:33     .text:0000000000000018 .L0 
     /tmp/ccI0cT1O.s:35     .text:000000000000001c .L0 
     /tmp/ccI0cT1O.s:40     .text:000000000000001c .L0 
     /tmp/ccI0cT1O.s:41     .text:000000000000001c .L0 
     /tmp/ccI0cT1O.s:251    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccI0cT1O.s:42     .text:000000000000001c .L0 
     /tmp/ccI0cT1O.s:54     .text:0000000000000034 .L0 
     /tmp/ccI0cT1O.s:55     .text:0000000000000034 .L0 
     /tmp/ccI0cT1O.s:56     .text:0000000000000034 .L0 
     /tmp/ccI0cT1O.s:61     .text:000000000000004c .L0 
     /tmp/ccI0cT1O.s:62     .text:000000000000004c .L0 
     /tmp/ccI0cT1O.s:65     .text:0000000000000058 .L0 
     /tmp/ccI0cT1O.s:68     .text:0000000000000060 .L0 
     /tmp/ccI0cT1O.s:70     .text:0000000000000064 .L0 
     /tmp/ccI0cT1O.s:71     .text:0000000000000064 .L0 
     /tmp/ccI0cT1O.s:73     .text:0000000000000068 .L0 
     /tmp/ccI0cT1O.s:75     .text:000000000000006c .L0 
     /tmp/ccI0cT1O.s:76     .text:000000000000006c .L0 
     /tmp/ccI0cT1O.s:81     .text:0000000000000078 .L0 
     /tmp/ccI0cT1O.s:82     .text:0000000000000078 .L0 
     /tmp/ccI0cT1O.s:89     .text:0000000000000084 .L0 
  src/../h/riscv.hpp:151    .text:0000000000000084 .L0 
     /tmp/ccI0cT1O.s:101    .text:0000000000000088 .L0 
     /tmp/ccI0cT1O.s:102    .text:0000000000000088 .L0 
     /tmp/ccI0cT1O.s:103    .text:0000000000000088 .L0 
     /tmp/ccI0cT1O.s:113    .text:0000000000000090 .L0 
     /tmp/ccI0cT1O.s:114    .text:0000000000000090 .L0 
     /tmp/ccI0cT1O.s:118    .text:00000000000000a0 .L0 
     /tmp/ccI0cT1O.s:119    .text:00000000000000a0 .L0 
     /tmp/ccI0cT1O.s:127    .text:00000000000000b8 .L0 
     /tmp/ccI0cT1O.s:128    .text:00000000000000b8 .L0 
     /tmp/ccI0cT1O.s:144    .text:00000000000000f0 .L0 
     /tmp/ccI0cT1O.s:145    .text:00000000000000f0 .L0 
     /tmp/ccI0cT1O.s:153    .text:0000000000000104 .L0 
     /tmp/ccI0cT1O.s:154    .text:0000000000000104 .L0 
     /tmp/ccI0cT1O.s:156    .text:0000000000000108 .L0 
     /tmp/ccI0cT1O.s:157    .text:0000000000000108 .L0 
     /tmp/ccI0cT1O.s:160    .text:0000000000000110 .L0 
     /tmp/ccI0cT1O.s:161    .text:0000000000000110 .L0 
     /tmp/ccI0cT1O.s:164    .text:0000000000000118 .L0 
     /tmp/ccI0cT1O.s:165    .text:0000000000000118 .L0 
     /tmp/ccI0cT1O.s:167    .text:000000000000011c .L0 
     /tmp/ccI0cT1O.s:173    .text:0000000000000128 .L0 
     /tmp/ccI0cT1O.s:174    .text:0000000000000128 .L0 
     /tmp/ccI0cT1O.s:191    .text:0000000000000160 .L0 
     /tmp/ccI0cT1O.s:192    .text:0000000000000160 .L0 
     /tmp/ccI0cT1O.s:195    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccI0cT1O.s 			page 12


     /tmp/ccI0cT1O.s:196    .text:0000000000000168 .L0 
     /tmp/ccI0cT1O.s:198    .text:000000000000016c .L0 
     /tmp/ccI0cT1O.s:203    .text:0000000000000178 .L0 
     /tmp/ccI0cT1O.s:204    .text:0000000000000178 .L0 
     /tmp/ccI0cT1O.s:206    .text:000000000000017c .L0 
     /tmp/ccI0cT1O.s:211    .text:0000000000000188 .L0 
     /tmp/ccI0cT1O.s:212    .text:0000000000000188 .L0 
     /tmp/ccI0cT1O.s:214    .text:000000000000018c .L0 
     /tmp/ccI0cT1O.s:219    .text:0000000000000198 .L0 
     /tmp/ccI0cT1O.s:220    .text:0000000000000198 .L0 
     /tmp/ccI0cT1O.s:224    .text:00000000000001a8 .L0 
     /tmp/ccI0cT1O.s:225    .text:00000000000001a8 .L0 
     /tmp/ccI0cT1O.s:227    .text:00000000000001b0 .L0 
     /tmp/ccI0cT1O.s:229    .text:00000000000001b4 .L0 
     /tmp/ccI0cT1O.s:230    .text:00000000000001b4 .L0 
     /tmp/ccI0cT1O.s:232    .text:00000000000001b8 .L0 
     /tmp/ccI0cT1O.s:235    .text:00000000000001bc .L0 
     /tmp/ccI0cT1O.s:238    .text:00000000000001c0 .L0 
     /tmp/ccI0cT1O.s:241    .text:00000000000001c4 .L0 
     /tmp/ccI0cT1O.s:243    .text:00000000000001c8 .L0 
     /tmp/ccI0cT1O.s:257    .text:00000000000001c8 .L0 
     /tmp/ccI0cT1O.s:42     .text:000000000000001c .L0 
     /tmp/ccI0cT1O.s:46     .text:000000000000002c .L0 
     /tmp/ccI0cT1O.s:56     .text:0000000000000034 .L0 
     /tmp/ccI0cT1O.s:58     .text:0000000000000040 .L0 
     /tmp/ccI0cT1O.s:62     .text:000000000000004c .L0 
     /tmp/ccI0cT1O.s:76     .text:000000000000006c .L0 
     /tmp/ccI0cT1O.s:82     .text:0000000000000078 .L0 
     /tmp/ccI0cT1O.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccI0cT1O.s:114    .text:0000000000000090 .L0 
     /tmp/ccI0cT1O.s:11     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccI0cT1O.s:220    .text:0000000000000198 .L0 
     /tmp/ccI0cT1O.s:48     .text:0000000000000034 .L2
     /tmp/ccI0cT1O.s:171    .text:0000000000000128 .L3
     /tmp/ccI0cT1O.s:201    .text:0000000000000178 .L4
     /tmp/ccI0cT1O.s:209    .text:0000000000000188 .L5
     /tmp/ccI0cT1O.s:217    .text:0000000000000198 .L6
     /tmp/ccI0cT1O.s:1212   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccI0cT1O.s:2288   .debug_str:00000000000005a9 .LASF109
     /tmp/ccI0cT1O.s:2194   .debug_str:000000000000032e .LASF110
     /tmp/ccI0cT1O.s:2134   .debug_str:0000000000000113 .LASF111
     /tmp/ccI0cT1O.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccI0cT1O.s:254    .text:00000000000001c8 .Letext0
     /tmp/ccI0cT1O.s:2090   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccI0cT1O.s:2232   .debug_str:000000000000043b .LASF0
     /tmp/ccI0cT1O.s:2242   .debug_str:0000000000000467 .LASF1
     /tmp/ccI0cT1O.s:2212   .debug_str:00000000000003ae .LASF2
     /tmp/ccI0cT1O.s:2184   .debug_str:00000000000002db .LASF4
     /tmp/ccI0cT1O.s:2266   .debug_str:0000000000000508 .LASF3
     /tmp/ccI0cT1O.s:2112   .debug_str:000000000000008b .LASF5
     /tmp/ccI0cT1O.s:2244   .debug_str:000000000000047a .LASF6
     /tmp/ccI0cT1O.s:2230   .debug_str:0000000000000428 .LASF7
     /tmp/ccI0cT1O.s:2300   .debug_str:00000000000006c4 .LASF8
     /tmp/ccI0cT1O.s:2170   .debug_str:0000000000000251 .LASF9
     /tmp/ccI0cT1O.s:2254   .debug_str:00000000000004a3 .LASF10
     /tmp/ccI0cT1O.s:2292   .debug_str:0000000000000679 .LASF11
     /tmp/ccI0cT1O.s:2118   .debug_str:00000000000000a3 .LASF12
GAS LISTING /tmp/ccI0cT1O.s 			page 13


     /tmp/ccI0cT1O.s:2096   .debug_str:0000000000000022 .LASF13
     /tmp/ccI0cT1O.s:2126   .debug_str:00000000000000ed .LASF14
     /tmp/ccI0cT1O.s:2262   .debug_str:00000000000004da .LASF15
     /tmp/ccI0cT1O.s:2136   .debug_str:0000000000000136 .LASF16
     /tmp/ccI0cT1O.s:2130   .debug_str:0000000000000101 .LASF93
     /tmp/ccI0cT1O.s:2280   .debug_str:0000000000000571 .LASF17
     /tmp/ccI0cT1O.s:2324   .debug_str:0000000000000776 .LASF18
     /tmp/ccI0cT1O.s:2208   .debug_str:0000000000000392 .LASF27
     /tmp/ccI0cT1O.s:2144   .debug_str:000000000000018f .LASF45
     /tmp/ccI0cT1O.s:2302   .debug_str:00000000000006d4 .LASF19
     /tmp/ccI0cT1O.s:2278   .debug_str:0000000000000562 .LASF20
     /tmp/ccI0cT1O.s:2290   .debug_str:000000000000066d .LASF40
     /tmp/ccI0cT1O.s:2110   .debug_str:0000000000000067 .LASF42
     /tmp/ccI0cT1O.s:2248   .debug_str:0000000000000492 .LASF32
     /tmp/ccI0cT1O.s:2286   .debug_str:000000000000058d .LASF34
     /tmp/ccI0cT1O.s:2238   .debug_str:0000000000000458 .LASF21
     /tmp/ccI0cT1O.s:2142   .debug_str:000000000000016f .LASF23
     /tmp/ccI0cT1O.s:2202   .debug_str:0000000000000369 .LASF22
     /tmp/ccI0cT1O.s:2192   .debug_str:000000000000030a .LASF24
     /tmp/ccI0cT1O.s:2298   .debug_str:00000000000006a8 .LASF112
     /tmp/ccI0cT1O.s:2224   .debug_str:0000000000000404 .LASF25
     /tmp/ccI0cT1O.s:2196   .debug_str:000000000000033b .LASF26
     /tmp/ccI0cT1O.s:2240   .debug_str:0000000000000461 .LASF28
     /tmp/ccI0cT1O.s:2140   .debug_str:0000000000000160 .LASF113
     /tmp/ccI0cT1O.s:2132   .debug_str:0000000000000107 .LASF29
     /tmp/ccI0cT1O.s:2198   .debug_str:0000000000000357 .LASF30
     /tmp/ccI0cT1O.s:2114   .debug_str:0000000000000092 .LASF31
     /tmp/ccI0cT1O.s:2260   .debug_str:00000000000004cf .LASF33
     /tmp/ccI0cT1O.s:2318   .debug_str:0000000000000742 .LASF35
     /tmp/ccI0cT1O.s:2108   .debug_str:0000000000000059 .LASF36
     /tmp/ccI0cT1O.s:2152   .debug_str:00000000000001d0 .LASF37
     /tmp/ccI0cT1O.s:2276   .debug_str:0000000000000555 .LASF38
     /tmp/ccI0cT1O.s:2094   .debug_str:0000000000000008 .LASF39
     /tmp/ccI0cT1O.s:2098   .debug_str:0000000000000032 .LASF41
     /tmp/ccI0cT1O.s:2274   .debug_str:0000000000000540 .LASF43
     /tmp/ccI0cT1O.s:2150   .debug_str:00000000000001c7 .LASF44
     /tmp/ccI0cT1O.s:2148   .debug_str:00000000000001b2 .LASF46
     /tmp/ccI0cT1O.s:2268   .debug_str:000000000000051a .LASF47
     /tmp/ccI0cT1O.s:2256   .debug_str:00000000000004b2 .LASF48
     /tmp/ccI0cT1O.s:2294   .debug_str:0000000000000688 .LASF49
     /tmp/ccI0cT1O.s:2168   .debug_str:000000000000023e .LASF50
     /tmp/ccI0cT1O.s:2164   .debug_str:0000000000000230 .LASF51
     /tmp/ccI0cT1O.s:2138   .debug_str:000000000000014c .LASF52
     /tmp/ccI0cT1O.s:2092   .debug_str:0000000000000000 .LASF53
     /tmp/ccI0cT1O.s:2176   .debug_str:000000000000027a .LASF54
     /tmp/ccI0cT1O.s:2156   .debug_str:00000000000001fc .LASF55
     /tmp/ccI0cT1O.s:2120   .debug_str:00000000000000b3 .LASF56
     /tmp/ccI0cT1O.s:2178   .debug_str:000000000000028e .LASF57
     /tmp/ccI0cT1O.s:2158   .debug_str:0000000000000204 .LASF58
     /tmp/ccI0cT1O.s:2234   .debug_str:0000000000000448 .LASF59
     /tmp/ccI0cT1O.s:2314   .debug_str:000000000000072a .LASF60
     /tmp/ccI0cT1O.s:2106   .debug_str:0000000000000052 .LASF61
     /tmp/ccI0cT1O.s:2162   .debug_str:000000000000021d .LASF62
     /tmp/ccI0cT1O.s:2166   .debug_str:0000000000000238 .LASF63
     /tmp/ccI0cT1O.s:2284   .debug_str:000000000000057b .LASF64
     /tmp/ccI0cT1O.s:2104   .debug_str:000000000000004c .LASF65
     /tmp/ccI0cT1O.s:2328   .debug_str:0000000000000780 .LASF66
GAS LISTING /tmp/ccI0cT1O.s 			page 14


     /tmp/ccI0cT1O.s:2322   .debug_str:000000000000076b .LASF67
     /tmp/ccI0cT1O.s:2264   .debug_str:00000000000004f0 .LASF68
     /tmp/ccI0cT1O.s:2188   .debug_str:00000000000002f3 .LASF69
     /tmp/ccI0cT1O.s:2204   .debug_str:0000000000000374 .LASF70
     /tmp/ccI0cT1O.s:2124   .debug_str:00000000000000e3 .LASF71
     /tmp/ccI0cT1O.s:2180   .debug_str:0000000000000296 .LASF72
     /tmp/ccI0cT1O.s:2218   .debug_str:00000000000003e2 .LASF73
     /tmp/ccI0cT1O.s:2174   .debug_str:0000000000000264 .LASF74
     /tmp/ccI0cT1O.s:2250   .debug_str:0000000000000497 .LASF75
     /tmp/ccI0cT1O.s:2312   .debug_str:0000000000000717 .LASF76
     /tmp/ccI0cT1O.s:2100   .debug_str:000000000000003b .LASF77
     /tmp/ccI0cT1O.s:2214   .debug_str:00000000000003bc .LASF78
     /tmp/ccI0cT1O.s:2270   .debug_str:0000000000000521 .LASF79
     /tmp/ccI0cT1O.s:2122   .debug_str:00000000000000c7 .LASF80
     /tmp/ccI0cT1O.s:2282   .debug_str:0000000000000576 .LASF81
     /tmp/ccI0cT1O.s:2154   .debug_str:00000000000001eb .LASF82
     /tmp/ccI0cT1O.s:2172   .debug_str:000000000000025f .LASF83
     /tmp/ccI0cT1O.s:2220   .debug_str:00000000000003ec .LASF84
     /tmp/ccI0cT1O.s:2200   .debug_str:0000000000000364 .LASF85
     /tmp/ccI0cT1O.s:2320   .debug_str:000000000000075a .LASF86
     /tmp/ccI0cT1O.s:2116   .debug_str:000000000000009e .LASF87
     /tmp/ccI0cT1O.s:2186   .debug_str:00000000000002e2 .LASF88
     /tmp/ccI0cT1O.s:2128   .debug_str:00000000000000f9 .LASF89
     /tmp/ccI0cT1O.s:2226   .debug_str:000000000000040e .LASF90
     /tmp/ccI0cT1O.s:2210   .debug_str:00000000000003a2 .LASF114
     /tmp/ccI0cT1O.s:2296   .debug_str:000000000000068f .LASF115
     /tmp/ccI0cT1O.s:2310   .debug_str:000000000000070e .LASF91
     /tmp/ccI0cT1O.s:2160   .debug_str:0000000000000218 .LASF92
     /tmp/ccI0cT1O.s:2146   .debug_str:00000000000001a8 .LASF94
     /tmp/ccI0cT1O.s:2306   .debug_str:00000000000006f7 .LASF95
     /tmp/ccI0cT1O.s:2246   .debug_str:000000000000048d .LASF96
     /tmp/ccI0cT1O.s:2252   .debug_str:000000000000049e .LASF97
     /tmp/ccI0cT1O.s:18     .text:0000000000000000 .LFB44
     /tmp/ccI0cT1O.s:244    .text:00000000000001c8 .LFE44
     /tmp/ccI0cT1O.s:2026   .debug_loc:0000000000000000 .LLST0
     /tmp/ccI0cT1O.s:2033   .debug_loc:0000000000000023 .LLST1
     /tmp/ccI0cT1O.s:2044   .debug_loc:0000000000000059 .LLST2
     /tmp/ccI0cT1O.s:2055   .debug_loc:000000000000008f .LLST3
     /tmp/ccI0cT1O.s:37     .text:000000000000001c .LBB25
     /tmp/ccI0cT1O.s:51     .text:0000000000000034 .LBE25
     /tmp/ccI0cT1O.s:52     .text:0000000000000034 .LBB27
     /tmp/ccI0cT1O.s:79     .text:0000000000000078 .LBE27
     /tmp/ccI0cT1O.s:85     .text:0000000000000084 .LBB29
     /tmp/ccI0cT1O.s:97     .text:0000000000000088 .LBE29
     /tmp/ccI0cT1O.s:2062   .debug_loc:00000000000000b2 .LLST4
     /tmp/ccI0cT1O.s:99     .text:0000000000000088 .LBB31
     /tmp/ccI0cT1O.s:111    .text:0000000000000090 .LBE31
     /tmp/ccI0cT1O.s:2069   .debug_loc:00000000000000d5 .LLST5
     /tmp/ccI0cT1O.s:116    .text:00000000000000a0 .LVL5
     /tmp/ccI0cT1O.s:121    .text:00000000000000ac .LVL6
     /tmp/ccI0cT1O.s:130    .text:00000000000000c4 .LVL8
     /tmp/ccI0cT1O.s:148    .text:00000000000000fc .LVL11
     /tmp/ccI0cT1O.s:170    .text:0000000000000128 .LVL14
     /tmp/ccI0cT1O.s:176    .text:0000000000000134 .LVL15
     /tmp/ccI0cT1O.s:200    .text:0000000000000178 .LVL18
     /tmp/ccI0cT1O.s:208    .text:0000000000000188 .LVL19
     /tmp/ccI0cT1O.s:216    .text:0000000000000198 .LVL20
GAS LISTING /tmp/ccI0cT1O.s 			page 15


     /tmp/ccI0cT1O.s:222    .text:00000000000001a8 .LVL21
     /tmp/ccI0cT1O.s:2316   .debug_str:000000000000073d .LASF98
     /tmp/ccI0cT1O.s:2102   .debug_str:0000000000000042 .LASF99
     /tmp/ccI0cT1O.s:2258   .debug_str:00000000000004c5 .LASF100
     /tmp/ccI0cT1O.s:2326   .debug_str:000000000000077b .LASF101
     /tmp/ccI0cT1O.s:2228   .debug_str:0000000000000422 .LASF102
     /tmp/ccI0cT1O.s:2236   .debug_str:000000000000044f .LASF103
     /tmp/ccI0cT1O.s:2182   .debug_str:00000000000002ac .LASF116
     /tmp/ccI0cT1O.s:2304   .debug_str:00000000000006de .LASF104
     /tmp/ccI0cT1O.s:2216   .debug_str:00000000000003cf .LASF117
     /tmp/ccI0cT1O.s:2190   .debug_str:00000000000002fe .LASF118
     /tmp/ccI0cT1O.s:2206   .debug_str:000000000000038c .LASF105
     /tmp/ccI0cT1O.s:2308   .debug_str:0000000000000701 .LASF107
     /tmp/ccI0cT1O.s:2222   .debug_str:00000000000003fd .LASF106
     /tmp/ccI0cT1O.s:2272   .debug_str:0000000000000530 .LASF108
     /tmp/ccI0cT1O.s:125    .text:00000000000000b8 .LVL7
     /tmp/ccI0cT1O.s:178    .text:0000000000000138 .LVL16
     /tmp/ccI0cT1O.s:142    .text:00000000000000f0 .LVL9
     /tmp/ccI0cT1O.s:146    .text:00000000000000f4 .LVL10
     /tmp/ccI0cT1O.s:236    .text:00000000000001bc .LVL23
     /tmp/ccI0cT1O.s:151    .text:0000000000000104 .LVL12
     /tmp/ccI0cT1O.s:168    .text:0000000000000120 .LVL13
     /tmp/ccI0cT1O.s:239    .text:00000000000001c0 .LVL24
     /tmp/ccI0cT1O.s:189    .text:0000000000000160 .LVL17
     /tmp/ccI0cT1O.s:233    .text:00000000000001b8 .LVL22
     /tmp/ccI0cT1O.s:84     .text:0000000000000084 .LVL2
     /tmp/ccI0cT1O.s:94     .text:0000000000000088 .LVL3
     /tmp/ccI0cT1O.s:108    .text:0000000000000090 .LVL4
     /tmp/ccI0cT1O.s:258    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
_ZN15MemoryAllocator9free_listE
HEAP_END_ADDR
_ZN15MemoryAllocator14allocated_listE
_ZN5Riscv14supervisorTrapEv
_Z11printStringPKc
_Znwm
_ZdlPv
