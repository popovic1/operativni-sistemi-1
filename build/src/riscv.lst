GAS LISTING /tmp/ccfxXJkn.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB28:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** 
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** void Riscv::popSppSpie()
   6:src/riscv.cpp **** {
  12              		.loc 1 6 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   7:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 7 5
  21              		.loc 1 7 39 is_stmt 0
  22              	#APP
  23              	# 7 "src/riscv.cpp" 1
   8              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 8 5 is_stmt 1
  27              		.loc 1 8 30 is_stmt 0
  28              	# 8 "src/riscv.cpp" 1
   9              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 9 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE28:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 4552524F 		.string	"ERROR: Unexpected interrupt!"
  45      523A2055 
  45      6E657870 
  45      65637465 
  45      6420696E 
  46              		.text
GAS LISTING /tmp/ccfxXJkn.s 			page 2


  47              		.align	2
  48              		.globl	_ZN5Riscv11trapHandlerEv
  50              	_ZN5Riscv11trapHandlerEv:
  51              	.LFB29:
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::trapHandler() {
  52              		.loc 1 11 27 is_stmt 1
  53              		.cfi_startproc
  54 0020 130101FB 		addi	sp,sp,-80
  55              		.cfi_def_cfa_offset 80
  56 0024 23341104 		sd	ra,72(sp)
  57 0028 23308104 		sd	s0,64(sp)
  58 002c 233C9102 		sd	s1,56(sp)
  59 0030 23382103 		sd	s2,48(sp)
  60              		.cfi_offset 1, -8
  61              		.cfi_offset 8, -16
  62              		.cfi_offset 9, -24
  63              		.cfi_offset 18, -32
  64 0034 13040105 		addi	s0,sp,80
  65              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     uint64 scause = r_scause();
  66              		.loc 1 12 5
  67              	.LBB32:
  68              	.LBB33:
  69              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   7:src/../h/riscv.hpp **** #include "../lib/console.h"
   8:src/../h/riscv.hpp **** #include "../h/print.hpp"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  12:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp **** class Riscv
  16:src/../h/riscv.hpp **** {
  17:src/../h/riscv.hpp **** public:
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  22:src/../h/riscv.hpp ****     static void popSppSpie();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  25:src/../h/riscv.hpp ****     static void pushRegisters();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  28:src/../h/riscv.hpp ****     static void popRegisters();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register scause
  31:src/../h/riscv.hpp ****     static uint64 r_scause();
  32:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccfxXJkn.s 			page 3


  33:src/../h/riscv.hpp ****     // write register scause
  34:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register sepc
  37:src/../h/riscv.hpp ****     static uint64 r_sepc();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register sepc
  40:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // read register stvec
  43:src/../h/riscv.hpp ****     static uint64 r_stvec();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // write register stvec
  46:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // read register stval
  49:src/../h/riscv.hpp ****     static uint64 r_stval();
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // write register stval
  52:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     enum BitMaskSip
  55:src/../h/riscv.hpp ****     {
  56:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  57:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  58:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  59:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  60:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sip
  64:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sip
  67:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sip
  70:src/../h/riscv.hpp ****     static uint64 r_sip();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sip
  73:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     enum BitMaskSstatus
  76:src/../h/riscv.hpp ****     {
  77:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  78:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  79:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  80:src/../h/riscv.hpp ****     };
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // mask set register sstatus
  83:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // mask clear register sstatus
  86:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     // read register sstatus
  89:src/../h/riscv.hpp ****     static uint64 r_sstatus();
GAS LISTING /tmp/ccfxXJkn.s 			page 4


  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     // write register sstatus
  92:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // mask set register sie
  95:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     // mask clear register sie
  98:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static void supervisorTrap();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static long r_a0();
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static void w_a0(long a0);
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static uint64 r_a1();
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void push_a0(long a0);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** private:
 113:src/../h/riscv.hpp ****     static void trapHandler();
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** };
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     uint64 volatile scause;
  70              		.loc 2 120 5
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  71              		.loc 2 121 5
  72              		.loc 2 121 72 is_stmt 0
  73              	#APP
  74              	# 121 "src/../h/riscv.hpp" 1
 122              	    return scause;
  75              		csrr a5, scause
  76              	# 0 "" 2
  77              	#NO_APP
  78 003c 2334F4FC 		sd	a5,-56(s0)
  79              		.loc 2 122 5 is_stmt 1
  80              		.loc 2 122 12 is_stmt 0
  81 0040 833784FC 		ld	a5,-56(s0)
  82              	.LVL0:
  83              	.LBE33:
  84              	.LBE32:
  13:src/riscv.cpp ****     uint64 a0 = r_a0();
  85              		.loc 1 13 5 is_stmt 1
  86              	.LBB34:
  87              	.LBB35:
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
GAS LISTING /tmp/ccfxXJkn.s 			page 5


 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     uint64 volatile sepc;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 134:src/../h/riscv.hpp ****     return sepc;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     uint64 volatile stvec;
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 146:src/../h/riscv.hpp ****     return stvec;
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     uint64 volatile stval;
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 158:src/../h/riscv.hpp ****     return stval;
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 164:src/../h/riscv.hpp **** }
 165:src/../h/riscv.hpp **** 
 166:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 167:src/../h/riscv.hpp **** {
 168:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 169:src/../h/riscv.hpp **** }
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 172:src/../h/riscv.hpp **** {
 173:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     uint64 volatile sip;
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 180:src/../h/riscv.hpp ****     return sip;
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 184:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccfxXJkn.s 			page 6


 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 186:src/../h/riscv.hpp **** }
 187:src/../h/riscv.hpp **** 
 188:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 189:src/../h/riscv.hpp **** {
 190:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 191:src/../h/riscv.hpp **** }
 192:src/../h/riscv.hpp **** 
 193:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 196:src/../h/riscv.hpp **** }
 197:src/../h/riscv.hpp **** 
 198:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 199:src/../h/riscv.hpp **** {
 200:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 201:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 202:src/../h/riscv.hpp ****     return sstatus;
 203:src/../h/riscv.hpp **** }
 204:src/../h/riscv.hpp **** 
 205:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 206:src/../h/riscv.hpp **** {
 207:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 211:src/../h/riscv.hpp **** {
 212:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sie, %[mask]" : : [mask] "r"(mask));
 213:src/../h/riscv.hpp **** }
 214:src/../h/riscv.hpp **** 
 215:src/../h/riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 216:src/../h/riscv.hpp **** {
 217:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sie, %[mask]" : : [mask] "r"(mask));
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline long Riscv::r_a0() {
 221:src/../h/riscv.hpp ****     long volatile a0;
  88              		.loc 2 221 5
 222:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
  89              		.loc 2 222 5
  90              		.loc 2 222 52 is_stmt 0
  91              	#APP
  92              	# 222 "src/../h/riscv.hpp" 1
 223              	    return a0;
  93              		ld a4, 10*8(fp)
  94              	# 0 "" 2
  95              	#NO_APP
  96 0048 2330E4FC 		sd	a4,-64(s0)
  97              		.loc 2 223 5 is_stmt 1
  98              		.loc 2 223 12 is_stmt 0
  99 004c 833604FC 		ld	a3,-64(s0)
 100              	.LVL1:
 101              	.LBE35:
 102              	.LBE34:
  14:src/riscv.cpp ****     uint64 a1 = r_a1();
 103              		.loc 1 14 5 is_stmt 1
 104              	.LBB36:
GAS LISTING /tmp/ccfxXJkn.s 			page 7


 105              	.LBB37:
 224:src/../h/riscv.hpp **** }
 225:src/../h/riscv.hpp **** 
 226:src/../h/riscv.hpp **** inline void Riscv::w_a0(long a0) {
 227:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(a0));
 228:src/../h/riscv.hpp **** }
 229:src/../h/riscv.hpp **** 
 230:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1() {
 231:src/../h/riscv.hpp ****     uint64 volatile a1;
 106              		.loc 2 231 5
 232:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 11*8(fp)" : "=r"(a1));
 107              		.loc 2 232 5
 108              		.loc 2 232 52 is_stmt 0
 109              	#APP
 110              	# 232 "src/../h/riscv.hpp" 1
 233              	    return a1;
 111              		ld a4, 11*8(fp)
 112              	# 0 "" 2
 113              	#NO_APP
 114 0054 233CE4FA 		sd	a4,-72(s0)
 115              		.loc 2 233 5 is_stmt 1
 116              		.loc 2 233 12 is_stmt 0
 117 0058 033584FB 		ld	a0,-72(s0)
 118              	.LVL2:
 119              	.LBE37:
 120              	.LBE36:
  15:src/riscv.cpp ****     uint64 sepc;
 121              		.loc 1 15 5 is_stmt 1
  16:src/riscv.cpp ****     uint64 sstatus;
 122              		.loc 1 16 5
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     switch (scause) {
 123              		.loc 1 18 5
 124              	.LBB38:
 125 005c 1307F0FF 		li	a4,-1
 126 0060 1317F703 		slli	a4,a4,63
 127 0064 13071700 		addi	a4,a4,1
 128 0068 6382E70C 		beq	a5,a4,.L4
 129 006c 1307F0FF 		li	a4,-1
 130 0070 1317F703 		slli	a4,a4,63
 131 0074 13071700 		addi	a4,a4,1
 132 0078 6364F704 		bgtu	a5,a4,.L5
 133 007c 938787FF 		addi	a5,a5,-8
 134              	.LVL3:
 135 0080 13071000 		li	a4,1
 136 0084 6364F70C 		bgtu	a5,a4,.L6
 137              	.LBB39:
  19:src/riscv.cpp ****         case 0x08:
 138              		.loc 1 19 9
  20:src/riscv.cpp ****         case 0x09:
 139              		.loc 1 20 9
  21:src/riscv.cpp ****             //ecall: software interrupt
  22:src/riscv.cpp ****             sepc = r_sepc() + 4;
 140              		.loc 1 22 13
 141              	.LBB40:
 142              	.LBB41:
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccfxXJkn.s 			page 8


 143              		.loc 2 132 5
 133:src/../h/riscv.hpp ****     return sepc;
 144              		.loc 2 133 5
 133:src/../h/riscv.hpp ****     return sepc;
 145              		.loc 2 133 64 is_stmt 0
 146              	#APP
 147              	# 133 "src/../h/riscv.hpp" 1
 148              		csrr a5, sepc
 149              	# 0 "" 2
 150              	.LVL4:
 151              	#NO_APP
 152 008c 233CF4FC 		sd	a5,-40(s0)
 134:src/../h/riscv.hpp **** }
 153              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 154              		.loc 2 134 12 is_stmt 0
 155 0090 833484FD 		ld	s1,-40(s0)
 156              	.LBE41:
 157              	.LBE40:
 158              		.loc 1 22 18
 159 0094 93844400 		addi	s1,s1,4
 160              	.LVL5:
  23:src/riscv.cpp ****             sstatus = r_sstatus();
 161              		.loc 1 23 13 is_stmt 1
 162              	.LBB42:
 163              	.LBB43:
 200:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 164              		.loc 2 200 5
 201:src/../h/riscv.hpp ****     return sstatus;
 165              		.loc 2 201 5
 201:src/../h/riscv.hpp ****     return sstatus;
 166              		.loc 2 201 76 is_stmt 0
 167              	#APP
 168              	# 201 "src/../h/riscv.hpp" 1
 169              		csrr a5, sstatus
 170              	# 0 "" 2
 171              	#NO_APP
 172 009c 2338F4FC 		sd	a5,-48(s0)
 202:src/../h/riscv.hpp **** }
 173              		.loc 2 202 5 is_stmt 1
 202:src/../h/riscv.hpp **** }
 174              		.loc 2 202 12 is_stmt 0
 175 00a0 033904FD 		ld	s2,-48(s0)
 176              	.LVL6:
 177              	.LBE43:
 178              	.LBE42:
  24:src/riscv.cpp ****             void* mem;
 179              		.loc 1 24 13 is_stmt 1
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****             switch(a0){
 180              		.loc 1 26 13
 181 00a4 93071000 		li	a5,1
 182 00a8 638AF602 		beq	a3,a5,.L9
 183 00ac 93072000 		li	a5,2
 184 00b0 638AF604 		beq	a3,a5,.L10
 185              	.LVL7:
 186              	.L11:
GAS LISTING /tmp/ccfxXJkn.s 			page 9


  27:src/riscv.cpp ****                 case 0x01: // allocate
  28:src/riscv.cpp ****                     mem = MemoryAllocator::getInstance().allocate((size_t) a1);
  29:src/riscv.cpp ****                     push_a0((long) mem);
  30:src/riscv.cpp ****                     break;
  31:src/riscv.cpp ****                 case 0x02: // deallocate
  32:src/riscv.cpp ****                     push_a0(MemoryAllocator::getInstance().deallocate((void *)a1));
  33:src/riscv.cpp ****                     break;
  34:src/riscv.cpp ****                 default:
  35:src/riscv.cpp ****                     break;
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****             }
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****             w_sstatus(sstatus);
 187              		.loc 1 39 13
 188              	.LBB44:
 189              	.LBB45:
 207:src/../h/riscv.hpp **** }
 190              		.loc 2 207 5
 207:src/../h/riscv.hpp **** }
 191              		.loc 2 207 77 is_stmt 0
 192              	#APP
 193              	# 207 "src/../h/riscv.hpp" 1
 194              		csrw sstatus, s2
 195              	# 0 "" 2
 196              	.LVL8:
 197              	#NO_APP
 198              	.LBE45:
 199              	.LBE44:
  40:src/riscv.cpp ****             w_sepc(sepc);
 200              		.loc 1 40 13 is_stmt 1
 201              	.LBB46:
 202              	.LBB47:
 139:src/../h/riscv.hpp **** }
 203              		.loc 2 139 5
 139:src/../h/riscv.hpp **** }
 204              		.loc 2 139 65 is_stmt 0
 205              	#APP
 206              	# 139 "src/../h/riscv.hpp" 1
 140:src/../h/riscv.hpp **** 
 207              		csrw sepc, s1
 208              	# 0 "" 2
 209              		.loc 2 140 1
 210              	#NO_APP
 211 00bc 6F008007 		j	.L3
 212              	.LVL9:
 213              	.L5:
 214              	.LBE47:
 215              	.LBE46:
 216              	.LBE39:
  18:src/riscv.cpp ****         case 0x08:
 217              		.loc 1 18 5
 218 00c0 1307F0FF 		li	a4,-1
 219 00c4 1317F703 		slli	a4,a4,63
 220 00c8 13079700 		addi	a4,a4,9
 221 00cc 6390E708 		bne	a5,a4,.L6
 222              	.LBB58:
  41:src/riscv.cpp ****             break;
GAS LISTING /tmp/ccfxXJkn.s 			page 10


  42:src/riscv.cpp ****         case 0x8000000000000001UL:
  43:src/riscv.cpp ****             //timer interrupt
  44:src/riscv.cpp ****             mc_sip(SIP_SSIP);
  45:src/riscv.cpp ****             break;
  46:src/riscv.cpp ****         case 0x8000000000000009UL:
 223              		.loc 1 46 9 is_stmt 1
  47:src/riscv.cpp ****             //external hardware interrupt
  48:src/riscv.cpp ****             console_handler();
 224              		.loc 1 48 13
 225              		.loc 1 48 28 is_stmt 0
 226 00d0 97000000 		call	console_handler@plt
 226      E7800000 
 227              	.LVL10:
  49:src/riscv.cpp ****             break;
 228              		.loc 1 49 13 is_stmt 1
 229 00d8 6F00C005 		j	.L3
 230              	.LVL11:
 231              	.L9:
  27:src/riscv.cpp ****                     mem = MemoryAllocator::getInstance().allocate((size_t) a1);
 232              		.loc 1 27 17
  28:src/riscv.cpp ****                     push_a0((long) mem);
 233              		.loc 1 28 21
 234              	.LBB48:
 235              	.LBB49:
 236              		.file 3 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
 237              		.loc 3 26 9
 238              		.loc 3 26 32 is_stmt 0
 239 00dc 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 239      83C70700 
 240 00e4 63980700 		bnez	a5,.L12
 241              	.LVL12:
GAS LISTING /tmp/ccfxXJkn.s 			page 11


 242 00e8 93071000 		li	a5,1
 243 00ec 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 243      2300F700 
 244              	.LVL13:
 245              	.L12:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 246              		.loc 3 27 9 is_stmt 1
 247              	.LBE49:
 248              	.LBE48:
  28:src/riscv.cpp ****                     push_a0((long) mem);
 249              		.loc 1 28 78 is_stmt 0
 250 00f4 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 250      E7800000 
 251              	.LVL14:
  29:src/riscv.cpp ****                     break;
 252              		.loc 1 29 21 is_stmt 1
 253              	.LBB50:
 254              	.LBB51:
 234:src/../h/riscv.hpp **** }
 235:src/../h/riscv.hpp **** 
 236:src/../h/riscv.hpp **** inline void Riscv::w_a1(uint64 a1) {
 237:src/../h/riscv.hpp ****     __asm__ volatile ("mv a1, %0" : : "r"(a1));
 238:src/../h/riscv.hpp **** }
 239:src/../h/riscv.hpp **** 
 240:src/../h/riscv.hpp **** inline void Riscv::push_a0(long a0) {
 241:src/../h/riscv.hpp ****     __asm__ volatile ("sd %0, 10*8(fp)" : : "r"(a0));
 255              		.loc 2 241 5
 256              		.loc 2 241 53 is_stmt 0
 257              	#APP
 258              	# 241 "src/../h/riscv.hpp" 1
 242              	}
 259              		sd a0, 10*8(fp)
 260              	# 0 "" 2
 261              		.loc 2 242 1
 262              	#NO_APP
 263 0100 6FF05FFB 		j	.L11
 264              	.LVL15:
 265              	.L10:
 266              	.LBE51:
 267              	.LBE50:
  31:src/riscv.cpp ****                     push_a0(MemoryAllocator::getInstance().deallocate((void *)a1));
 268              		.loc 1 31 17 is_stmt 1
  32:src/riscv.cpp ****                     break;
 269              		.loc 1 32 21
 270              	.LBB52:
 271              	.LBB53:
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 272              		.loc 3 26 9
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 273              		.loc 3 26 32 is_stmt 0
 274 0104 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 274      83C70700 
 275 010c 63980700 		bnez	a5,.L13
 276              	.LVL16:
 277 0110 93071000 		li	a5,1
 278 0114 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 278      2300F700 
GAS LISTING /tmp/ccfxXJkn.s 			page 12


 279              	.LVL17:
 280              	.L13:
 281              		.loc 3 27 9 is_stmt 1
 282              	.LBE53:
 283              	.LBE52:
  32:src/riscv.cpp ****                     break;
 284              		.loc 1 32 81 is_stmt 0
 285 011c 97000000 		call	_ZN15MemoryAllocator10deallocateEPv@plt
 285      E7800000 
 286              	.LVL18:
 287              	.LBB54:
 288              	.LBB55:
 241:src/../h/riscv.hpp **** }
 289              		.loc 2 241 5 is_stmt 1
 241:src/../h/riscv.hpp **** }
 290              		.loc 2 241 53 is_stmt 0
 291              	#APP
 292              	# 241 "src/../h/riscv.hpp" 1
 293              		sd a0, 10*8(fp)
 294              	# 0 "" 2
 295              		.loc 2 242 1
 296              	#NO_APP
 297 0128 6FF0DFF8 		j	.L11
 298              	.LVL19:
 299              	.L4:
 300              	.LBE55:
 301              	.LBE54:
  42:src/riscv.cpp ****             //timer interrupt
 302              		.loc 1 42 9 is_stmt 1
  44:src/riscv.cpp ****             break;
 303              		.loc 1 44 13
 304              	.LBB56:
 305              	.LBB57:
 173:src/../h/riscv.hpp **** }
 306              		.loc 2 173 5
 173:src/../h/riscv.hpp **** }
 307              		.loc 2 173 64 is_stmt 0
 308 012c 93072000 		li	a5,2
 309              	.LVL20:
 310              	#APP
 311              	# 173 "src/../h/riscv.hpp" 1
 312              		csrc sip, a5
 313              	# 0 "" 2
 314              	.LVL21:
 315              	#NO_APP
 316              	.L3:
 317              	.LBE57:
 318              	.LBE56:
 319              	.LBE58:
 320              	.LBE38:
  50:src/riscv.cpp ****         default:
  51:src/riscv.cpp ****             printString("ERROR: Unexpected interrupt!");
  52:src/riscv.cpp ****     }
  53:src/riscv.cpp **** 
  54:src/riscv.cpp **** }...
 321              		.loc 1 54 1
 322 0134 83308104 		ld	ra,72(sp)
GAS LISTING /tmp/ccfxXJkn.s 			page 13


 323              		.cfi_remember_state
 324              		.cfi_restore 1
 325 0138 03340104 		ld	s0,64(sp)
 326              		.cfi_restore 8
 327              		.cfi_def_cfa 2, 80
 328 013c 83348103 		ld	s1,56(sp)
 329              		.cfi_restore 9
 330 0140 03390103 		ld	s2,48(sp)
 331              		.cfi_restore 18
 332 0144 13010105 		addi	sp,sp,80
 333              		.cfi_def_cfa_offset 0
 334 0148 67800000 		jr	ra
 335              	.LVL22:
 336              	.L6:
 337              		.cfi_restore_state
 338              	.LBB60:
 339              	.LBB59:
  50:src/riscv.cpp ****         default:
 340              		.loc 1 50 9 is_stmt 1
  51:src/riscv.cpp ****             printString("ERROR: Unexpected interrupt!");
 341              		.loc 1 51 13
  51:src/riscv.cpp ****             printString("ERROR: Unexpected interrupt!");
 342              		.loc 1 51 24 is_stmt 0
 343 014c 17050000 		lla	a0,.LC0
 343      13050500 
 344              	.LVL23:
 345 0154 97000000 		call	_Z11printStringPKc@plt
 345      E7800000 
 346              	.LVL24:
 347              	.LBE59:
 348              	.LBE60:
 349              		.loc 1 54 1
 350 015c 6FF09FFD 		j	.L3
 351              		.cfi_endproc
 352              	.LFE29:
 354              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 355              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 356              		.align	3
 359              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 360 0000 00000000 		.zero	8
 360      00000000 
 361              		.text
 362              	.Letext0:
 363              		.file 4 "src/../h/../lib/hw.h"
 364              		.file 5 "src/../h/../lib/console.h"
 365              		.file 6 "src/../h/../h/print.hpp"
GAS LISTING /tmp/ccfxXJkn.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccfxXJkn.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccfxXJkn.s:13     .text:0000000000000000 .L0 
     /tmp/ccfxXJkn.s:14     .text:0000000000000000 .L0 
     /tmp/ccfxXJkn.s:15     .text:0000000000000004 .L0 
     /tmp/ccfxXJkn.s:17     .text:0000000000000008 .L0 
     /tmp/ccfxXJkn.s:19     .text:000000000000000c .L0 
     /tmp/ccfxXJkn.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:7      .text:000000000000000c .L0 
     /tmp/ccfxXJkn.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:8      .text:0000000000000010 .L0 
     /tmp/ccfxXJkn.s:33     .text:0000000000000014 .L0 
     /tmp/ccfxXJkn.s:34     .text:0000000000000018 .L0 
     /tmp/ccfxXJkn.s:35     .text:0000000000000018 .L0 
     /tmp/ccfxXJkn.s:37     .text:000000000000001c .L0 
     /tmp/ccfxXJkn.s:39     .text:0000000000000020 .L0 
     /tmp/ccfxXJkn.s:50     .text:0000000000000020 _ZN5Riscv11trapHandlerEv
     /tmp/ccfxXJkn.s:53     .text:0000000000000020 .L0 
     /tmp/ccfxXJkn.s:54     .text:0000000000000020 .L0 
     /tmp/ccfxXJkn.s:55     .text:0000000000000024 .L0 
     /tmp/ccfxXJkn.s:60     .text:0000000000000034 .L0 
     /tmp/ccfxXJkn.s:61     .text:0000000000000034 .L0 
     /tmp/ccfxXJkn.s:62     .text:0000000000000034 .L0 
     /tmp/ccfxXJkn.s:63     .text:0000000000000034 .L0 
     /tmp/ccfxXJkn.s:65     .text:0000000000000038 .L0 
     /tmp/ccfxXJkn.s:70     .text:0000000000000038 .L0 
     /tmp/ccfxXJkn.s:71     .text:0000000000000038 .L0 
     /tmp/ccfxXJkn.s:72     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:121    .text:0000000000000038 .L0 
     /tmp/ccfxXJkn.s:80     .text:0000000000000040 .L0 
     /tmp/ccfxXJkn.s:81     .text:0000000000000040 .L0 
     /tmp/ccfxXJkn.s:88     .text:0000000000000044 .L0 
     /tmp/ccfxXJkn.s:89     .text:0000000000000044 .L0 
     /tmp/ccfxXJkn.s:90     .text:0000000000000044 .L0 
  src/../h/riscv.hpp:222    .text:0000000000000044 .L0 
     /tmp/ccfxXJkn.s:98     .text:000000000000004c .L0 
     /tmp/ccfxXJkn.s:99     .text:000000000000004c .L0 
     /tmp/ccfxXJkn.s:106    .text:0000000000000050 .L0 
     /tmp/ccfxXJkn.s:107    .text:0000000000000050 .L0 
     /tmp/ccfxXJkn.s:108    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:232    .text:0000000000000050 .L0 
     /tmp/ccfxXJkn.s:116    .text:0000000000000058 .L0 
     /tmp/ccfxXJkn.s:117    .text:0000000000000058 .L0 
     /tmp/ccfxXJkn.s:122    .text:000000000000005c .L0 
     /tmp/ccfxXJkn.s:123    .text:000000000000005c .L0 
     /tmp/ccfxXJkn.s:125    .text:000000000000005c .L0 
     /tmp/ccfxXJkn.s:139    .text:0000000000000088 .L0 
     /tmp/ccfxXJkn.s:140    .text:0000000000000088 .L0 
     /tmp/ccfxXJkn.s:143    .text:0000000000000088 .L0 
     /tmp/ccfxXJkn.s:144    .text:0000000000000088 .L0 
     /tmp/ccfxXJkn.s:145    .text:0000000000000088 .L0 
  src/../h/riscv.hpp:133    .text:0000000000000088 .L0 
     /tmp/ccfxXJkn.s:154    .text:0000000000000090 .L0 
     /tmp/ccfxXJkn.s:155    .text:0000000000000090 .L0 
     /tmp/ccfxXJkn.s:159    .text:0000000000000094 .L0 
     /tmp/ccfxXJkn.s:164    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccfxXJkn.s 			page 15


     /tmp/ccfxXJkn.s:165    .text:0000000000000098 .L0 
     /tmp/ccfxXJkn.s:166    .text:0000000000000098 .L0 
  src/../h/riscv.hpp:201    .text:0000000000000098 .L0 
     /tmp/ccfxXJkn.s:174    .text:00000000000000a0 .L0 
     /tmp/ccfxXJkn.s:175    .text:00000000000000a0 .L0 
     /tmp/ccfxXJkn.s:180    .text:00000000000000a4 .L0 
     /tmp/ccfxXJkn.s:181    .text:00000000000000a4 .L0 
     /tmp/ccfxXJkn.s:190    .text:00000000000000b4 .L0 
     /tmp/ccfxXJkn.s:191    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:207    .text:00000000000000b4 .L0 
     /tmp/ccfxXJkn.s:203    .text:00000000000000b8 .L0 
     /tmp/ccfxXJkn.s:204    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:139    .text:00000000000000b8 .L0 
     /tmp/ccfxXJkn.s:211    .text:00000000000000bc .L0 
     /tmp/ccfxXJkn.s:218    .text:00000000000000c0 .L0 
     /tmp/ccfxXJkn.s:224    .text:00000000000000d0 .L0 
     /tmp/ccfxXJkn.s:225    .text:00000000000000d0 .L0 
     /tmp/ccfxXJkn.s:226    .text:00000000000000d0 .L0 
     /tmp/ccfxXJkn.s:229    .text:00000000000000d8 .L0 
     /tmp/ccfxXJkn.s:233    .text:00000000000000dc .L0 
     /tmp/ccfxXJkn.s:237    .text:00000000000000dc .L0 
     /tmp/ccfxXJkn.s:238    .text:00000000000000dc .L0 
     /tmp/ccfxXJkn.s:359    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccfxXJkn.s:239    .text:00000000000000dc .L0 
     /tmp/ccfxXJkn.s:249    .text:00000000000000f4 .L0 
     /tmp/ccfxXJkn.s:250    .text:00000000000000f4 .L0 
     /tmp/ccfxXJkn.s:255    .text:00000000000000fc .L0 
     /tmp/ccfxXJkn.s:256    .text:00000000000000fc .L0 
  src/../h/riscv.hpp:241    .text:00000000000000fc .L0 
     /tmp/ccfxXJkn.s:263    .text:0000000000000100 .L0 
     /tmp/ccfxXJkn.s:269    .text:0000000000000104 .L0 
     /tmp/ccfxXJkn.s:272    .text:0000000000000104 .L0 
     /tmp/ccfxXJkn.s:273    .text:0000000000000104 .L0 
     /tmp/ccfxXJkn.s:274    .text:0000000000000104 .L0 
     /tmp/ccfxXJkn.s:284    .text:000000000000011c .L0 
     /tmp/ccfxXJkn.s:285    .text:000000000000011c .L0 
     /tmp/ccfxXJkn.s:290    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:241    .text:0000000000000124 .L0 
     /tmp/ccfxXJkn.s:297    .text:0000000000000128 .L0 
     /tmp/ccfxXJkn.s:303    .text:000000000000012c .L0 
     /tmp/ccfxXJkn.s:306    .text:000000000000012c .L0 
     /tmp/ccfxXJkn.s:307    .text:000000000000012c .L0 
     /tmp/ccfxXJkn.s:308    .text:000000000000012c .L0 
     /tmp/ccfxXJkn.s:322    .text:0000000000000134 .L0 
     /tmp/ccfxXJkn.s:323    .text:0000000000000138 .L0 
     /tmp/ccfxXJkn.s:324    .text:0000000000000138 .L0 
     /tmp/ccfxXJkn.s:326    .text:000000000000013c .L0 
     /tmp/ccfxXJkn.s:327    .text:000000000000013c .L0 
     /tmp/ccfxXJkn.s:329    .text:0000000000000140 .L0 
     /tmp/ccfxXJkn.s:331    .text:0000000000000144 .L0 
     /tmp/ccfxXJkn.s:333    .text:0000000000000148 .L0 
     /tmp/ccfxXJkn.s:337    .text:000000000000014c .L0 
     /tmp/ccfxXJkn.s:341    .text:000000000000014c .L0 
     /tmp/ccfxXJkn.s:342    .text:000000000000014c .L0 
     /tmp/ccfxXJkn.s:343    .text:000000000000014c .L0 
     /tmp/ccfxXJkn.s:350    .text:000000000000015c .L0 
     /tmp/ccfxXJkn.s:351    .text:0000000000000160 .L0 
GAS LISTING /tmp/ccfxXJkn.s 			page 16


     /tmp/ccfxXJkn.s:366    .text:0000000000000160 .L0 
     /tmp/ccfxXJkn.s:239    .text:00000000000000dc .L0 
     /tmp/ccfxXJkn.s:243    .text:00000000000000ec .L0 
     /tmp/ccfxXJkn.s:274    .text:0000000000000104 .L0 
     /tmp/ccfxXJkn.s:278    .text:0000000000000114 .L0 
     /tmp/ccfxXJkn.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccfxXJkn.s:343    .text:000000000000014c .L0 
     /tmp/ccfxXJkn.s:299    .text:000000000000012c .L4
     /tmp/ccfxXJkn.s:213    .text:00000000000000c0 .L5
     /tmp/ccfxXJkn.s:336    .text:000000000000014c .L6
     /tmp/ccfxXJkn.s:231    .text:00000000000000dc .L9
     /tmp/ccfxXJkn.s:265    .text:0000000000000104 .L10
     /tmp/ccfxXJkn.s:316    .text:0000000000000134 .L3
     /tmp/ccfxXJkn.s:245    .text:00000000000000f4 .L12
     /tmp/ccfxXJkn.s:186    .text:00000000000000b4 .L11
     /tmp/ccfxXJkn.s:280    .text:000000000000011c .L13
     /tmp/ccfxXJkn.s:1313   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccfxXJkn.s:2480   .debug_str:0000000000000593 .LASF99
     /tmp/ccfxXJkn.s:2442   .debug_str:0000000000000491 .LASF100
     /tmp/ccfxXJkn.s:2334   .debug_str:00000000000000fd .LASF101
     /tmp/ccfxXJkn.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccfxXJkn.s:362    .text:0000000000000160 .Letext0
     /tmp/ccfxXJkn.s:2292   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccfxXJkn.s:2424   .debug_str:000000000000042f .LASF0
     /tmp/ccfxXJkn.s:2438   .debug_str:000000000000046b .LASF1
     /tmp/ccfxXJkn.s:2408   .debug_str:00000000000003af .LASF2
     /tmp/ccfxXJkn.s:2382   .debug_str:00000000000002da .LASF4
     /tmp/ccfxXJkn.s:2460   .debug_str:000000000000050e .LASF3
     /tmp/ccfxXJkn.s:2312   .debug_str:0000000000000081 .LASF5
     /tmp/ccfxXJkn.s:2440   .debug_str:000000000000047e .LASF6
     /tmp/ccfxXJkn.s:2422   .debug_str:000000000000041c .LASF7
     /tmp/ccfxXJkn.s:2490   .debug_str:0000000000000695 .LASF8
     /tmp/ccfxXJkn.s:2370   .debug_str:000000000000027c .LASF9
     /tmp/ccfxXJkn.s:2448   .debug_str:00000000000004ab .LASF10
     /tmp/ccfxXJkn.s:2484   .debug_str:0000000000000663 .LASF11
     /tmp/ccfxXJkn.s:2318   .debug_str:0000000000000092 .LASF12
     /tmp/ccfxXJkn.s:2298   .debug_str:0000000000000022 .LASF13
     /tmp/ccfxXJkn.s:2328   .debug_str:00000000000000e3 .LASF14
     /tmp/ccfxXJkn.s:2456   .debug_str:00000000000004e0 .LASF15
     /tmp/ccfxXJkn.s:2336   .debug_str:0000000000000120 .LASF16
     /tmp/ccfxXJkn.s:2332   .debug_str:00000000000000f7 .LASF102
     /tmp/ccfxXJkn.s:2472   .debug_str:000000000000055b .LASF17
     /tmp/ccfxXJkn.s:2508   .debug_str:000000000000071d .LASF18
     /tmp/ccfxXJkn.s:2404   .debug_str:0000000000000393 .LASF27
     /tmp/ccfxXJkn.s:2348   .debug_str:00000000000001bc .LASF44
     /tmp/ccfxXJkn.s:2492   .debug_str:00000000000006a5 .LASF19
     /tmp/ccfxXJkn.s:2470   .debug_str:000000000000054c .LASF20
     /tmp/ccfxXJkn.s:2482   .debug_str:0000000000000657 .LASF39
     /tmp/ccfxXJkn.s:2310   .debug_str:000000000000005d .LASF41
     /tmp/ccfxXJkn.s:2444   .debug_str:000000000000049f .LASF31
     /tmp/ccfxXJkn.s:2478   .debug_str:0000000000000577 .LASF33
     /tmp/ccfxXJkn.s:2432   .debug_str:0000000000000451 .LASF21
     /tmp/ccfxXJkn.s:2342   .debug_str:000000000000015d .LASF23
     /tmp/ccfxXJkn.s:2400   .debug_str:0000000000000370 .LASF22
     /tmp/ccfxXJkn.s:2390   .debug_str:0000000000000307 .LASF24
     /tmp/ccfxXJkn.s:2488   .debug_str:0000000000000679 .LASF103
     /tmp/ccfxXJkn.s:2418   .debug_str:00000000000003fe .LASF25
GAS LISTING /tmp/ccfxXJkn.s 			page 17


     /tmp/ccfxXJkn.s:2394   .debug_str:0000000000000336 .LASF26
     /tmp/ccfxXJkn.s:2434   .debug_str:000000000000045a .LASF28
     /tmp/ccfxXJkn.s:2392   .debug_str:000000000000032b .LASF104
     /tmp/ccfxXJkn.s:2466   .debug_str:0000000000000536 .LASF29
     /tmp/ccfxXJkn.s:2386   .debug_str:00000000000002f2 .LASF30
     /tmp/ccfxXJkn.s:2454   .debug_str:00000000000004d5 .LASF32
     /tmp/ccfxXJkn.s:2502   .debug_str:00000000000006e9 .LASF34
     /tmp/ccfxXJkn.s:2308   .debug_str:000000000000004f .LASF35
     /tmp/ccfxXJkn.s:2354   .debug_str:00000000000001f3 .LASF36
     /tmp/ccfxXJkn.s:2468   .debug_str:000000000000053f .LASF37
     /tmp/ccfxXJkn.s:2296   .debug_str:0000000000000008 .LASF38
     /tmp/ccfxXJkn.s:2300   .debug_str:0000000000000032 .LASF40
     /tmp/ccfxXJkn.s:2358   .debug_str:000000000000021f .LASF42
     /tmp/ccfxXJkn.s:2352   .debug_str:00000000000001ea .LASF43
     /tmp/ccfxXJkn.s:2350   .debug_str:00000000000001d5 .LASF45
     /tmp/ccfxXJkn.s:2462   .debug_str:0000000000000520 .LASF46
     /tmp/ccfxXJkn.s:2450   .debug_str:00000000000004ba .LASF47
     /tmp/ccfxXJkn.s:2486   .debug_str:0000000000000672 .LASF48
     /tmp/ccfxXJkn.s:2368   .debug_str:0000000000000269 .LASF49
     /tmp/ccfxXJkn.s:2364   .debug_str:000000000000025b .LASF50
     /tmp/ccfxXJkn.s:2338   .debug_str:0000000000000136 .LASF51
     /tmp/ccfxXJkn.s:2294   .debug_str:0000000000000000 .LASF52
     /tmp/ccfxXJkn.s:2374   .debug_str:00000000000002a0 .LASF53
     /tmp/ccfxXJkn.s:2380   .debug_str:00000000000002d2 .LASF54
     /tmp/ccfxXJkn.s:2322   .debug_str:00000000000000a9 .LASF55
     /tmp/ccfxXJkn.s:2376   .debug_str:00000000000002b4 .LASF56
     /tmp/ccfxXJkn.s:2360   .debug_str:0000000000000234 .LASF57
     /tmp/ccfxXJkn.s:2426   .debug_str:000000000000043c .LASF58
     /tmp/ccfxXJkn.s:2498   .debug_str:00000000000006d1 .LASF59
     /tmp/ccfxXJkn.s:2306   .debug_str:0000000000000048 .LASF60
     /tmp/ccfxXJkn.s:2362   .debug_str:0000000000000248 .LASF61
     /tmp/ccfxXJkn.s:2366   .debug_str:0000000000000263 .LASF62
     /tmp/ccfxXJkn.s:2476   .debug_str:0000000000000565 .LASF63
     /tmp/ccfxXJkn.s:2304   .debug_str:0000000000000042 .LASF64
     /tmp/ccfxXJkn.s:2512   .debug_str:0000000000000727 .LASF65
     /tmp/ccfxXJkn.s:2506   .debug_str:0000000000000712 .LASF66
     /tmp/ccfxXJkn.s:2458   .debug_str:00000000000004f6 .LASF67
     /tmp/ccfxXJkn.s:2436   .debug_str:0000000000000460 .LASF68
     /tmp/ccfxXJkn.s:2402   .debug_str:000000000000037b .LASF69
     /tmp/ccfxXJkn.s:2326   .debug_str:00000000000000d9 .LASF70
     /tmp/ccfxXJkn.s:2378   .debug_str:00000000000002bc .LASF71
     /tmp/ccfxXJkn.s:2414   .debug_str:00000000000003e3 .LASF72
     /tmp/ccfxXJkn.s:2372   .debug_str:000000000000028a .LASF73
     /tmp/ccfxXJkn.s:2446   .debug_str:00000000000004a4 .LASF74
     /tmp/ccfxXJkn.s:2340   .debug_str:000000000000014a .LASF75
     /tmp/ccfxXJkn.s:2302   .debug_str:000000000000003b .LASF76
     /tmp/ccfxXJkn.s:2410   .debug_str:00000000000003bd .LASF77
     /tmp/ccfxXJkn.s:2464   .debug_str:0000000000000527 .LASF78
     /tmp/ccfxXJkn.s:2324   .debug_str:00000000000000bd .LASF79
     /tmp/ccfxXJkn.s:2474   .debug_str:0000000000000560 .LASF80
     /tmp/ccfxXJkn.s:2356   .debug_str:000000000000020e .LASF81
     /tmp/ccfxXJkn.s:2314   .debug_str:0000000000000088 .LASF82
     /tmp/ccfxXJkn.s:2416   .debug_str:00000000000003ed .LASF83
     /tmp/ccfxXJkn.s:2398   .debug_str:000000000000036b .LASF84
     /tmp/ccfxXJkn.s:2504   .debug_str:0000000000000701 .LASF85
     /tmp/ccfxXJkn.s:2316   .debug_str:000000000000008d .LASF86
     /tmp/ccfxXJkn.s:2384   .debug_str:00000000000002e1 .LASF87
GAS LISTING /tmp/ccfxXJkn.s 			page 18


     /tmp/ccfxXJkn.s:2330   .debug_str:00000000000000ef .LASF88
     /tmp/ccfxXJkn.s:2420   .debug_str:0000000000000408 .LASF89
     /tmp/ccfxXJkn.s:2406   .debug_str:00000000000003a3 .LASF105
     /tmp/ccfxXJkn.s:2396   .debug_str:0000000000000352 .LASF106
     /tmp/ccfxXJkn.s:2496   .debug_str:00000000000006c8 .LASF90
     /tmp/ccfxXJkn.s:51     .text:0000000000000020 .LFB29
     /tmp/ccfxXJkn.s:352    .text:0000000000000160 .LFE29
     /tmp/ccfxXJkn.s:2320   .debug_str:00000000000000a2 .LASF91
     /tmp/ccfxXJkn.s:2136   .debug_loc:0000000000000000 .LLST0
     /tmp/ccfxXJkn.s:2157   .debug_loc:000000000000005e .LLST1
     /tmp/ccfxXJkn.s:2184   .debug_loc:00000000000000e0 .LLST2
     /tmp/ccfxXJkn.s:2430   .debug_str:000000000000044c .LASF92
     /tmp/ccfxXJkn.s:2211   .debug_loc:0000000000000162 .LLST3
     /tmp/ccfxXJkn.s:2452   .debug_str:00000000000004cd .LASF93
     /tmp/ccfxXJkn.s:2222   .debug_loc:0000000000000198 .LLST4
     /tmp/ccfxXJkn.s:2282   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccfxXJkn.s:2233   .debug_loc:00000000000001ce .LLST5
     /tmp/ccfxXJkn.s:141    .text:0000000000000088 .LBB40
     /tmp/ccfxXJkn.s:157    .text:0000000000000094 .LBE40
     /tmp/ccfxXJkn.s:162    .text:0000000000000098 .LBB42
     /tmp/ccfxXJkn.s:178    .text:00000000000000a4 .LBE42
     /tmp/ccfxXJkn.s:188    .text:00000000000000b4 .LBB44
     /tmp/ccfxXJkn.s:199    .text:00000000000000b8 .LBE44
     /tmp/ccfxXJkn.s:2240   .debug_loc:00000000000001f1 .LLST6
     /tmp/ccfxXJkn.s:201    .text:00000000000000b8 .LBB46
     /tmp/ccfxXJkn.s:215    .text:00000000000000c0 .LBE46
     /tmp/ccfxXJkn.s:2247   .debug_loc:0000000000000214 .LLST7
     /tmp/ccfxXJkn.s:234    .text:00000000000000dc .LBB48
     /tmp/ccfxXJkn.s:248    .text:00000000000000f4 .LBE48
     /tmp/ccfxXJkn.s:253    .text:00000000000000fc .LBB50
     /tmp/ccfxXJkn.s:267    .text:0000000000000104 .LBE50
     /tmp/ccfxXJkn.s:270    .text:0000000000000104 .LBB52
     /tmp/ccfxXJkn.s:283    .text:000000000000011c .LBE52
     /tmp/ccfxXJkn.s:287    .text:0000000000000124 .LBB54
     /tmp/ccfxXJkn.s:301    .text:000000000000012c .LBE54
     /tmp/ccfxXJkn.s:2254   .debug_loc:0000000000000237 .LLST9
     /tmp/ccfxXJkn.s:304    .text:000000000000012c .LBB56
     /tmp/ccfxXJkn.s:318    .text:0000000000000134 .LBE56
     /tmp/ccfxXJkn.s:2261   .debug_loc:000000000000025a .LLST10
     /tmp/ccfxXJkn.s:227    .text:00000000000000d8 .LVL10
     /tmp/ccfxXJkn.s:251    .text:00000000000000fc .LVL14
     /tmp/ccfxXJkn.s:286    .text:0000000000000124 .LVL18
     /tmp/ccfxXJkn.s:346    .text:000000000000015c .LVL24
     /tmp/ccfxXJkn.s:67     .text:0000000000000038 .LBB32
     /tmp/ccfxXJkn.s:84     .text:0000000000000044 .LBE32
     /tmp/ccfxXJkn.s:86     .text:0000000000000044 .LBB34
     /tmp/ccfxXJkn.s:102    .text:0000000000000050 .LBE34
     /tmp/ccfxXJkn.s:104    .text:0000000000000050 .LBB36
     /tmp/ccfxXJkn.s:120    .text:000000000000005c .LBE36
     /tmp/ccfxXJkn.s:10     .text:0000000000000000 .LFB28
     /tmp/ccfxXJkn.s:40     .text:0000000000000020 .LFE28
     /tmp/ccfxXJkn.s:2510   .debug_str:0000000000000722 .LASF94
     /tmp/ccfxXJkn.s:2428   .debug_str:0000000000000443 .LASF95
     /tmp/ccfxXJkn.s:2344   .debug_str:000000000000017d .LASF107
     /tmp/ccfxXJkn.s:2500   .debug_str:00000000000006e4 .LASF108
     /tmp/ccfxXJkn.s:2494   .debug_str:00000000000006af .LASF109
     /tmp/ccfxXJkn.s:2346   .debug_str:00000000000001ac .LASF96
GAS LISTING /tmp/ccfxXJkn.s 			page 19


     /tmp/ccfxXJkn.s:2412   .debug_str:00000000000003d0 .LASF97
     /tmp/ccfxXJkn.s:2388   .debug_str:00000000000002fb .LASF98
     /tmp/ccfxXJkn.s:82     .text:0000000000000044 .LVL0
     /tmp/ccfxXJkn.s:134    .text:0000000000000080 .LVL3
     /tmp/ccfxXJkn.s:150    .text:000000000000008c .LVL4
     /tmp/ccfxXJkn.s:212    .text:00000000000000c0 .LVL9
     /tmp/ccfxXJkn.s:298    .text:000000000000012c .LVL19
     /tmp/ccfxXJkn.s:309    .text:0000000000000130 .LVL20
     /tmp/ccfxXJkn.s:100    .text:0000000000000050 .LVL1
     /tmp/ccfxXJkn.s:185    .text:00000000000000b4 .LVL7
     /tmp/ccfxXJkn.s:230    .text:00000000000000dc .LVL11
     /tmp/ccfxXJkn.s:264    .text:0000000000000104 .LVL15
     /tmp/ccfxXJkn.s:314    .text:0000000000000134 .LVL21
     /tmp/ccfxXJkn.s:335    .text:000000000000014c .LVL22
     /tmp/ccfxXJkn.s:118    .text:000000000000005c .LVL2
     /tmp/ccfxXJkn.s:344    .text:0000000000000154 .LVL23
     /tmp/ccfxXJkn.s:160    .text:0000000000000098 .LVL5
     /tmp/ccfxXJkn.s:176    .text:00000000000000a4 .LVL6
     /tmp/ccfxXJkn.s:196    .text:00000000000000b8 .LVL8
     /tmp/ccfxXJkn.s:367    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccfxXJkn.s:137    .text:0000000000000088 .LBB39
     /tmp/ccfxXJkn.s:216    .text:00000000000000c0 .LBE39
     /tmp/ccfxXJkn.s:222    .text:00000000000000d0 .LBB58
     /tmp/ccfxXJkn.s:319    .text:0000000000000134 .LBE58
     /tmp/ccfxXJkn.s:339    .text:000000000000014c .LBB59
     /tmp/ccfxXJkn.s:347    .text:000000000000015c .LBE59

UNDEFINED SYMBOLS
console_handler
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator10deallocateEPv
_Z11printStringPKc
