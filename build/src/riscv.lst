GAS LISTING /tmp/cctbwNzi.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB48:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** 
   3:src/riscv.cpp **** 
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** void Riscv::popSppSpie()
   6:src/riscv.cpp **** {
  12              		.loc 1 6 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   7:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 7 5
  21              		.loc 1 7 39 is_stmt 0
  22              	#APP
  23              	# 7 "src/riscv.cpp" 1
   8              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 8 5 is_stmt 1
  27              		.loc 1 8 30 is_stmt 0
  28              	# 8 "src/riscv.cpp" 1
   9              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 9 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE48:
  42              		.align	2
  43              		.globl	_ZN5Riscv11trapHandlerEv
  45              	_ZN5Riscv11trapHandlerEv:
  46              	.LFB49:
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::trapHandler() {
  47              		.loc 1 11 27 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FB 		addi	sp,sp,-80
GAS LISTING /tmp/cctbwNzi.s 			page 2


  50              		.cfi_def_cfa_offset 80
  51 0024 23341104 		sd	ra,72(sp)
  52 0028 23308104 		sd	s0,64(sp)
  53 002c 233C9102 		sd	s1,56(sp)
  54 0030 23382103 		sd	s2,48(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040105 		addi	s0,sp,80
  60              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     uint64 scause = r_scause();
  61              		.loc 1 12 5
  62              	.LBB38:
  63              	.LBB39:
  64              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   6:src/../h/riscv.hpp **** #include "PCB.hpp"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  10:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  20:src/../h/riscv.hpp ****     static void popSppSpie();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void pushRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  26:src/../h/riscv.hpp ****     static void popRegisters();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register scause
  29:src/../h/riscv.hpp ****     static uint64 r_scause();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register scause
  32:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register sepc
  35:src/../h/riscv.hpp ****     static uint64 r_sepc();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register sepc
  38:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stvec
  41:src/../h/riscv.hpp ****     static uint64 r_stvec();
GAS LISTING /tmp/cctbwNzi.s 			page 3


  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stvec
  44:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // read register stval
  47:src/../h/riscv.hpp ****     static uint64 r_stval();
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // write register stval
  50:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSip
  53:src/../h/riscv.hpp ****     {
  54:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  55:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  56:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  57:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  58:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  59:src/../h/riscv.hpp ****     };
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask set register sip
  62:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask clear register sip
  65:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // read register sip
  68:src/../h/riscv.hpp ****     static uint64 r_sip();
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // write register sip
  71:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     enum BitMaskSstatus
  74:src/../h/riscv.hpp ****     {
  75:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/riscv.hpp ****     };
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask set register sstatus
  81:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask clear register sstatus
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register sstatus
  87:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // write register sstatus
  90:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // mask set register sie
  93:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // mask clear register sie
  96:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     static void supervisorTrap();
GAS LISTING /tmp/cctbwNzi.s 			page 4


  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static long r_a0();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static void w_a0(long a0);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static uint64 r_a1();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static uint64 r_a2();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void w_a2(uint64 a1);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static uint64 r_a3();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void w_a3(uint64 a1);
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void push_a0(long a0);
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** private:
 119:src/../h/riscv.hpp ****     static void trapHandler();
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** };
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile scause;
  65              		.loc 2 126 5
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  66              		.loc 2 127 5
  67              		.loc 2 127 72 is_stmt 0
  68              	#APP
  69              	# 127 "src/../h/riscv.hpp" 1
 128              	    return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 2334F4FC 		sd	a5,-56(s0)
  74              		.loc 2 128 5 is_stmt 1
  75              		.loc 2 128 12 is_stmt 0
  76 0040 833784FC 		ld	a5,-56(s0)
  77              	.LVL0:
  78              	.LBE39:
  79              	.LBE38:
  13:src/riscv.cpp ****     uint64 a0 = r_a0();
  80              		.loc 1 13 5 is_stmt 1
  81              	.LBB40:
  82              	.LBB41:
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
GAS LISTING /tmp/cctbwNzi.s 			page 5


 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     uint64 volatile sepc;
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 140:src/../h/riscv.hpp ****     return sepc;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     uint64 volatile stvec;
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 152:src/../h/riscv.hpp ****     return stvec;
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 158:src/../h/riscv.hpp **** }
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     uint64 volatile stval;
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 164:src/../h/riscv.hpp ****     return stval;
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 178:src/../h/riscv.hpp **** {
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 180:src/../h/riscv.hpp **** }
 181:src/../h/riscv.hpp **** 
 182:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 183:src/../h/riscv.hpp **** {
 184:src/../h/riscv.hpp ****     uint64 volatile sip;
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 186:src/../h/riscv.hpp ****     return sip;
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 192:src/../h/riscv.hpp **** }
 193:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctbwNzi.s 			page 6


 194:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 195:src/../h/riscv.hpp **** {
 196:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 197:src/../h/riscv.hpp **** }
 198:src/../h/riscv.hpp **** 
 199:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 200:src/../h/riscv.hpp **** {
 201:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 202:src/../h/riscv.hpp **** }
 203:src/../h/riscv.hpp **** 
 204:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 205:src/../h/riscv.hpp **** {
 206:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 207:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 208:src/../h/riscv.hpp ****     return sstatus;
 209:src/../h/riscv.hpp **** }
 210:src/../h/riscv.hpp **** 
 211:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 212:src/../h/riscv.hpp **** {
 213:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 214:src/../h/riscv.hpp **** }
 215:src/../h/riscv.hpp **** 
 216:src/../h/riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 217:src/../h/riscv.hpp **** {
 218:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sie, %[mask]" : : [mask] "r"(mask));
 219:src/../h/riscv.hpp **** }
 220:src/../h/riscv.hpp **** 
 221:src/../h/riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 222:src/../h/riscv.hpp **** {
 223:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sie, %[mask]" : : [mask] "r"(mask));
 224:src/../h/riscv.hpp **** }
 225:src/../h/riscv.hpp **** 
 226:src/../h/riscv.hpp **** inline long Riscv::r_a0() {
 227:src/../h/riscv.hpp ****     long volatile a0;
  83              		.loc 2 227 5
 228:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
  84              		.loc 2 228 5
  85              		.loc 2 228 52 is_stmt 0
  86              	#APP
  87              	# 228 "src/../h/riscv.hpp" 1
 229              	    return a0;
  88              		ld a4, 10*8(fp)
  89              	# 0 "" 2
  90              	#NO_APP
  91 0048 2330E4FC 		sd	a4,-64(s0)
  92              		.loc 2 229 5 is_stmt 1
  93              		.loc 2 229 12 is_stmt 0
  94 004c 833604FC 		ld	a3,-64(s0)
  95              	.LVL1:
  96              	.LBE41:
  97              	.LBE40:
  14:src/riscv.cpp ****     uint64 a1 = r_a1();
  98              		.loc 1 14 5 is_stmt 1
  99              	.LBB42:
 100              	.LBB43:
 230:src/../h/riscv.hpp **** }
 231:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctbwNzi.s 			page 7


 232:src/../h/riscv.hpp **** inline void Riscv::w_a0(long a0) {
 233:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(a0));
 234:src/../h/riscv.hpp **** }
 235:src/../h/riscv.hpp **** 
 236:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1() {
 237:src/../h/riscv.hpp ****     uint64 volatile a1;
 101              		.loc 2 237 5
 238:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 11*8(fp)" : "=r"(a1));
 102              		.loc 2 238 5
 103              		.loc 2 238 52 is_stmt 0
 104              	#APP
 105              	# 238 "src/../h/riscv.hpp" 1
 239              	    return a1;
 106              		ld a4, 11*8(fp)
 107              	# 0 "" 2
 108              	#NO_APP
 109 0054 233CE4FA 		sd	a4,-72(s0)
 110              		.loc 2 239 5 is_stmt 1
 111              		.loc 2 239 12 is_stmt 0
 112 0058 033584FB 		ld	a0,-72(s0)
 113              	.LVL2:
 114              	.LBE43:
 115              	.LBE42:
  15:src/riscv.cpp ****     uint64 a2 = r_a2();
 116              		.loc 1 15 5 is_stmt 1
 117              	.LBB44:
 118              	.LBB45:
 240:src/../h/riscv.hpp **** }
 241:src/../h/riscv.hpp **** 
 242:src/../h/riscv.hpp **** inline void Riscv::w_a1(uint64 a1) {
 243:src/../h/riscv.hpp ****     __asm__ volatile ("mv a1, %0" : : "r"(a1));
 244:src/../h/riscv.hpp **** }
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline uint64 Riscv::r_a2() {
 247:src/../h/riscv.hpp ****     uint64 volatile a2;
 119              		.loc 2 247 5
 248:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 12*8(fp)" : "=r"(a2));
 120              		.loc 2 248 5
 121              		.loc 2 248 52 is_stmt 0
 122              	#APP
 123              	# 248 "src/../h/riscv.hpp" 1
 249              	    return a2;
 124              		ld a4, 12*8(fp)
 125              	# 0 "" 2
 126              	#NO_APP
 127 0060 2338E4FA 		sd	a4,-80(s0)
 128              		.loc 2 249 5 is_stmt 1
 129              		.loc 2 249 12 is_stmt 0
 130 0064 833504FB 		ld	a1,-80(s0)
 131              	.LVL3:
 132              	.LBE45:
 133              	.LBE44:
  16:src/riscv.cpp ****     uint64 sepc;
 134              		.loc 1 16 5 is_stmt 1
  17:src/riscv.cpp ****     uint64 sstatus;
 135              		.loc 1 17 5
  18:src/riscv.cpp **** 
GAS LISTING /tmp/cctbwNzi.s 			page 8


  19:src/riscv.cpp ****     switch (scause) {
 136              		.loc 1 19 5
 137              	.LBB46:
 138 0068 1307F0FF 		li	a4,-1
 139 006c 1317F703 		slli	a4,a4,63
 140 0070 13071700 		addi	a4,a4,1
 141 0074 638AE710 		beq	a5,a4,.L4
 142 0078 1307F0FF 		li	a4,-1
 143 007c 1317F703 		slli	a4,a4,63
 144 0080 13071700 		addi	a4,a4,1
 145 0084 6366F704 		bgtu	a5,a4,.L5
 146 0088 938787FF 		addi	a5,a5,-8
 147              	.LVL4:
 148 008c 13071000 		li	a4,1
 149 0090 6366F708 		bgtu	a5,a4,.L3
 150              	.LBB47:
  20:src/riscv.cpp ****         case 0x08:
 151              		.loc 1 20 9
  21:src/riscv.cpp ****         case 0x09:
 152              		.loc 1 21 9
  22:src/riscv.cpp ****             //ecall: software interrupt
  23:src/riscv.cpp ****             sepc = r_sepc();
 153              		.loc 1 23 13
 154              	.LBB48:
 155              	.LBB49:
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 156              		.loc 2 138 5
 139:src/../h/riscv.hpp ****     return sepc;
 157              		.loc 2 139 5
 139:src/../h/riscv.hpp ****     return sepc;
 158              		.loc 2 139 64 is_stmt 0
 159              	#APP
 160              	# 139 "src/../h/riscv.hpp" 1
 161              		csrr a5, sepc
 162              	# 0 "" 2
 163              	.LVL5:
 164              	#NO_APP
 165 0098 233CF4FC 		sd	a5,-40(s0)
 140:src/../h/riscv.hpp **** }
 166              		.loc 2 140 5 is_stmt 1
 140:src/../h/riscv.hpp **** }
 167              		.loc 2 140 12 is_stmt 0
 168 009c 833484FD 		ld	s1,-40(s0)
 169              	.LVL6:
 170              	.LBE49:
 171              	.LBE48:
  24:src/riscv.cpp ****             sstatus = r_sstatus();
 172              		.loc 1 24 13 is_stmt 1
 173              	.LBB50:
 174              	.LBB51:
 206:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 175              		.loc 2 206 5
 207:src/../h/riscv.hpp ****     return sstatus;
 176              		.loc 2 207 5
 207:src/../h/riscv.hpp ****     return sstatus;
 177              		.loc 2 207 76 is_stmt 0
 178              	#APP
GAS LISTING /tmp/cctbwNzi.s 			page 9


 179              	# 207 "src/../h/riscv.hpp" 1
 180              		csrr a5, sstatus
 181              	# 0 "" 2
 182              	#NO_APP
 183 00a4 2338F4FC 		sd	a5,-48(s0)
 208:src/../h/riscv.hpp **** }
 184              		.loc 2 208 5 is_stmt 1
 208:src/../h/riscv.hpp **** }
 185              		.loc 2 208 12 is_stmt 0
 186 00a8 033904FD 		ld	s2,-48(s0)
 187              	.LVL7:
 188              	.LBE51:
 189              	.LBE50:
  25:src/riscv.cpp ****             void* mem;
 190              		.loc 1 25 13 is_stmt 1
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****             switch(a0){
 191              		.loc 1 27 13
 192 00ac 93073001 		li	a5,19
 193 00b0 63E0D706 		bgtu	a3,a5,.L9
 194 00b4 93962600 		slli	a3,a3,2
 195              	.LVL8:
 196 00b8 17070000 		lla	a4,.L11
 196      13070700 
 197 00c0 B386E600 		add	a3,a3,a4
 198 00c4 83A70600 		lw	a5,0(a3)
 199 00c8 B387E700 		add	a5,a5,a4
 200 00cc 67800700 		jr	a5
 201              		.section	.rodata
 202              		.align	2
 203              		.align	2
 204              	.L11:
 205 0000 00000000 		.word	.L9-.L11
 206 0004 00000000 		.word	.L15-.L11
 207 0008 00000000 		.word	.L14-.L11
 208 000c 00000000 		.word	.L9-.L11
 209 0010 00000000 		.word	.L9-.L11
 210 0014 00000000 		.word	.L9-.L11
 211 0018 00000000 		.word	.L9-.L11
 212 001c 00000000 		.word	.L9-.L11
 213 0020 00000000 		.word	.L9-.L11
 214 0024 00000000 		.word	.L9-.L11
 215 0028 00000000 		.word	.L9-.L11
 216 002c 00000000 		.word	.L9-.L11
 217 0030 00000000 		.word	.L9-.L11
 218 0034 00000000 		.word	.L9-.L11
 219 0038 00000000 		.word	.L9-.L11
 220 003c 00000000 		.word	.L9-.L11
 221 0040 00000000 		.word	.L9-.L11
 222 0044 00000000 		.word	.L13-.L11
 223 0048 00000000 		.word	.L12-.L11
 224 004c 00000000 		.word	.L10-.L11
 225              		.text
 226              	.LVL9:
 227              	.L5:
 228              	.LBE47:
  19:src/riscv.cpp ****         case 0x08:
GAS LISTING /tmp/cctbwNzi.s 			page 10


 229              		.loc 1 19 5 is_stmt 0
 230 00d0 1307F0FF 		li	a4,-1
 231 00d4 1317F703 		slli	a4,a4,63
 232 00d8 13079700 		addi	a4,a4,9
 233 00dc 6390E704 		bne	a5,a4,.L3
 234              	.LBB70:
  28:src/riscv.cpp ****                 case 0x01: // allocate
  29:src/riscv.cpp ****                     mem = MemoryAllocator::getInstance().allocate((size_t) a1);
  30:src/riscv.cpp ****                     push_a0((long) mem);
  31:src/riscv.cpp ****                     break;
  32:src/riscv.cpp ****                 case 0x02: // deallocate
  33:src/riscv.cpp ****                     push_a0(MemoryAllocator::getInstance().deallocate((void *)a1));
  34:src/riscv.cpp ****                     break;
  35:src/riscv.cpp ****                 case 0x11: //thread_create
  36:src/riscv.cpp ****                     push_a0((uint64)PCB::createThread((PCB::Body)a1, (void*)a2));
  37:src/riscv.cpp ****                     break;
  38:src/riscv.cpp ****                 case 0x12: // thread_exit
  39:src/riscv.cpp ****                     push_a0(PCB::exit());
  40:src/riscv.cpp ****                     break;
  41:src/riscv.cpp ****                 case 0x13:
  42:src/riscv.cpp ****                     PCB::dispatch();
  43:src/riscv.cpp ****                     break;
  44:src/riscv.cpp ****                 case 0x14:
  45:src/riscv.cpp ****                     break;
  46:src/riscv.cpp ****                 default:
  47:src/riscv.cpp ****                     //printString("Unknown interrupt!");
  48:src/riscv.cpp ****                     break;
  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             }
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****             w_sstatus(sstatus);
  53:src/riscv.cpp ****             w_sepc(sepc + 4);
  54:src/riscv.cpp ****             break;
  55:src/riscv.cpp ****         case 0x8000000000000001UL:
  56:src/riscv.cpp ****             //timer interrupt
  57:src/riscv.cpp ****             mc_sip(SIP_SSIP);
  58:src/riscv.cpp ****             break;
  59:src/riscv.cpp ****         case 0x8000000000000009UL:
 235              		.loc 1 59 9 is_stmt 1
  60:src/riscv.cpp ****             //external hardware interrupt
  61:src/riscv.cpp ****             console_handler();
 236              		.loc 1 61 13
 237              		.loc 1 61 28 is_stmt 0
 238 00e0 97000000 		call	console_handler@plt
 238      E7800000 
 239              	.LVL10:
  62:src/riscv.cpp ****             break;
 240              		.loc 1 62 13 is_stmt 1
 241              	.LBE70:
 242              	.LBE46:
  63:src/riscv.cpp ****         default:
  64:src/riscv.cpp ****             break;
  65:src/riscv.cpp ****             //printString("ERROR: Unexpected interrupt!");
  66:src/riscv.cpp ****     }
  67:src/riscv.cpp **** 
  68:src/riscv.cpp **** }...
 243              		.loc 1 68 1 is_stmt 0
GAS LISTING /tmp/cctbwNzi.s 			page 11


 244 00e8 6F004003 		j	.L3
 245              	.LVL11:
 246              	.L15:
 247              	.LBB73:
 248              	.LBB71:
  28:src/riscv.cpp ****                 case 0x01: // allocate
 249              		.loc 1 28 17 is_stmt 1
  29:src/riscv.cpp ****                     mem = MemoryAllocator::getInstance().allocate((size_t) a1);
 250              		.loc 1 29 21
 251              	.LBB52:
 252              	.LBB53:
 253              		.file 3 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   2:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/MemoryAllocator.hpp **** #include "print.hpp"
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** struct Block {
   6:src/../h/../h/MemoryAllocator.hpp ****     size_t size;
   7:src/../h/../h/MemoryAllocator.hpp ****     Block *next;
   8:src/../h/../h/MemoryAllocator.hpp **** };
   9:src/../h/../h/MemoryAllocator.hpp **** 
  10:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/MemoryAllocator.hpp **** 
  12:src/../h/../h/MemoryAllocator.hpp **** private:
  13:src/../h/../h/MemoryAllocator.hpp **** 
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     MemoryAllocator() {}
  16:src/../h/../h/MemoryAllocator.hpp **** 
  17:src/../h/../h/MemoryAllocator.hpp ****     static Block *free_list;
  18:src/../h/../h/MemoryAllocator.hpp ****     static Block *allocated_list;
  19:src/../h/../h/MemoryAllocator.hpp **** 
  20:src/../h/../h/MemoryAllocator.hpp **** 
  21:src/../h/../h/MemoryAllocator.hpp **** public:
  22:src/../h/../h/MemoryAllocator.hpp **** 
  23:src/../h/../h/MemoryAllocator.hpp **** 
  24:src/../h/../h/MemoryAllocator.hpp ****     // Get the singleton instance
  25:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator &getInstance() {
  26:src/../h/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
 254              		.loc 3 26 9
 255              		.loc 3 26 32 is_stmt 0
 256 00ec 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 256      83C70700 
 257 00f4 63980700 		bnez	a5,.L16
 258              	.LVL12:
 259 00f8 93071000 		li	a5,1
 260 00fc 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 260      2300F700 
 261              	.LVL13:
 262              	.L16:
  27:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 263              		.loc 3 27 9 is_stmt 1
 264              	.LBE53:
 265              	.LBE52:
  29:src/riscv.cpp ****                     mem = MemoryAllocator::getInstance().allocate((size_t) a1);
 266              		.loc 1 29 78 is_stmt 0
 267 0104 97000000 		call	_ZN15MemoryAllocator8allocateEm@plt
 267      E7800000 
GAS LISTING /tmp/cctbwNzi.s 			page 12


 268              	.LVL14:
  30:src/riscv.cpp ****                     push_a0((long) mem);
 269              		.loc 1 30 21 is_stmt 1
 270              	.LBB54:
 271              	.LBB55:
 250:src/../h/riscv.hpp **** }
 251:src/../h/riscv.hpp **** 
 252:src/../h/riscv.hpp **** inline void Riscv::w_a2(uint64 a2) {
 253:src/../h/riscv.hpp ****     __asm__ volatile ("mv a2, %0" : : "r"(a2));
 254:src/../h/riscv.hpp **** }
 255:src/../h/riscv.hpp **** 
 256:src/../h/riscv.hpp **** inline uint64 Riscv::r_a3() {
 257:src/../h/riscv.hpp ****     uint64 volatile a3;
 258:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 13*8(fp)" : "=r"(a3));
 259:src/../h/riscv.hpp ****     return a3;
 260:src/../h/riscv.hpp **** }
 261:src/../h/riscv.hpp **** 
 262:src/../h/riscv.hpp **** inline void Riscv::w_a3(uint64 a3) {
 263:src/../h/riscv.hpp ****     __asm__ volatile ("mv a3, %0" : : "r"(a3));
 264:src/../h/riscv.hpp **** }
 265:src/../h/riscv.hpp **** 
 266:src/../h/riscv.hpp **** inline void Riscv::push_a0(long a0) {
 267:src/../h/riscv.hpp ****     __asm__ volatile ("sd %0, 10*8(fp)" : : "r"(a0));
 272              		.loc 2 267 5
 273              		.loc 2 267 53 is_stmt 0
 274              	#APP
 275              	# 267 "src/../h/riscv.hpp" 1
 268              	}
 276              		sd a0, 10*8(fp)
 277              	# 0 "" 2
 278              	.LVL15:
 279              	#NO_APP
 280              	.L9:
 281              	.LBE55:
 282              	.LBE54:
  52:src/riscv.cpp ****             w_sstatus(sstatus);
 283              		.loc 1 52 13 is_stmt 1
 284              	.LBB56:
 285              	.LBB57:
 213:src/../h/riscv.hpp **** }
 286              		.loc 2 213 5
 213:src/../h/riscv.hpp **** }
 287              		.loc 2 213 77 is_stmt 0
 288              	#APP
 289              	# 213 "src/../h/riscv.hpp" 1
 290              		csrw sstatus, s2
 291              	# 0 "" 2
 292              	.LVL16:
 293              	#NO_APP
 294              	.LBE57:
 295              	.LBE56:
  53:src/riscv.cpp ****             w_sepc(sepc + 4);
 296              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp ****             w_sepc(sepc + 4);
 297              		.loc 1 53 19 is_stmt 0
 298 0114 93844400 		addi	s1,s1,4
 299              	.LVL17:
GAS LISTING /tmp/cctbwNzi.s 			page 13


 300              	.LBB58:
 301              	.LBB59:
 145:src/../h/riscv.hpp **** }
 302              		.loc 2 145 5 is_stmt 1
 145:src/../h/riscv.hpp **** }
 303              		.loc 2 145 65 is_stmt 0
 304              	#APP
 305              	# 145 "src/../h/riscv.hpp" 1
 306              		csrw sepc, s1
 307              	# 0 "" 2
 308              	.LVL18:
 309              	#NO_APP
 310              	.L3:
 311              	.LBE59:
 312              	.LBE58:
 313              	.LBE71:
 314              	.LBE73:
 315              		.loc 1 68 1
 316 011c 83308104 		ld	ra,72(sp)
 317              		.cfi_remember_state
 318              		.cfi_restore 1
 319 0120 03340104 		ld	s0,64(sp)
 320              		.cfi_restore 8
 321              		.cfi_def_cfa 2, 80
 322 0124 83348103 		ld	s1,56(sp)
 323              		.cfi_restore 9
 324 0128 03390103 		ld	s2,48(sp)
 325              		.cfi_restore 18
 326 012c 13010105 		addi	sp,sp,80
 327              		.cfi_def_cfa_offset 0
 328 0130 67800000 		jr	ra
 329              	.LVL19:
 330              	.L14:
 331              		.cfi_restore_state
 332              	.LBB74:
 333              	.LBB72:
  32:src/riscv.cpp ****                 case 0x02: // deallocate
 334              		.loc 1 32 17 is_stmt 1
  33:src/riscv.cpp ****                     push_a0(MemoryAllocator::getInstance().deallocate((void *)a1));
 335              		.loc 1 33 21
 336              	.LBB60:
 337              	.LBB61:
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 338              		.loc 3 26 9
  26:src/../h/../h/MemoryAllocator.hpp ****         return instance;
 339              		.loc 3 26 32 is_stmt 0
 340 0134 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 340      83C70700 
 341 013c 63980700 		bnez	a5,.L17
 342              	.LVL20:
 343 0140 93071000 		li	a5,1
 344 0144 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 344      2300F700 
 345              	.LVL21:
 346              	.L17:
 347              		.loc 3 27 9 is_stmt 1
 348              	.LBE61:
GAS LISTING /tmp/cctbwNzi.s 			page 14


 349              	.LBE60:
  33:src/riscv.cpp ****                     push_a0(MemoryAllocator::getInstance().deallocate((void *)a1));
 350              		.loc 1 33 81 is_stmt 0
 351 014c 97000000 		call	_ZN15MemoryAllocator10deallocateEPv@plt
 351      E7800000 
 352              	.LVL22:
 353              	.LBB62:
 354              	.LBB63:
 267:src/../h/riscv.hpp **** }
 355              		.loc 2 267 5 is_stmt 1
 267:src/../h/riscv.hpp **** }
 356              		.loc 2 267 53 is_stmt 0
 357              	#APP
 358              	# 267 "src/../h/riscv.hpp" 1
 359              		sd a0, 10*8(fp)
 360              	# 0 "" 2
 361              		.loc 2 268 1
 362              	#NO_APP
 363 0158 6FF09FFB 		j	.L9
 364              	.LVL23:
 365              	.L13:
 366              	.LBE63:
 367              	.LBE62:
  35:src/riscv.cpp ****                 case 0x11: //thread_create
 368              		.loc 1 35 17 is_stmt 1
  36:src/riscv.cpp ****                     push_a0((uint64)PCB::createThread((PCB::Body)a1, (void*)a2));
 369              		.loc 1 36 21
  36:src/riscv.cpp ****                     push_a0((uint64)PCB::createThread((PCB::Body)a1, (void*)a2));
 370              		.loc 1 36 54 is_stmt 0
 371 015c 97000000 		call	_ZN3PCB12createThreadEPFvPvES0_@plt
 371      E7800000 
 372              	.LVL24:
 373              	.LBB64:
 374              	.LBB65:
 267:src/../h/riscv.hpp **** }
 375              		.loc 2 267 5 is_stmt 1
 267:src/../h/riscv.hpp **** }
 376              		.loc 2 267 53 is_stmt 0
 377              	#APP
 378              	# 267 "src/../h/riscv.hpp" 1
 379              		sd a0, 10*8(fp)
 380              	# 0 "" 2
 381              		.loc 2 268 1
 382              	#NO_APP
 383 0168 6FF09FFA 		j	.L9
 384              	.LVL25:
 385              	.L12:
 386              	.LBE65:
 387              	.LBE64:
  38:src/riscv.cpp ****                 case 0x12: // thread_exit
 388              		.loc 1 38 17 is_stmt 1
  39:src/riscv.cpp ****                     push_a0(PCB::exit());
 389              		.loc 1 39 21
  39:src/riscv.cpp ****                     push_a0(PCB::exit());
 390              		.loc 1 39 38 is_stmt 0
 391 016c 97000000 		call	_ZN3PCB4exitEv@plt
 391      E7800000 
GAS LISTING /tmp/cctbwNzi.s 			page 15


 392              	.LVL26:
 393              	.LBB66:
 394              	.LBB67:
 267:src/../h/riscv.hpp **** }
 395              		.loc 2 267 5 is_stmt 1
 267:src/../h/riscv.hpp **** }
 396              		.loc 2 267 53 is_stmt 0
 397              	#APP
 398              	# 267 "src/../h/riscv.hpp" 1
 399              		sd a0, 10*8(fp)
 400              	# 0 "" 2
 401              		.loc 2 268 1
 402              	#NO_APP
 403 0178 6FF09FF9 		j	.L9
 404              	.LVL27:
 405              	.L10:
 406              	.LBE67:
 407              	.LBE66:
  41:src/riscv.cpp ****                 case 0x13:
 408              		.loc 1 41 17 is_stmt 1
  42:src/riscv.cpp ****                     PCB::dispatch();
 409              		.loc 1 42 21
  42:src/riscv.cpp ****                     PCB::dispatch();
 410              		.loc 1 42 34 is_stmt 0
 411 017c 97000000 		call	_ZN3PCB8dispatchEv@plt
 411      E7800000 
 412              	.LVL28:
  43:src/riscv.cpp ****                     break;
 413              		.loc 1 43 21 is_stmt 1
 414 0184 6FF0DFF8 		j	.L9
 415              	.LVL29:
 416              	.L4:
  55:src/riscv.cpp ****         case 0x8000000000000001UL:
 417              		.loc 1 55 9
  57:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 418              		.loc 1 57 13
 419              	.LBB68:
 420              	.LBB69:
 179:src/../h/riscv.hpp **** }
 421              		.loc 2 179 5
 179:src/../h/riscv.hpp **** }
 422              		.loc 2 179 64 is_stmt 0
 423 0188 93072000 		li	a5,2
 424              	.LVL30:
 425              	#APP
 426              	# 179 "src/../h/riscv.hpp" 1
 180:src/../h/riscv.hpp **** 
 427              		csrc sip, a5
 428              	# 0 "" 2
 429              		.loc 2 180 1
 430              	#NO_APP
 431 0190 6FF0DFF8 		j	.L3
 432              	.LBE69:
 433              	.LBE68:
 434              	.LBE72:
 435              	.LBE74:
 436              		.cfi_endproc
GAS LISTING /tmp/cctbwNzi.s 			page 16


 437              	.LFE49:
 439              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 440              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 441              		.align	3
 444              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 445 0000 00000000 		.zero	8
 445      00000000 
 446              		.text
 447              	.Letext0:
 448              		.file 4 "src/../h/../h/../lib/hw.h"
 449              		.file 5 "src/../h/PCB.hpp"
 450              		.file 6 "src/../h/../h/../lib/console.h"
GAS LISTING /tmp/cctbwNzi.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cctbwNzi.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cctbwNzi.s:13     .text:0000000000000000 .L0 
     /tmp/cctbwNzi.s:14     .text:0000000000000000 .L0 
     /tmp/cctbwNzi.s:15     .text:0000000000000004 .L0 
     /tmp/cctbwNzi.s:17     .text:0000000000000008 .L0 
     /tmp/cctbwNzi.s:19     .text:000000000000000c .L0 
     /tmp/cctbwNzi.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:7      .text:000000000000000c .L0 
     /tmp/cctbwNzi.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:8      .text:0000000000000010 .L0 
     /tmp/cctbwNzi.s:33     .text:0000000000000014 .L0 
     /tmp/cctbwNzi.s:34     .text:0000000000000018 .L0 
     /tmp/cctbwNzi.s:35     .text:0000000000000018 .L0 
     /tmp/cctbwNzi.s:37     .text:000000000000001c .L0 
     /tmp/cctbwNzi.s:39     .text:0000000000000020 .L0 
     /tmp/cctbwNzi.s:45     .text:0000000000000020 _ZN5Riscv11trapHandlerEv
     /tmp/cctbwNzi.s:48     .text:0000000000000020 .L0 
     /tmp/cctbwNzi.s:49     .text:0000000000000020 .L0 
     /tmp/cctbwNzi.s:50     .text:0000000000000024 .L0 
     /tmp/cctbwNzi.s:55     .text:0000000000000034 .L0 
     /tmp/cctbwNzi.s:56     .text:0000000000000034 .L0 
     /tmp/cctbwNzi.s:57     .text:0000000000000034 .L0 
     /tmp/cctbwNzi.s:58     .text:0000000000000034 .L0 
     /tmp/cctbwNzi.s:60     .text:0000000000000038 .L0 
     /tmp/cctbwNzi.s:65     .text:0000000000000038 .L0 
     /tmp/cctbwNzi.s:66     .text:0000000000000038 .L0 
     /tmp/cctbwNzi.s:67     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:127    .text:0000000000000038 .L0 
     /tmp/cctbwNzi.s:75     .text:0000000000000040 .L0 
     /tmp/cctbwNzi.s:76     .text:0000000000000040 .L0 
     /tmp/cctbwNzi.s:83     .text:0000000000000044 .L0 
     /tmp/cctbwNzi.s:84     .text:0000000000000044 .L0 
     /tmp/cctbwNzi.s:85     .text:0000000000000044 .L0 
  src/../h/riscv.hpp:228    .text:0000000000000044 .L0 
     /tmp/cctbwNzi.s:93     .text:000000000000004c .L0 
     /tmp/cctbwNzi.s:94     .text:000000000000004c .L0 
     /tmp/cctbwNzi.s:101    .text:0000000000000050 .L0 
     /tmp/cctbwNzi.s:102    .text:0000000000000050 .L0 
     /tmp/cctbwNzi.s:103    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:238    .text:0000000000000050 .L0 
     /tmp/cctbwNzi.s:111    .text:0000000000000058 .L0 
     /tmp/cctbwNzi.s:112    .text:0000000000000058 .L0 
     /tmp/cctbwNzi.s:119    .text:000000000000005c .L0 
     /tmp/cctbwNzi.s:120    .text:000000000000005c .L0 
     /tmp/cctbwNzi.s:121    .text:000000000000005c .L0 
  src/../h/riscv.hpp:248    .text:000000000000005c .L0 
     /tmp/cctbwNzi.s:129    .text:0000000000000064 .L0 
     /tmp/cctbwNzi.s:130    .text:0000000000000064 .L0 
     /tmp/cctbwNzi.s:135    .text:0000000000000068 .L0 
     /tmp/cctbwNzi.s:136    .text:0000000000000068 .L0 
     /tmp/cctbwNzi.s:138    .text:0000000000000068 .L0 
     /tmp/cctbwNzi.s:152    .text:0000000000000094 .L0 
     /tmp/cctbwNzi.s:153    .text:0000000000000094 .L0 
     /tmp/cctbwNzi.s:156    .text:0000000000000094 .L0 
     /tmp/cctbwNzi.s:157    .text:0000000000000094 .L0 
GAS LISTING /tmp/cctbwNzi.s 			page 18


     /tmp/cctbwNzi.s:158    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:139    .text:0000000000000094 .L0 
     /tmp/cctbwNzi.s:167    .text:000000000000009c .L0 
     /tmp/cctbwNzi.s:168    .text:000000000000009c .L0 
     /tmp/cctbwNzi.s:175    .text:00000000000000a0 .L0 
     /tmp/cctbwNzi.s:176    .text:00000000000000a0 .L0 
     /tmp/cctbwNzi.s:177    .text:00000000000000a0 .L0 
  src/../h/riscv.hpp:207    .text:00000000000000a0 .L0 
     /tmp/cctbwNzi.s:185    .text:00000000000000a8 .L0 
     /tmp/cctbwNzi.s:186    .text:00000000000000a8 .L0 
     /tmp/cctbwNzi.s:191    .text:00000000000000ac .L0 
     /tmp/cctbwNzi.s:192    .text:00000000000000ac .L0 
     /tmp/cctbwNzi.s:230    .text:00000000000000d0 .L0 
     /tmp/cctbwNzi.s:236    .text:00000000000000e0 .L0 
     /tmp/cctbwNzi.s:237    .text:00000000000000e0 .L0 
     /tmp/cctbwNzi.s:238    .text:00000000000000e0 .L0 
     /tmp/cctbwNzi.s:243    .text:00000000000000e8 .L0 
     /tmp/cctbwNzi.s:244    .text:00000000000000e8 .L0 
     /tmp/cctbwNzi.s:250    .text:00000000000000ec .L0 
     /tmp/cctbwNzi.s:254    .text:00000000000000ec .L0 
     /tmp/cctbwNzi.s:255    .text:00000000000000ec .L0 
     /tmp/cctbwNzi.s:444    .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/cctbwNzi.s:256    .text:00000000000000ec .L0 
     /tmp/cctbwNzi.s:266    .text:0000000000000104 .L0 
     /tmp/cctbwNzi.s:267    .text:0000000000000104 .L0 
     /tmp/cctbwNzi.s:272    .text:000000000000010c .L0 
     /tmp/cctbwNzi.s:273    .text:000000000000010c .L0 
  src/../h/riscv.hpp:267    .text:000000000000010c .L0 
     /tmp/cctbwNzi.s:286    .text:0000000000000110 .L0 
     /tmp/cctbwNzi.s:287    .text:0000000000000110 .L0 
  src/../h/riscv.hpp:213    .text:0000000000000110 .L0 
     /tmp/cctbwNzi.s:297    .text:0000000000000114 .L0 
     /tmp/cctbwNzi.s:298    .text:0000000000000114 .L0 
     /tmp/cctbwNzi.s:303    .text:0000000000000118 .L0 
  src/../h/riscv.hpp:145    .text:0000000000000118 .L0 
     /tmp/cctbwNzi.s:316    .text:000000000000011c .L0 
     /tmp/cctbwNzi.s:317    .text:0000000000000120 .L0 
     /tmp/cctbwNzi.s:318    .text:0000000000000120 .L0 
     /tmp/cctbwNzi.s:320    .text:0000000000000124 .L0 
     /tmp/cctbwNzi.s:321    .text:0000000000000124 .L0 
     /tmp/cctbwNzi.s:323    .text:0000000000000128 .L0 
     /tmp/cctbwNzi.s:325    .text:000000000000012c .L0 
     /tmp/cctbwNzi.s:327    .text:0000000000000130 .L0 
     /tmp/cctbwNzi.s:331    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:335    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:338    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:339    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:340    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:350    .text:000000000000014c .L0 
     /tmp/cctbwNzi.s:351    .text:000000000000014c .L0 
     /tmp/cctbwNzi.s:356    .text:0000000000000154 .L0 
  src/../h/riscv.hpp:267    .text:0000000000000154 .L0 
     /tmp/cctbwNzi.s:363    .text:0000000000000158 .L0 
     /tmp/cctbwNzi.s:369    .text:000000000000015c .L0 
     /tmp/cctbwNzi.s:370    .text:000000000000015c .L0 
     /tmp/cctbwNzi.s:371    .text:000000000000015c .L0 
     /tmp/cctbwNzi.s:376    .text:0000000000000164 .L0 
GAS LISTING /tmp/cctbwNzi.s 			page 19


  src/../h/riscv.hpp:267    .text:0000000000000164 .L0 
     /tmp/cctbwNzi.s:383    .text:0000000000000168 .L0 
     /tmp/cctbwNzi.s:389    .text:000000000000016c .L0 
     /tmp/cctbwNzi.s:390    .text:000000000000016c .L0 
     /tmp/cctbwNzi.s:391    .text:000000000000016c .L0 
     /tmp/cctbwNzi.s:396    .text:0000000000000174 .L0 
  src/../h/riscv.hpp:267    .text:0000000000000174 .L0 
     /tmp/cctbwNzi.s:403    .text:0000000000000178 .L0 
     /tmp/cctbwNzi.s:409    .text:000000000000017c .L0 
     /tmp/cctbwNzi.s:410    .text:000000000000017c .L0 
     /tmp/cctbwNzi.s:411    .text:000000000000017c .L0 
     /tmp/cctbwNzi.s:414    .text:0000000000000184 .L0 
     /tmp/cctbwNzi.s:418    .text:0000000000000188 .L0 
     /tmp/cctbwNzi.s:421    .text:0000000000000188 .L0 
     /tmp/cctbwNzi.s:422    .text:0000000000000188 .L0 
     /tmp/cctbwNzi.s:423    .text:0000000000000188 .L0 
     /tmp/cctbwNzi.s:431    .text:0000000000000190 .L0 
     /tmp/cctbwNzi.s:436    .text:0000000000000194 .L0 
     /tmp/cctbwNzi.s:451    .text:0000000000000194 .L0 
     /tmp/cctbwNzi.s:204    .rodata:0000000000000000 .L11
     /tmp/cctbwNzi.s:196    .text:00000000000000b8 .L0 
     /tmp/cctbwNzi.s:256    .text:00000000000000ec .L0 
     /tmp/cctbwNzi.s:260    .text:00000000000000fc .L0 
     /tmp/cctbwNzi.s:340    .text:0000000000000134 .L0 
     /tmp/cctbwNzi.s:344    .text:0000000000000144 .L0 
     /tmp/cctbwNzi.s:416    .text:0000000000000188 .L4
     /tmp/cctbwNzi.s:227    .text:00000000000000d0 .L5
     /tmp/cctbwNzi.s:310    .text:000000000000011c .L3
     /tmp/cctbwNzi.s:280    .text:0000000000000110 .L9
     /tmp/cctbwNzi.s:262    .text:0000000000000104 .L16
     /tmp/cctbwNzi.s:346    .text:000000000000014c .L17
     /tmp/cctbwNzi.s:246    .text:00000000000000ec .L15
     /tmp/cctbwNzi.s:330    .text:0000000000000134 .L14
     /tmp/cctbwNzi.s:365    .text:000000000000015c .L13
     /tmp/cctbwNzi.s:385    .text:000000000000016c .L12
     /tmp/cctbwNzi.s:405    .text:000000000000017c .L10
     /tmp/cctbwNzi.s:1719   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctbwNzi.s:3197   .debug_str:0000000000000701 .LASF133
     /tmp/cctbwNzi.s:3139   .debug_str:0000000000000594 .LASF134
     /tmp/cctbwNzi.s:3003   .debug_str:00000000000001a6 .LASF135
     /tmp/cctbwNzi.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctbwNzi.s:447    .text:0000000000000194 .Letext0
     /tmp/cctbwNzi.s:2943   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cctbwNzi.s:3113   .debug_str:0000000000000519 .LASF0
     /tmp/cctbwNzi.s:3135   .debug_str:000000000000056e .LASF1
     /tmp/cctbwNzi.s:3095   .debug_str:000000000000049c .LASF2
     /tmp/cctbwNzi.s:3059   .debug_str:00000000000003a5 .LASF4
     /tmp/cctbwNzi.s:3173   .debug_str:0000000000000664 .LASF3
     /tmp/cctbwNzi.s:2973   .debug_str:00000000000000e3 .LASF5
     /tmp/cctbwNzi.s:3137   .debug_str:0000000000000581 .LASF6
     /tmp/cctbwNzi.s:3111   .debug_str:0000000000000506 .LASF7
     /tmp/cctbwNzi.s:3209   .debug_str:000000000000081c .LASF8
     /tmp/cctbwNzi.s:3045   .debug_str:0000000000000342 .LASF9
     /tmp/cctbwNzi.s:3153   .debug_str:00000000000005dc .LASF10
     /tmp/cctbwNzi.s:3201   .debug_str:00000000000007d1 .LASF11
     /tmp/cctbwNzi.s:2979   .debug_str:00000000000000f4 .LASF12
     /tmp/cctbwNzi.s:2953   .debug_str:000000000000004a .LASF13
GAS LISTING /tmp/cctbwNzi.s 			page 20


     /tmp/cctbwNzi.s:2995   .debug_str:000000000000017b .LASF14
     /tmp/cctbwNzi.s:3165   .debug_str:000000000000061b .LASF15
     /tmp/cctbwNzi.s:3005   .debug_str:00000000000001c9 .LASF16
     /tmp/cctbwNzi.s:3001   .debug_str:00000000000001a0 .LASF136
     /tmp/cctbwNzi.s:3189   .debug_str:00000000000006c9 .LASF17
     /tmp/cctbwNzi.s:3233   .debug_str:00000000000008ce .LASF18
     /tmp/cctbwNzi.s:3091   .debug_str:0000000000000483 .LASF27
     /tmp/cctbwNzi.s:3017   .debug_str:0000000000000265 .LASF69
     /tmp/cctbwNzi.s:3211   .debug_str:000000000000082c .LASF19
     /tmp/cctbwNzi.s:3187   .debug_str:00000000000006ba .LASF20
     /tmp/cctbwNzi.s:3199   .debug_str:00000000000007c5 .LASF45
     /tmp/cctbwNzi.s:2971   .debug_str:00000000000000bf .LASF47
     /tmp/cctbwNzi.s:3145   .debug_str:00000000000005b2 .LASF41
     /tmp/cctbwNzi.s:3195   .debug_str:00000000000006e5 .LASF43
     /tmp/cctbwNzi.s:3129   .debug_str:0000000000000554 .LASF21
     /tmp/cctbwNzi.s:3011   .debug_str:0000000000000206 .LASF23
     /tmp/cctbwNzi.s:3081   .debug_str:0000000000000445 .LASF22
     /tmp/cctbwNzi.s:3071   .debug_str:00000000000003ee .LASF24
     /tmp/cctbwNzi.s:3207   .debug_str:0000000000000800 .LASF35
     /tmp/cctbwNzi.s:3105   .debug_str:00000000000004e1 .LASF25
     /tmp/cctbwNzi.s:3075   .debug_str:000000000000041d .LASF26
     /tmp/cctbwNzi.s:2959   .debug_str:0000000000000070 .LASF137
     /tmp/cctbwNzi.s:3049   .debug_str:0000000000000366 .LASF56
     /tmp/cctbwNzi.s:3151   .debug_str:00000000000005d6 .LASF28
     /tmp/cctbwNzi.s:3149   .debug_str:00000000000005ce .LASF29
     /tmp/cctbwNzi.s:3169   .debug_str:0000000000000642 .LASF30
     /tmp/cctbwNzi.s:3181   .debug_str:00000000000006a0 .LASF31
     /tmp/cctbwNzi.s:3161   .debug_str:000000000000060b .LASF32
     /tmp/cctbwNzi.s:2987   .debug_str:0000000000000121 .LASF33
     /tmp/cctbwNzi.s:3141   .debug_str:00000000000005a2 .LASF34
     /tmp/cctbwNzi.s:3147   .debug_str:00000000000005b7 .LASF36
     /tmp/cctbwNzi.s:3103   .debug_str:00000000000004d8 .LASF37
     /tmp/cctbwNzi.s:2961   .debug_str:0000000000000078 .LASF38
     /tmp/cctbwNzi.s:2945   .debug_str:0000000000000000 .LASF39
     /tmp/cctbwNzi.s:3061   .debug_str:00000000000003ac .LASF40
     /tmp/cctbwNzi.s:3159   .debug_str:0000000000000606 .LASF138
     /tmp/cctbwNzi.s:3117   .debug_str:000000000000052d .LASF42
     /tmp/cctbwNzi.s:3053   .debug_str:0000000000000374 .LASF44
     /tmp/cctbwNzi.s:3085   .debug_str:0000000000000468 .LASF46
     /tmp/cctbwNzi.s:2955   .debug_str:000000000000005a .LASF48
     /tmp/cctbwNzi.s:3025   .debug_str:00000000000002b7 .LASF139
     /tmp/cctbwNzi.s:3215   .debug_str:000000000000084f .LASF140
     /tmp/cctbwNzi.s:2991   .debug_str:0000000000000149 .LASF141
     /tmp/cctbwNzi.s:3185   .debug_str:00000000000006b2 .LASF123
     /tmp/cctbwNzi.s:2947   .debug_str:000000000000000d .LASF125
     /tmp/cctbwNzi.s:3039   .debug_str:0000000000000315 .LASF142
     /tmp/cctbwNzi.s:3065   .debug_str:00000000000003d8 .LASF49
     /tmp/cctbwNzi.s:3119   .debug_str:0000000000000536 .LASF50
     /tmp/cctbwNzi.s:3121   .debug_str:000000000000053c .LASF51
     /tmp/cctbwNzi.s:3069   .debug_str:00000000000003e6 .LASF52
     /tmp/cctbwNzi.s:2965   .debug_str:000000000000009a .LASF53
     /tmp/cctbwNzi.s:3031   .debug_str:00000000000002e8 .LASF54
     /tmp/cctbwNzi.s:3131   .debug_str:000000000000055d .LASF55
     /tmp/cctbwNzi.s:3073   .debug_str:0000000000000412 .LASF57
     /tmp/cctbwNzi.s:3183   .debug_str:00000000000006a9 .LASF58
     /tmp/cctbwNzi.s:3067   .debug_str:00000000000003dd .LASF59
     /tmp/cctbwNzi.s:3163   .debug_str:0000000000000610 .LASF60
GAS LISTING /tmp/cctbwNzi.s 			page 21


     /tmp/cctbwNzi.s:3227   .debug_str:000000000000089a .LASF61
     /tmp/cctbwNzi.s:2967   .debug_str:00000000000000a0 .LASF62
     /tmp/cctbwNzi.s:3023   .debug_str:000000000000029c .LASF63
     /tmp/cctbwNzi.s:3033   .debug_str:00000000000002ed .LASF64
     /tmp/cctbwNzi.s:2949   .debug_str:000000000000001f .LASF65
     /tmp/cctbwNzi.s:3093   .debug_str:0000000000000493 .LASF66
     /tmp/cctbwNzi.s:3027   .debug_str:00000000000002bf .LASF67
     /tmp/cctbwNzi.s:3021   .debug_str:0000000000000293 .LASF68
     /tmp/cctbwNzi.s:3019   .debug_str:000000000000027e .LASF70
     /tmp/cctbwNzi.s:3175   .debug_str:0000000000000676 .LASF71
     /tmp/cctbwNzi.s:3155   .debug_str:00000000000005eb .LASF72
     /tmp/cctbwNzi.s:3203   .debug_str:00000000000007e0 .LASF73
     /tmp/cctbwNzi.s:3043   .debug_str:000000000000032f .LASF74
     /tmp/cctbwNzi.s:3037   .debug_str:000000000000030d .LASF75
     /tmp/cctbwNzi.s:3007   .debug_str:00000000000001df .LASF76
     /tmp/cctbwNzi.s:3221   .debug_str:000000000000087a .LASF77
     /tmp/cctbwNzi.s:3177   .debug_str:000000000000067d .LASF78
     /tmp/cctbwNzi.s:3057   .debug_str:000000000000039d .LASF79
     /tmp/cctbwNzi.s:3217   .debug_str:000000000000085d .LASF80
     /tmp/cctbwNzi.s:3051   .debug_str:000000000000036c .LASF81
     /tmp/cctbwNzi.s:3029   .debug_str:00000000000002d4 .LASF82
     /tmp/cctbwNzi.s:3115   .debug_str:0000000000000526 .LASF83
     /tmp/cctbwNzi.s:3223   .debug_str:0000000000000882 .LASF84
     /tmp/cctbwNzi.s:3077   .debug_str:0000000000000439 .LASF85
     /tmp/cctbwNzi.s:3035   .debug_str:00000000000002fa .LASF86
     /tmp/cctbwNzi.s:3041   .debug_str:0000000000000329 .LASF87
     /tmp/cctbwNzi.s:3193   .debug_str:00000000000006d3 .LASF88
     /tmp/cctbwNzi.s:2963   .debug_str:0000000000000094 .LASF89
     /tmp/cctbwNzi.s:3237   .debug_str:00000000000008d8 .LASF90
     /tmp/cctbwNzi.s:3231   .debug_str:00000000000008c3 .LASF91
     /tmp/cctbwNzi.s:3171   .debug_str:000000000000064c .LASF92
     /tmp/cctbwNzi.s:3133   .debug_str:0000000000000563 .LASF93
     /tmp/cctbwNzi.s:3083   .debug_str:0000000000000450 .LASF94
     /tmp/cctbwNzi.s:2993   .debug_str:0000000000000171 .LASF95
     /tmp/cctbwNzi.s:3055   .debug_str:0000000000000387 .LASF96
     /tmp/cctbwNzi.s:3099   .debug_str:00000000000004bd .LASF97
     /tmp/cctbwNzi.s:3047   .debug_str:0000000000000350 .LASF98
     /tmp/cctbwNzi.s:3109   .debug_str:00000000000004ff .LASF99
     /tmp/cctbwNzi.s:3009   .debug_str:00000000000001f3 .LASF100
     /tmp/cctbwNzi.s:2957   .debug_str:0000000000000069 .LASF101
     /tmp/cctbwNzi.s:3097   .debug_str:00000000000004aa .LASF102
     /tmp/cctbwNzi.s:3179   .debug_str:0000000000000691 .LASF103
     /tmp/cctbwNzi.s:2989   .debug_str:000000000000012d .LASF104
     /tmp/cctbwNzi.s:3191   .debug_str:00000000000006ce .LASF105
     /tmp/cctbwNzi.s:3087   .debug_str:000000000000046d .LASF106
     /tmp/cctbwNzi.s:2975   .debug_str:00000000000000ea .LASF107
     /tmp/cctbwNzi.s:3101   .debug_str:00000000000004c7 .LASF108
     /tmp/cctbwNzi.s:3079   .debug_str:0000000000000440 .LASF109
     /tmp/cctbwNzi.s:3229   .debug_str:00000000000008b2 .LASF110
     /tmp/cctbwNzi.s:2977   .debug_str:00000000000000ef .LASF111
     /tmp/cctbwNzi.s:2951   .debug_str:0000000000000039 .LASF112
     /tmp/cctbwNzi.s:3143   .debug_str:00000000000005ad .LASF113
     /tmp/cctbwNzi.s:2969   .debug_str:00000000000000ae .LASF114
     /tmp/cctbwNzi.s:3127   .debug_str:000000000000054f .LASF115
     /tmp/cctbwNzi.s:2985   .debug_str:0000000000000110 .LASF116
     /tmp/cctbwNzi.s:3089   .debug_str:000000000000047e .LASF117
     /tmp/cctbwNzi.s:3167   .debug_str:0000000000000631 .LASF118
GAS LISTING /tmp/cctbwNzi.s 			page 22


     /tmp/cctbwNzi.s:2981   .debug_str:0000000000000104 .LASF119
     /tmp/cctbwNzi.s:2997   .debug_str:0000000000000187 .LASF120
     /tmp/cctbwNzi.s:2999   .debug_str:0000000000000198 .LASF121
     /tmp/cctbwNzi.s:3107   .debug_str:00000000000004eb .LASF122
     /tmp/cctbwNzi.s:3063   .debug_str:00000000000003cc .LASF124
     /tmp/cctbwNzi.s:3205   .debug_str:00000000000007e7 .LASF126
     /tmp/cctbwNzi.s:3219   .debug_str:0000000000000871 .LASF127
     /tmp/cctbwNzi.s:46     .text:0000000000000020 .LFB49
     /tmp/cctbwNzi.s:437    .text:0000000000000194 .LFE49
     /tmp/cctbwNzi.s:2983   .debug_str:0000000000000109 .LASF128
     /tmp/cctbwNzi.s:2742   .debug_loc:0000000000000000 .LLST0
     /tmp/cctbwNzi.s:2763   .debug_loc:000000000000005e .LLST1
     /tmp/cctbwNzi.s:2778   .debug_loc:00000000000000a7 .LLST2
     /tmp/cctbwNzi.s:2809   .debug_loc:000000000000013c .LLST3
     /tmp/cctbwNzi.s:3125   .debug_str:000000000000054a .LASF129
     /tmp/cctbwNzi.s:2840   .debug_loc:00000000000001d1 .LLST4
     /tmp/cctbwNzi.s:3157   .debug_str:00000000000005fe .LASF130
     /tmp/cctbwNzi.s:2861   .debug_loc:000000000000022f .LLST5
     /tmp/cctbwNzi.s:2931   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cctbwNzi.s:2876   .debug_loc:0000000000000278 .LLST6
     /tmp/cctbwNzi.s:154    .text:0000000000000094 .LBB48
     /tmp/cctbwNzi.s:171    .text:00000000000000a0 .LBE48
     /tmp/cctbwNzi.s:173    .text:00000000000000a0 .LBB50
     /tmp/cctbwNzi.s:189    .text:00000000000000ac .LBE50
     /tmp/cctbwNzi.s:251    .text:00000000000000ec .LBB52
     /tmp/cctbwNzi.s:265    .text:0000000000000104 .LBE52
     /tmp/cctbwNzi.s:270    .text:000000000000010c .LBB54
     /tmp/cctbwNzi.s:282    .text:0000000000000110 .LBE54
     /tmp/cctbwNzi.s:284    .text:0000000000000110 .LBB56
     /tmp/cctbwNzi.s:295    .text:0000000000000114 .LBE56
     /tmp/cctbwNzi.s:2883   .debug_loc:000000000000029b .LLST8
     /tmp/cctbwNzi.s:300    .text:0000000000000118 .LBB58
     /tmp/cctbwNzi.s:312    .text:000000000000011c .LBE58
     /tmp/cctbwNzi.s:2890   .debug_loc:00000000000002be .LLST9
     /tmp/cctbwNzi.s:336    .text:0000000000000134 .LBB60
     /tmp/cctbwNzi.s:349    .text:000000000000014c .LBE60
     /tmp/cctbwNzi.s:353    .text:0000000000000154 .LBB62
     /tmp/cctbwNzi.s:367    .text:000000000000015c .LBE62
     /tmp/cctbwNzi.s:2897   .debug_loc:00000000000002e1 .LLST10
     /tmp/cctbwNzi.s:373    .text:0000000000000164 .LBB64
     /tmp/cctbwNzi.s:387    .text:000000000000016c .LBE64
     /tmp/cctbwNzi.s:2904   .debug_loc:0000000000000304 .LLST11
     /tmp/cctbwNzi.s:393    .text:0000000000000174 .LBB66
     /tmp/cctbwNzi.s:407    .text:000000000000017c .LBE66
     /tmp/cctbwNzi.s:2911   .debug_loc:0000000000000327 .LLST12
     /tmp/cctbwNzi.s:419    .text:0000000000000188 .LBB68
     /tmp/cctbwNzi.s:433    .text:0000000000000194 .LBE68
     /tmp/cctbwNzi.s:239    .text:00000000000000e8 .LVL10
     /tmp/cctbwNzi.s:268    .text:000000000000010c .LVL14
     /tmp/cctbwNzi.s:352    .text:0000000000000154 .LVL22
     /tmp/cctbwNzi.s:372    .text:0000000000000164 .LVL24
     /tmp/cctbwNzi.s:392    .text:0000000000000174 .LVL26
     /tmp/cctbwNzi.s:412    .text:0000000000000184 .LVL28
     /tmp/cctbwNzi.s:62     .text:0000000000000038 .LBB38
     /tmp/cctbwNzi.s:79     .text:0000000000000044 .LBE38
     /tmp/cctbwNzi.s:81     .text:0000000000000044 .LBB40
     /tmp/cctbwNzi.s:97     .text:0000000000000050 .LBE40
GAS LISTING /tmp/cctbwNzi.s 			page 23


     /tmp/cctbwNzi.s:99     .text:0000000000000050 .LBB42
     /tmp/cctbwNzi.s:115    .text:000000000000005c .LBE42
     /tmp/cctbwNzi.s:117    .text:000000000000005c .LBB44
     /tmp/cctbwNzi.s:133    .text:0000000000000068 .LBE44
     /tmp/cctbwNzi.s:10     .text:0000000000000000 .LFB48
     /tmp/cctbwNzi.s:40     .text:0000000000000020 .LFE48
     /tmp/cctbwNzi.s:3235   .debug_str:00000000000008d3 .LASF131
     /tmp/cctbwNzi.s:3123   .debug_str:0000000000000541 .LASF132
     /tmp/cctbwNzi.s:3013   .debug_str:0000000000000226 .LASF143
     /tmp/cctbwNzi.s:3225   .debug_str:0000000000000895 .LASF144
     /tmp/cctbwNzi.s:3213   .debug_str:0000000000000836 .LASF145
     /tmp/cctbwNzi.s:3015   .debug_str:0000000000000255 .LASF146
     /tmp/cctbwNzi.s:77     .text:0000000000000044 .LVL0
     /tmp/cctbwNzi.s:147    .text:000000000000008c .LVL4
     /tmp/cctbwNzi.s:163    .text:0000000000000098 .LVL5
     /tmp/cctbwNzi.s:226    .text:00000000000000d0 .LVL9
     /tmp/cctbwNzi.s:415    .text:0000000000000188 .LVL29
     /tmp/cctbwNzi.s:424    .text:000000000000018c .LVL30
     /tmp/cctbwNzi.s:95     .text:0000000000000050 .LVL1
     /tmp/cctbwNzi.s:195    .text:00000000000000b8 .LVL8
     /tmp/cctbwNzi.s:113    .text:000000000000005c .LVL2
     /tmp/cctbwNzi.s:245    .text:00000000000000ec .LVL11
     /tmp/cctbwNzi.s:329    .text:0000000000000134 .LVL19
     /tmp/cctbwNzi.s:364    .text:000000000000015c .LVL23
     /tmp/cctbwNzi.s:384    .text:000000000000016c .LVL25
     /tmp/cctbwNzi.s:404    .text:000000000000017c .LVL27
     /tmp/cctbwNzi.s:131    .text:0000000000000068 .LVL3
     /tmp/cctbwNzi.s:169    .text:00000000000000a0 .LVL6
     /tmp/cctbwNzi.s:299    .text:0000000000000118 .LVL17
     /tmp/cctbwNzi.s:308    .text:000000000000011c .LVL18
     /tmp/cctbwNzi.s:187    .text:00000000000000ac .LVL7
     /tmp/cctbwNzi.s:278    .text:0000000000000110 .LVL15
     /tmp/cctbwNzi.s:292    .text:0000000000000114 .LVL16
     /tmp/cctbwNzi.s:452    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cctbwNzi.s:150    .text:0000000000000094 .LBB47
     /tmp/cctbwNzi.s:228    .text:00000000000000d0 .LBE47
     /tmp/cctbwNzi.s:234    .text:00000000000000e0 .LBB70
     /tmp/cctbwNzi.s:241    .text:00000000000000e8 .LBE70
     /tmp/cctbwNzi.s:248    .text:00000000000000ec .LBB71
     /tmp/cctbwNzi.s:313    .text:000000000000011c .LBE71
     /tmp/cctbwNzi.s:333    .text:0000000000000134 .LBB72
     /tmp/cctbwNzi.s:434    .text:0000000000000194 .LBE72

UNDEFINED SYMBOLS
console_handler
_ZN15MemoryAllocator8allocateEm
_ZN15MemoryAllocator10deallocateEPv
_ZN3PCB12createThreadEPFvPvES0_
_ZN3PCB4exitEv
_ZN3PCB8dispatchEv
