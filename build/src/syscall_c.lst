GAS LISTING /tmp/ccdWnPUJ.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB48:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   2:src/syscall_c.cpp **** 
   3:src/syscall_c.cpp **** 
   4:src/syscall_c.cpp **** void *mem_alloc(size_t size) {
  12              		.loc 1 4 30
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C8100 		sd	s0,24(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040102 		addi	s0,sp,32
  20              		.cfi_def_cfa 8, 0
   5:src/syscall_c.cpp ****     size_t sizeInBlocks = ((size + 16 + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_SIZE);
  21              		.loc 1 5 5
  22              		.loc 1 5 56 is_stmt 0
  23 000c 1305F504 		addi	a0,a0,79
  24              	.LVL1:
  25              		.loc 1 5 12
  26 0010 13556500 		srli	a0,a0,6
  27              	.LVL2:
   6:src/syscall_c.cpp ****     Riscv::w_a0(0x01);
  28              		.loc 1 6 5 is_stmt 1
  29              	.LBB30:
  30              	.LBB31:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../h/MemoryAllocator.hpp"
   6:src/../h/riscv.hpp **** #include "PCB.hpp"
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** #define readUsrReg(reg, dst) __asm__ volatile("mv %0,"#reg : "=r" (dst));
  10:src/../h/riscv.hpp **** #define writeUsrReg(reg, src) __asm__ volatile("mv "#reg", %0" : : "r" (src));
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  20:src/../h/riscv.hpp ****     static void popSppSpie();
  21:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccdWnPUJ.s 			page 2


  22:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  23:src/../h/riscv.hpp ****     static void pushRegisters();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  26:src/../h/riscv.hpp ****     static void popRegisters();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // read register scause
  29:src/../h/riscv.hpp ****     static uint64 r_scause();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // write register scause
  32:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // read register sepc
  35:src/../h/riscv.hpp ****     static uint64 r_sepc();
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // write register sepc
  38:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // read register stvec
  41:src/../h/riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // write register stvec
  44:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // read register stval
  47:src/../h/riscv.hpp ****     static uint64 r_stval();
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // write register stval
  50:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSip
  53:src/../h/riscv.hpp ****     {
  54:src/../h/riscv.hpp **** //        SIP_SSIE = (1 << 1),
  55:src/../h/riscv.hpp **** //        SIP_STIE = (1 << 5),
  56:src/../h/riscv.hpp **** //        SIP_SEIE = (1 << 9),
  57:src/../h/riscv.hpp ****         SIP_SSIP = (1<<1),
  58:src/../h/riscv.hpp ****         SIP_SEIP = (1<<9)
  59:src/../h/riscv.hpp ****     };
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask set register sip
  62:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask clear register sip
  65:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // read register sip
  68:src/../h/riscv.hpp ****     static uint64 r_sip();
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // write register sip
  71:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     enum BitMaskSstatus
  74:src/../h/riscv.hpp ****     {
  75:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccdWnPUJ.s 			page 3


  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask set register sstatus
  81:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // mask clear register sstatus
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // read register sstatus
  87:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     // write register sstatus
  90:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // mask set register sie
  93:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     // mask clear register sie
  96:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     static void supervisorTrap();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static long r_a0();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static void w_a0(long a0);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static uint64 r_a1();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static uint64 r_a2();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void w_a2(uint64 a1);
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static uint64 r_a3();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void w_a3(uint64 a1);
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void push_a0(long a0);
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** private:
 119:src/../h/riscv.hpp ****     static void trapHandler();
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** };
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile scause;
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 128:src/../h/riscv.hpp ****     return scause;
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccdWnPUJ.s 			page 4


 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     uint64 volatile sepc;
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 140:src/../h/riscv.hpp ****     return sepc;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     uint64 volatile stvec;
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 152:src/../h/riscv.hpp ****     return stvec;
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 158:src/../h/riscv.hpp **** }
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     uint64 volatile stval;
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 164:src/../h/riscv.hpp ****     return stval;
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 178:src/../h/riscv.hpp **** {
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 180:src/../h/riscv.hpp **** }
 181:src/../h/riscv.hpp **** 
 182:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 183:src/../h/riscv.hpp **** {
 184:src/../h/riscv.hpp ****     uint64 volatile sip;
 185:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 186:src/../h/riscv.hpp ****     return sip;
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 192:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccdWnPUJ.s 			page 5


 193:src/../h/riscv.hpp **** 
 194:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 195:src/../h/riscv.hpp **** {
 196:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 197:src/../h/riscv.hpp **** }
 198:src/../h/riscv.hpp **** 
 199:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 200:src/../h/riscv.hpp **** {
 201:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 202:src/../h/riscv.hpp **** }
 203:src/../h/riscv.hpp **** 
 204:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 205:src/../h/riscv.hpp **** {
 206:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 207:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 208:src/../h/riscv.hpp ****     return sstatus;
 209:src/../h/riscv.hpp **** }
 210:src/../h/riscv.hpp **** 
 211:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 212:src/../h/riscv.hpp **** {
 213:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 214:src/../h/riscv.hpp **** }
 215:src/../h/riscv.hpp **** 
 216:src/../h/riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 217:src/../h/riscv.hpp **** {
 218:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sie, %[mask]" : : [mask] "r"(mask));
 219:src/../h/riscv.hpp **** }
 220:src/../h/riscv.hpp **** 
 221:src/../h/riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 222:src/../h/riscv.hpp **** {
 223:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sie, %[mask]" : : [mask] "r"(mask));
 224:src/../h/riscv.hpp **** }
 225:src/../h/riscv.hpp **** 
 226:src/../h/riscv.hpp **** inline long Riscv::r_a0() {
 227:src/../h/riscv.hpp ****     long volatile a0;
 228:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
 229:src/../h/riscv.hpp ****     return a0;
 230:src/../h/riscv.hpp **** }
 231:src/../h/riscv.hpp **** 
 232:src/../h/riscv.hpp **** inline void Riscv::w_a0(long a0) {
 233:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(a0));
  32              		.loc 2 233 5
  33              		.loc 2 233 47 is_stmt 0
  34 0014 93071000 		li	a5,1
  35              	#APP
  36              	# 233 "src/../h/riscv.hpp" 1
 234              	}
  37              		mv a0, a5
  38              	# 0 "" 2
  39              	.LVL3:
  40              	#NO_APP
  41              	.LBE31:
  42              	.LBE30:
   7:src/syscall_c.cpp ****     Riscv::w_a1((uint64) sizeInBlocks);
  43              		.loc 1 7 5 is_stmt 1
  44              	.LBB32:
  45              	.LBB33:
GAS LISTING /tmp/ccdWnPUJ.s 			page 6


 235:src/../h/riscv.hpp **** 
 236:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1() {
 237:src/../h/riscv.hpp ****     uint64 volatile a1;
 238:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 11*8(fp)" : "=r"(a1));
 239:src/../h/riscv.hpp ****     return a1;
 240:src/../h/riscv.hpp **** }
 241:src/../h/riscv.hpp **** 
 242:src/../h/riscv.hpp **** inline void Riscv::w_a1(uint64 a1) {
 243:src/../h/riscv.hpp ****     __asm__ volatile ("mv a1, %0" : : "r"(a1));
  46              		.loc 2 243 5
  47              		.loc 2 243 47 is_stmt 0
  48              	#APP
  49              	# 243 "src/../h/riscv.hpp" 1
 244              	}
  50              		mv a1, a0
  51              	# 0 "" 2
  52              	.LVL4:
  53              	#NO_APP
  54              	.LBE33:
  55              	.LBE32:
   8:src/syscall_c.cpp **** 
   9:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
  56              		.loc 1 9 5 is_stmt 1
  57              		.loc 1 9 31 is_stmt 0
  58              	#APP
  59              	# 9 "src/syscall_c.cpp" 1
  10              	
  11:src/syscall_c.cpp ****     volatile long a0;
  60              		ecall
  61              	# 0 "" 2
  62              		.loc 1 11 5 is_stmt 1
  12:src/syscall_c.cpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
  63              		.loc 1 12 5
  64              		.loc 1 12 46 is_stmt 0
  65              	# 12 "src/syscall_c.cpp" 1
  13              	    return (void *) a0;
  66              		mv a5, a0
  67              	# 0 "" 2
  68              	#NO_APP
  69 0028 2334F4FE 		sd	a5,-24(s0)
  70              		.loc 1 13 5 is_stmt 1
  71              		.loc 1 13 21 is_stmt 0
  72 002c 033584FE 		ld	a0,-24(s0)
  73              	.LVL5:
  14:src/syscall_c.cpp **** }
  74              		.loc 1 14 1
  75 0030 03348101 		ld	s0,24(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0034 13010102 		addi	sp,sp,32
  79              		.cfi_def_cfa_offset 0
  80 0038 67800000 		jr	ra
  81              		.cfi_endproc
  82              	.LFE48:
  84              		.align	2
  85              		.globl	_Z8mem_freePv
  87              	_Z8mem_freePv:
GAS LISTING /tmp/ccdWnPUJ.s 			page 7


  88              	.LFB49:
  15:src/syscall_c.cpp **** 
  16:src/syscall_c.cpp **** int mem_free(void *ptr) {
  89              		.loc 1 16 25 is_stmt 1
  90              		.cfi_startproc
  91              	.LVL6:
  92 003c 130101FE 		addi	sp,sp,-32
  93              		.cfi_def_cfa_offset 32
  94 0040 233C8100 		sd	s0,24(sp)
  95              		.cfi_offset 8, -8
  96 0044 13040102 		addi	s0,sp,32
  97              		.cfi_def_cfa 8, 0
  17:src/syscall_c.cpp ****     Riscv::w_a0(0x02);
  98              		.loc 1 17 5
  99              	.LVL7:
 100              	.LBB34:
 101              	.LBB35:
 233:src/../h/riscv.hpp **** }
 102              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
 103              		.loc 2 233 47 is_stmt 0
 104 0048 93072000 		li	a5,2
 105              	#APP
 106              	# 233 "src/../h/riscv.hpp" 1
 107              		mv a0, a5
 108              	# 0 "" 2
 109              	.LVL8:
 110              	#NO_APP
 111              	.LBE35:
 112              	.LBE34:
  18:src/syscall_c.cpp ****     Riscv::w_a1((uint64) ptr);
 113              		.loc 1 18 5 is_stmt 1
 114              	.LBB36:
 115              	.LBB37:
 243:src/../h/riscv.hpp **** }
 116              		.loc 2 243 5
 243:src/../h/riscv.hpp **** }
 117              		.loc 2 243 47 is_stmt 0
 118              	#APP
 119              	# 243 "src/../h/riscv.hpp" 1
 120              		mv a1, a0
 121              	# 0 "" 2
 122              	.LVL9:
 123              	#NO_APP
 124              	.LBE37:
 125              	.LBE36:
  19:src/syscall_c.cpp **** 
  20:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
 126              		.loc 1 20 5 is_stmt 1
 127              		.loc 1 20 31 is_stmt 0
 128              	#APP
 129              	# 20 "src/syscall_c.cpp" 1
  21              	
  22:src/syscall_c.cpp ****     volatile long a0;
 130              		ecall
 131              	# 0 "" 2
 132              		.loc 1 22 5 is_stmt 1
GAS LISTING /tmp/ccdWnPUJ.s 			page 8


  23:src/syscall_c.cpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
 133              		.loc 1 23 5
 134              		.loc 1 23 46 is_stmt 0
 135              	# 23 "src/syscall_c.cpp" 1
  24              	    return a0;
 136              		mv a5, a0
 137              	# 0 "" 2
 138              	#NO_APP
 139 005c 2334F4FE 		sd	a5,-24(s0)
 140              		.loc 1 24 5 is_stmt 1
 141              		.loc 1 24 12 is_stmt 0
 142 0060 033584FE 		ld	a0,-24(s0)
 143              	.LVL10:
  25:src/syscall_c.cpp **** }
 144              		.loc 1 25 1
 145 0064 1B050500 		sext.w	a0,a0
 146 0068 03348101 		ld	s0,24(sp)
 147              		.cfi_restore 8
 148              		.cfi_def_cfa 2, 32
 149 006c 13010102 		addi	sp,sp,32
 150              		.cfi_def_cfa_offset 0
 151 0070 67800000 		jr	ra
 152              		.cfi_endproc
 153              	.LFE49:
 155              		.align	2
 156              		.globl	_Z10toUserModev
 158              	_Z10toUserModev:
 159              	.LFB50:
  26:src/syscall_c.cpp **** 
  27:src/syscall_c.cpp **** void toUserMode(){
 160              		.loc 1 27 18 is_stmt 1
 161              		.cfi_startproc
 162 0074 130101FF 		addi	sp,sp,-16
 163              		.cfi_def_cfa_offset 16
 164 0078 23348100 		sd	s0,8(sp)
 165              		.cfi_offset 8, -8
 166 007c 13040101 		addi	s0,sp,16
 167              		.cfi_def_cfa 8, 0
  28:src/syscall_c.cpp ****     Riscv::w_a0(0x51);
 168              		.loc 1 28 5
 169              	.LVL11:
 170              	.LBB38:
 171              	.LBB39:
 233:src/../h/riscv.hpp **** }
 172              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
 173              		.loc 2 233 47 is_stmt 0
 174 0080 93071005 		li	a5,81
 175              	#APP
 176              	# 233 "src/../h/riscv.hpp" 1
 177              		mv a0, a5
 178              	# 0 "" 2
 179              	.LVL12:
 180              	#NO_APP
 181              	.LBE39:
 182              	.LBE38:
  29:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
GAS LISTING /tmp/ccdWnPUJ.s 			page 9


 183              		.loc 1 29 5 is_stmt 1
 184              		.loc 1 29 31 is_stmt 0
 185              	#APP
 186              	# 29 "src/syscall_c.cpp" 1
  30              	}
 187              		ecall
 188              	# 0 "" 2
 189              		.loc 1 30 1
 190              	#NO_APP
 191 008c 03348100 		ld	s0,8(sp)
 192              		.cfi_restore 8
 193              		.cfi_def_cfa 2, 16
 194 0090 13010101 		addi	sp,sp,16
 195              		.cfi_def_cfa_offset 0
 196 0094 67800000 		jr	ra
 197              		.cfi_endproc
 198              	.LFE50:
 200              		.align	2
 201              		.globl	_Z13thread_createPP7_threadPFvPvES2_
 203              	_Z13thread_createPP7_threadPFvPvES2_:
 204              	.LFB51:
  31:src/syscall_c.cpp **** 
  32:src/syscall_c.cpp **** int thread_create(thread_t *handle, void(*start_routine)(void *), void *arg) {
 205              		.loc 1 32 78 is_stmt 1
 206              		.cfi_startproc
 207              	.LVL13:
 208 0098 130101FD 		addi	sp,sp,-48
 209              		.cfi_def_cfa_offset 48
 210 009c 23348102 		sd	s0,40(sp)
 211              		.cfi_offset 8, -8
 212 00a0 13040103 		addi	s0,sp,48
 213              		.cfi_def_cfa 8, 0
 214 00a4 233CA4FC 		sd	a0,-40(s0)
  33:src/syscall_c.cpp **** 
  34:src/syscall_c.cpp **** 
  35:src/syscall_c.cpp ****     Riscv::w_a0(0x11);
 215              		.loc 1 35 5
 216              	.LVL14:
 217              	.LBB40:
 218              	.LBB41:
 233:src/../h/riscv.hpp **** }
 219              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
 220              		.loc 2 233 47 is_stmt 0
 221 00a8 93071001 		li	a5,17
 222              	#APP
 223              	# 233 "src/../h/riscv.hpp" 1
 224              		mv a0, a5
 225              	# 0 "" 2
 226              	.LVL15:
 227              	#NO_APP
 228              	.LBE41:
 229              	.LBE40:
  36:src/syscall_c.cpp ****     Riscv::w_a1((uint64) start_routine);
 230              		.loc 1 36 5 is_stmt 1
 231              	.LBB42:
 232              	.LBB43:
GAS LISTING /tmp/ccdWnPUJ.s 			page 10


 243:src/../h/riscv.hpp **** }
 233              		.loc 2 243 5
 243:src/../h/riscv.hpp **** }
 234              		.loc 2 243 47 is_stmt 0
 235              	#APP
 236              	# 243 "src/../h/riscv.hpp" 1
 237              		mv a1, a1
 238              	# 0 "" 2
 239              	.LVL16:
 240              	#NO_APP
 241              	.LBE43:
 242              	.LBE42:
  37:src/syscall_c.cpp ****     Riscv::w_a2((uint64) arg);
 243              		.loc 1 37 5 is_stmt 1
 244              	.LBB44:
 245              	.LBB45:
 245:src/../h/riscv.hpp **** 
 246:src/../h/riscv.hpp **** inline uint64 Riscv::r_a2() {
 247:src/../h/riscv.hpp ****     uint64 volatile a2;
 248:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 12*8(fp)" : "=r"(a2));
 249:src/../h/riscv.hpp ****     return a2;
 250:src/../h/riscv.hpp **** }
 251:src/../h/riscv.hpp **** 
 252:src/../h/riscv.hpp **** inline void Riscv::w_a2(uint64 a2) {
 253:src/../h/riscv.hpp ****     __asm__ volatile ("mv a2, %0" : : "r"(a2));
 246              		.loc 2 253 5
 247              		.loc 2 253 47 is_stmt 0
 248              	#APP
 249              	# 253 "src/../h/riscv.hpp" 1
 254              	}
 250              		mv a2, a2
 251              	# 0 "" 2
 252              	.LVL17:
 253              	#NO_APP
 254              	.LBE45:
 255              	.LBE44:
  38:src/syscall_c.cpp ****     Riscv::w_a3((uint64) &handle);
 256              		.loc 1 38 5 is_stmt 1
 257              		.loc 1 38 16 is_stmt 0
 258 00b8 930784FD 		addi	a5,s0,-40
 259              	.LVL18:
 260              	.LBB46:
 261              	.LBB47:
 255:src/../h/riscv.hpp **** 
 256:src/../h/riscv.hpp **** inline uint64 Riscv::r_a3() {
 257:src/../h/riscv.hpp ****     uint64 volatile a3;
 258:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 13*8(fp)" : "=r"(a3));
 259:src/../h/riscv.hpp ****     return a3;
 260:src/../h/riscv.hpp **** }
 261:src/../h/riscv.hpp **** 
 262:src/../h/riscv.hpp **** inline void Riscv::w_a3(uint64 a3) {
 263:src/../h/riscv.hpp ****     __asm__ volatile ("mv a3, %0" : : "r"(a3));
 262              		.loc 2 263 5 is_stmt 1
 263              		.loc 2 263 47 is_stmt 0
 264              	#APP
 265              	# 263 "src/../h/riscv.hpp" 1
 264              	}
GAS LISTING /tmp/ccdWnPUJ.s 			page 11


 266              		mv a3, a5
 267              	# 0 "" 2
 268              	.LVL19:
 269              	#NO_APP
 270              	.LBE47:
 271              	.LBE46:
  39:src/syscall_c.cpp **** 
  40:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
 272              		.loc 1 40 5 is_stmt 1
 273              		.loc 1 40 31 is_stmt 0
 274              	#APP
 275              	# 40 "src/syscall_c.cpp" 1
  41              	
  42:src/syscall_c.cpp ****     handle = (thread_t*) Riscv::r_a0();
 276              		ecall
 277              	# 0 "" 2
 278              		.loc 1 42 5 is_stmt 1
 279              	#NO_APP
 280              	.LBB48:
 281              	.LBB49:
 227:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
 282              		.loc 2 227 5
 228:src/../h/riscv.hpp ****     return a0;
 283              		.loc 2 228 5
 228:src/../h/riscv.hpp ****     return a0;
 284              		.loc 2 228 52 is_stmt 0
 285              	#APP
 286              	# 228 "src/../h/riscv.hpp" 1
 287              		ld a5, 10*8(fp)
 288              	# 0 "" 2
 289              	#NO_APP
 290 00c8 2334F4FE 		sd	a5,-24(s0)
 229:src/../h/riscv.hpp **** }
 291              		.loc 2 229 5 is_stmt 1
 229:src/../h/riscv.hpp **** }
 292              		.loc 2 229 12 is_stmt 0
 293 00cc 833784FE 		ld	a5,-24(s0)
 294              	.LBE49:
 295              	.LBE48:
  43:src/syscall_c.cpp ****     if(handle)return 0;
 296              		.loc 1 43 5 is_stmt 1
 297 00d0 638A0700 		beqz	a5,.L11
 298              		.loc 1 43 22 is_stmt 0
 299 00d4 13050000 		li	a0,0
 300              	.LVL20:
 301              	.L8:
  44:src/syscall_c.cpp ****     return -1;
  45:src/syscall_c.cpp **** 
  46:src/syscall_c.cpp **** }
 302              		.loc 1 46 1
 303 00d8 03348102 		ld	s0,40(sp)
 304              		.cfi_remember_state
 305              		.cfi_restore 8
 306              		.cfi_def_cfa 2, 48
 307              	.LVL21:
 308 00dc 13010103 		addi	sp,sp,48
 309              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccdWnPUJ.s 			page 12


 310              	.LVL22:
 311 00e0 67800000 		jr	ra
 312              	.LVL23:
 313              	.L11:
 314              		.cfi_restore_state
  44:src/syscall_c.cpp ****     return -1;
 315              		.loc 1 44 13
 316 00e4 1305F0FF 		li	a0,-1
 317              	.LVL24:
 318 00e8 6FF01FFF 		j	.L8
 319              		.cfi_endproc
 320              	.LFE51:
 322              		.align	2
 323              		.globl	_Z11thread_exitv
 325              	_Z11thread_exitv:
 326              	.LFB52:
  47:src/syscall_c.cpp **** 
  48:src/syscall_c.cpp **** int thread_exit(){
 327              		.loc 1 48 18 is_stmt 1
 328              		.cfi_startproc
 329 00ec 130101FE 		addi	sp,sp,-32
 330              		.cfi_def_cfa_offset 32
 331 00f0 233C8100 		sd	s0,24(sp)
 332              		.cfi_offset 8, -8
 333 00f4 13040102 		addi	s0,sp,32
 334              		.cfi_def_cfa 8, 0
  49:src/syscall_c.cpp ****     Riscv::w_a0(0x12);
 335              		.loc 1 49 5
 336              	.LVL25:
 337              	.LBB50:
 338              	.LBB51:
 233:src/../h/riscv.hpp **** }
 339              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
 340              		.loc 2 233 47 is_stmt 0
 341 00f8 93072001 		li	a5,18
 342              	#APP
 343              	# 233 "src/../h/riscv.hpp" 1
 344              		mv a0, a5
 345              	# 0 "" 2
 346              	.LVL26:
 347              	#NO_APP
 348              	.LBE51:
 349              	.LBE50:
  50:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
 350              		.loc 1 50 5 is_stmt 1
 351              		.loc 1 50 31 is_stmt 0
 352              	#APP
 353              	# 50 "src/syscall_c.cpp" 1
  51              	    volatile uint64 a0 = Riscv::r_a0();
 354              		ecall
 355              	# 0 "" 2
 356              		.loc 1 51 5 is_stmt 1
 357              	#NO_APP
 358              	.LBB52:
 359              	.LBB53:
 227:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
GAS LISTING /tmp/ccdWnPUJ.s 			page 13


 360              		.loc 2 227 5
 228:src/../h/riscv.hpp ****     return a0;
 361              		.loc 2 228 5
 228:src/../h/riscv.hpp ****     return a0;
 362              		.loc 2 228 52 is_stmt 0
 363              	#APP
 364              	# 228 "src/../h/riscv.hpp" 1
 365              		ld a5, 10*8(fp)
 366              	# 0 "" 2
 367              	#NO_APP
 368 0108 2330F4FE 		sd	a5,-32(s0)
 229:src/../h/riscv.hpp **** }
 369              		.loc 2 229 5 is_stmt 1
 229:src/../h/riscv.hpp **** }
 370              		.loc 2 229 12 is_stmt 0
 371 010c 833704FE 		ld	a5,-32(s0)
 372              	.LBE53:
 373              	.LBE52:
 374              		.loc 1 51 38
 375 0110 2334F4FE 		sd	a5,-24(s0)
  52:src/syscall_c.cpp ****     return a0;
 376              		.loc 1 52 5 is_stmt 1
 377              		.loc 1 52 12 is_stmt 0
 378 0114 033584FE 		ld	a0,-24(s0)
  53:src/syscall_c.cpp **** }
 379              		.loc 1 53 1
 380 0118 1B050500 		sext.w	a0,a0
 381 011c 03348101 		ld	s0,24(sp)
 382              		.cfi_restore 8
 383              		.cfi_def_cfa 2, 32
 384 0120 13010102 		addi	sp,sp,32
 385              		.cfi_def_cfa_offset 0
 386 0124 67800000 		jr	ra
 387              		.cfi_endproc
 388              	.LFE52:
 390              		.align	2
 391              		.globl	_Z15thread_dispatchv
 393              	_Z15thread_dispatchv:
 394              	.LFB53:
  54:src/syscall_c.cpp **** 
  55:src/syscall_c.cpp **** void thread_dispatch(){
 395              		.loc 1 55 23 is_stmt 1
 396              		.cfi_startproc
 397 0128 130101FF 		addi	sp,sp,-16
 398              		.cfi_def_cfa_offset 16
 399 012c 23348100 		sd	s0,8(sp)
 400              		.cfi_offset 8, -8
 401 0130 13040101 		addi	s0,sp,16
 402              		.cfi_def_cfa 8, 0
  56:src/syscall_c.cpp ****     Riscv::w_a0(0x13);
 403              		.loc 1 56 5
 404              	.LVL27:
 405              	.LBB54:
 406              	.LBB55:
 233:src/../h/riscv.hpp **** }
 407              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccdWnPUJ.s 			page 14


 408              		.loc 2 233 47 is_stmt 0
 409 0134 93073001 		li	a5,19
 410              	#APP
 411              	# 233 "src/../h/riscv.hpp" 1
 412              		mv a0, a5
 413              	# 0 "" 2
 414              	.LVL28:
 415              	#NO_APP
 416              	.LBE55:
 417              	.LBE54:
  57:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
 418              		.loc 1 57 5 is_stmt 1
 419              		.loc 1 57 31 is_stmt 0
 420              	#APP
 421              	# 57 "src/syscall_c.cpp" 1
  58              	}
 422              		ecall
 423              	# 0 "" 2
 424              		.loc 1 58 1
 425              	#NO_APP
 426 0140 03348100 		ld	s0,8(sp)
 427              		.cfi_restore 8
 428              		.cfi_def_cfa 2, 16
 429 0144 13010101 		addi	sp,sp,16
 430              		.cfi_def_cfa_offset 0
 431 0148 67800000 		jr	ra
 432              		.cfi_endproc
 433              	.LFE53:
 435              		.align	2
 436              		.globl	_Z11thread_joinP7_thread
 438              	_Z11thread_joinP7_thread:
 439              	.LFB54:
  59:src/syscall_c.cpp **** 
  60:src/syscall_c.cpp **** void thread_join(thread_t handle){
 440              		.loc 1 60 34 is_stmt 1
 441              		.cfi_startproc
 442              	.LVL29:
 443 014c 130101FF 		addi	sp,sp,-16
 444              		.cfi_def_cfa_offset 16
 445 0150 23348100 		sd	s0,8(sp)
 446              		.cfi_offset 8, -8
 447 0154 13040101 		addi	s0,sp,16
 448              		.cfi_def_cfa 8, 0
  61:src/syscall_c.cpp ****     Riscv::w_a0(0x14);
 449              		.loc 1 61 5
 450              	.LVL30:
 451              	.LBB56:
 452              	.LBB57:
 233:src/../h/riscv.hpp **** }
 453              		.loc 2 233 5
 233:src/../h/riscv.hpp **** }
 454              		.loc 2 233 47 is_stmt 0
 455 0158 93074001 		li	a5,20
 456              	#APP
 457              	# 233 "src/../h/riscv.hpp" 1
 458              		mv a0, a5
 459              	# 0 "" 2
GAS LISTING /tmp/ccdWnPUJ.s 			page 15


 460              	.LVL31:
 461              	#NO_APP
 462              	.LBE57:
 463              	.LBE56:
  62:src/syscall_c.cpp **** 
  63:src/syscall_c.cpp **** }...
 464              		.loc 1 63 1
 465 0160 03348100 		ld	s0,8(sp)
 466              		.cfi_restore 8
 467              		.cfi_def_cfa 2, 16
 468 0164 13010101 		addi	sp,sp,16
 469              		.cfi_def_cfa_offset 0
 470 0168 67800000 		jr	ra
 471              		.cfi_endproc
 472              	.LFE54:
 474              	.Letext0:
 475              		.file 3 "src/../h/../h/../lib/hw.h"
 476              		.file 4 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccdWnPUJ.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccdWnPUJ.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccdWnPUJ.s:13     .text:0000000000000000 .L0 
     /tmp/ccdWnPUJ.s:15     .text:0000000000000000 .L0 
     /tmp/ccdWnPUJ.s:16     .text:0000000000000004 .L0 
     /tmp/ccdWnPUJ.s:18     .text:0000000000000008 .L0 
     /tmp/ccdWnPUJ.s:20     .text:000000000000000c .L0 
     /tmp/ccdWnPUJ.s:22     .text:000000000000000c .L0 
     /tmp/ccdWnPUJ.s:23     .text:000000000000000c .L0 
     /tmp/ccdWnPUJ.s:26     .text:0000000000000010 .L0 
     /tmp/ccdWnPUJ.s:32     .text:0000000000000014 .L0 
     /tmp/ccdWnPUJ.s:33     .text:0000000000000014 .L0 
     /tmp/ccdWnPUJ.s:34     .text:0000000000000014 .L0 
     /tmp/ccdWnPUJ.s:46     .text:000000000000001c .L0 
     /tmp/ccdWnPUJ.s:47     .text:000000000000001c .L0 
  src/../h/riscv.hpp:243    .text:000000000000001c .L0 
     /tmp/ccdWnPUJ.s:57     .text:0000000000000020 .L0 
   src/syscall_c.cpp:9      .text:0000000000000020 .L0 
     /tmp/ccdWnPUJ.s:63     .text:0000000000000024 .L0 
     /tmp/ccdWnPUJ.s:64     .text:0000000000000024 .L0 
   src/syscall_c.cpp:12     .text:0000000000000024 .L0 
     /tmp/ccdWnPUJ.s:71     .text:000000000000002c .L0 
     /tmp/ccdWnPUJ.s:72     .text:000000000000002c .L0 
     /tmp/ccdWnPUJ.s:75     .text:0000000000000030 .L0 
     /tmp/ccdWnPUJ.s:76     .text:0000000000000034 .L0 
     /tmp/ccdWnPUJ.s:77     .text:0000000000000034 .L0 
     /tmp/ccdWnPUJ.s:79     .text:0000000000000038 .L0 
     /tmp/ccdWnPUJ.s:81     .text:000000000000003c .L0 
     /tmp/ccdWnPUJ.s:87     .text:000000000000003c _Z8mem_freePv
     /tmp/ccdWnPUJ.s:90     .text:000000000000003c .L0 
     /tmp/ccdWnPUJ.s:92     .text:000000000000003c .L0 
     /tmp/ccdWnPUJ.s:93     .text:0000000000000040 .L0 
     /tmp/ccdWnPUJ.s:95     .text:0000000000000044 .L0 
     /tmp/ccdWnPUJ.s:97     .text:0000000000000048 .L0 
     /tmp/ccdWnPUJ.s:102    .text:0000000000000048 .L0 
     /tmp/ccdWnPUJ.s:103    .text:0000000000000048 .L0 
     /tmp/ccdWnPUJ.s:104    .text:0000000000000048 .L0 
     /tmp/ccdWnPUJ.s:116    .text:0000000000000050 .L0 
     /tmp/ccdWnPUJ.s:117    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:243    .text:0000000000000050 .L0 
     /tmp/ccdWnPUJ.s:127    .text:0000000000000054 .L0 
   src/syscall_c.cpp:20     .text:0000000000000054 .L0 
     /tmp/ccdWnPUJ.s:133    .text:0000000000000058 .L0 
     /tmp/ccdWnPUJ.s:134    .text:0000000000000058 .L0 
   src/syscall_c.cpp:23     .text:0000000000000058 .L0 
     /tmp/ccdWnPUJ.s:141    .text:0000000000000060 .L0 
     /tmp/ccdWnPUJ.s:142    .text:0000000000000060 .L0 
     /tmp/ccdWnPUJ.s:145    .text:0000000000000064 .L0 
     /tmp/ccdWnPUJ.s:147    .text:000000000000006c .L0 
     /tmp/ccdWnPUJ.s:148    .text:000000000000006c .L0 
     /tmp/ccdWnPUJ.s:150    .text:0000000000000070 .L0 
     /tmp/ccdWnPUJ.s:152    .text:0000000000000074 .L0 
     /tmp/ccdWnPUJ.s:158    .text:0000000000000074 _Z10toUserModev
     /tmp/ccdWnPUJ.s:161    .text:0000000000000074 .L0 
     /tmp/ccdWnPUJ.s:162    .text:0000000000000074 .L0 
     /tmp/ccdWnPUJ.s:163    .text:0000000000000078 .L0 
GAS LISTING /tmp/ccdWnPUJ.s 			page 17


     /tmp/ccdWnPUJ.s:165    .text:000000000000007c .L0 
     /tmp/ccdWnPUJ.s:167    .text:0000000000000080 .L0 
     /tmp/ccdWnPUJ.s:172    .text:0000000000000080 .L0 
     /tmp/ccdWnPUJ.s:173    .text:0000000000000080 .L0 
     /tmp/ccdWnPUJ.s:174    .text:0000000000000080 .L0 
     /tmp/ccdWnPUJ.s:184    .text:0000000000000088 .L0 
   src/syscall_c.cpp:29     .text:0000000000000088 .L0 
     /tmp/ccdWnPUJ.s:191    .text:000000000000008c .L0 
     /tmp/ccdWnPUJ.s:192    .text:0000000000000090 .L0 
     /tmp/ccdWnPUJ.s:193    .text:0000000000000090 .L0 
     /tmp/ccdWnPUJ.s:195    .text:0000000000000094 .L0 
     /tmp/ccdWnPUJ.s:197    .text:0000000000000098 .L0 
     /tmp/ccdWnPUJ.s:203    .text:0000000000000098 _Z13thread_createPP7_threadPFvPvES2_
     /tmp/ccdWnPUJ.s:206    .text:0000000000000098 .L0 
     /tmp/ccdWnPUJ.s:208    .text:0000000000000098 .L0 
     /tmp/ccdWnPUJ.s:209    .text:000000000000009c .L0 
     /tmp/ccdWnPUJ.s:211    .text:00000000000000a0 .L0 
     /tmp/ccdWnPUJ.s:213    .text:00000000000000a4 .L0 
     /tmp/ccdWnPUJ.s:219    .text:00000000000000a8 .L0 
     /tmp/ccdWnPUJ.s:220    .text:00000000000000a8 .L0 
     /tmp/ccdWnPUJ.s:221    .text:00000000000000a8 .L0 
     /tmp/ccdWnPUJ.s:233    .text:00000000000000b0 .L0 
     /tmp/ccdWnPUJ.s:234    .text:00000000000000b0 .L0 
  src/../h/riscv.hpp:243    .text:00000000000000b0 .L0 
     /tmp/ccdWnPUJ.s:246    .text:00000000000000b4 .L0 
     /tmp/ccdWnPUJ.s:247    .text:00000000000000b4 .L0 
  src/../h/riscv.hpp:253    .text:00000000000000b4 .L0 
     /tmp/ccdWnPUJ.s:257    .text:00000000000000b8 .L0 
     /tmp/ccdWnPUJ.s:258    .text:00000000000000b8 .L0 
     /tmp/ccdWnPUJ.s:263    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:263    .text:00000000000000bc .L0 
     /tmp/ccdWnPUJ.s:273    .text:00000000000000c0 .L0 
   src/syscall_c.cpp:40     .text:00000000000000c0 .L0 
     /tmp/ccdWnPUJ.s:282    .text:00000000000000c4 .L0 
     /tmp/ccdWnPUJ.s:283    .text:00000000000000c4 .L0 
     /tmp/ccdWnPUJ.s:284    .text:00000000000000c4 .L0 
  src/../h/riscv.hpp:228    .text:00000000000000c4 .L0 
     /tmp/ccdWnPUJ.s:292    .text:00000000000000cc .L0 
     /tmp/ccdWnPUJ.s:293    .text:00000000000000cc .L0 
     /tmp/ccdWnPUJ.s:297    .text:00000000000000d0 .L0 
     /tmp/ccdWnPUJ.s:299    .text:00000000000000d4 .L0 
     /tmp/ccdWnPUJ.s:303    .text:00000000000000d8 .L0 
     /tmp/ccdWnPUJ.s:304    .text:00000000000000dc .L0 
     /tmp/ccdWnPUJ.s:305    .text:00000000000000dc .L0 
     /tmp/ccdWnPUJ.s:306    .text:00000000000000dc .L0 
     /tmp/ccdWnPUJ.s:309    .text:00000000000000e0 .L0 
     /tmp/ccdWnPUJ.s:314    .text:00000000000000e4 .L0 
     /tmp/ccdWnPUJ.s:316    .text:00000000000000e4 .L0 
     /tmp/ccdWnPUJ.s:319    .text:00000000000000ec .L0 
     /tmp/ccdWnPUJ.s:325    .text:00000000000000ec _Z11thread_exitv
     /tmp/ccdWnPUJ.s:328    .text:00000000000000ec .L0 
     /tmp/ccdWnPUJ.s:329    .text:00000000000000ec .L0 
     /tmp/ccdWnPUJ.s:330    .text:00000000000000f0 .L0 
     /tmp/ccdWnPUJ.s:332    .text:00000000000000f4 .L0 
     /tmp/ccdWnPUJ.s:334    .text:00000000000000f8 .L0 
     /tmp/ccdWnPUJ.s:339    .text:00000000000000f8 .L0 
     /tmp/ccdWnPUJ.s:340    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccdWnPUJ.s 			page 18


     /tmp/ccdWnPUJ.s:341    .text:00000000000000f8 .L0 
     /tmp/ccdWnPUJ.s:351    .text:0000000000000100 .L0 
   src/syscall_c.cpp:50     .text:0000000000000100 .L0 
     /tmp/ccdWnPUJ.s:360    .text:0000000000000104 .L0 
     /tmp/ccdWnPUJ.s:361    .text:0000000000000104 .L0 
     /tmp/ccdWnPUJ.s:362    .text:0000000000000104 .L0 
  src/../h/riscv.hpp:228    .text:0000000000000104 .L0 
     /tmp/ccdWnPUJ.s:370    .text:000000000000010c .L0 
     /tmp/ccdWnPUJ.s:371    .text:000000000000010c .L0 
     /tmp/ccdWnPUJ.s:375    .text:0000000000000110 .L0 
     /tmp/ccdWnPUJ.s:377    .text:0000000000000114 .L0 
     /tmp/ccdWnPUJ.s:378    .text:0000000000000114 .L0 
     /tmp/ccdWnPUJ.s:380    .text:0000000000000118 .L0 
     /tmp/ccdWnPUJ.s:382    .text:0000000000000120 .L0 
     /tmp/ccdWnPUJ.s:383    .text:0000000000000120 .L0 
     /tmp/ccdWnPUJ.s:385    .text:0000000000000124 .L0 
     /tmp/ccdWnPUJ.s:387    .text:0000000000000128 .L0 
     /tmp/ccdWnPUJ.s:393    .text:0000000000000128 _Z15thread_dispatchv
     /tmp/ccdWnPUJ.s:396    .text:0000000000000128 .L0 
     /tmp/ccdWnPUJ.s:397    .text:0000000000000128 .L0 
     /tmp/ccdWnPUJ.s:398    .text:000000000000012c .L0 
     /tmp/ccdWnPUJ.s:400    .text:0000000000000130 .L0 
     /tmp/ccdWnPUJ.s:402    .text:0000000000000134 .L0 
     /tmp/ccdWnPUJ.s:407    .text:0000000000000134 .L0 
     /tmp/ccdWnPUJ.s:408    .text:0000000000000134 .L0 
     /tmp/ccdWnPUJ.s:409    .text:0000000000000134 .L0 
     /tmp/ccdWnPUJ.s:419    .text:000000000000013c .L0 
   src/syscall_c.cpp:57     .text:000000000000013c .L0 
     /tmp/ccdWnPUJ.s:426    .text:0000000000000140 .L0 
     /tmp/ccdWnPUJ.s:427    .text:0000000000000144 .L0 
     /tmp/ccdWnPUJ.s:428    .text:0000000000000144 .L0 
     /tmp/ccdWnPUJ.s:430    .text:0000000000000148 .L0 
     /tmp/ccdWnPUJ.s:432    .text:000000000000014c .L0 
     /tmp/ccdWnPUJ.s:438    .text:000000000000014c _Z11thread_joinP7_thread
     /tmp/ccdWnPUJ.s:441    .text:000000000000014c .L0 
     /tmp/ccdWnPUJ.s:443    .text:000000000000014c .L0 
     /tmp/ccdWnPUJ.s:444    .text:0000000000000150 .L0 
     /tmp/ccdWnPUJ.s:446    .text:0000000000000154 .L0 
     /tmp/ccdWnPUJ.s:448    .text:0000000000000158 .L0 
     /tmp/ccdWnPUJ.s:453    .text:0000000000000158 .L0 
     /tmp/ccdWnPUJ.s:454    .text:0000000000000158 .L0 
     /tmp/ccdWnPUJ.s:455    .text:0000000000000158 .L0 
     /tmp/ccdWnPUJ.s:465    .text:0000000000000160 .L0 
     /tmp/ccdWnPUJ.s:466    .text:0000000000000164 .L0 
     /tmp/ccdWnPUJ.s:467    .text:0000000000000164 .L0 
     /tmp/ccdWnPUJ.s:469    .text:0000000000000168 .L0 
     /tmp/ccdWnPUJ.s:471    .text:000000000000016c .L0 
     /tmp/ccdWnPUJ.s:477    .text:000000000000016c .L0 
     /tmp/ccdWnPUJ.s:313    .text:00000000000000e4 .L11
     /tmp/ccdWnPUJ.s:301    .text:00000000000000d8 .L8
     /tmp/ccdWnPUJ.s:1346   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccdWnPUJ.s:2300   .debug_str:0000000000000556 .LASF100
     /tmp/ccdWnPUJ.s:2208   .debug_str:00000000000002cd .LASF101
     /tmp/ccdWnPUJ.s:2158   .debug_str:0000000000000137 .LASF102
     /tmp/ccdWnPUJ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccdWnPUJ.s:474    .text:000000000000016c .Letext0
     /tmp/ccdWnPUJ.s:2108   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/ccdWnPUJ.s 			page 19


     /tmp/ccdWnPUJ.s:2238   .debug_str:00000000000003b3 .LASF0
     /tmp/ccdWnPUJ.s:2248   .debug_str:00000000000003f7 .LASF1
     /tmp/ccdWnPUJ.s:2224   .debug_str:0000000000000344 .LASF2
     /tmp/ccdWnPUJ.s:2206   .debug_str:00000000000002c6 .LASF4
     /tmp/ccdWnPUJ.s:2280   .debug_str:00000000000004d4 .LASF3
     /tmp/ccdWnPUJ.s:2132   .debug_str:000000000000008b .LASF5
     /tmp/ccdWnPUJ.s:2252   .debug_str:000000000000041b .LASF6
     /tmp/ccdWnPUJ.s:2236   .debug_str:00000000000003a0 .LASF7
     /tmp/ccdWnPUJ.s:2306   .debug_str:000000000000063a .LASF8
     /tmp/ccdWnPUJ.s:2196   .debug_str:0000000000000270 .LASF9
     /tmp/ccdWnPUJ.s:2262   .debug_str:000000000000044d .LASF10
     /tmp/ccdWnPUJ.s:2302   .debug_str:000000000000061a .LASF11
     /tmp/ccdWnPUJ.s:2138   .debug_str:000000000000009c .LASF12
     /tmp/ccdWnPUJ.s:2116   .debug_str:000000000000002b .LASF13
     /tmp/ccdWnPUJ.s:2150   .debug_str:00000000000000fc .LASF14
     /tmp/ccdWnPUJ.s:2272   .debug_str:0000000000000488 .LASF15
     /tmp/ccdWnPUJ.s:2160   .debug_str:000000000000015a .LASF16
     /tmp/ccdWnPUJ.s:2184   .debug_str:0000000000000227 .LASF17
     /tmp/ccdWnPUJ.s:2246   .debug_str:00000000000003f1 .LASF103
     /tmp/ccdWnPUJ.s:2270   .debug_str:000000000000047d .LASF18
     /tmp/ccdWnPUJ.s:2314   .debug_str:0000000000000670 .LASF20
     /tmp/ccdWnPUJ.s:2130   .debug_str:000000000000007d .LASF19
     /tmp/ccdWnPUJ.s:2176   .debug_str:00000000000001df .LASF21
     /tmp/ccdWnPUJ.s:2288   .debug_str:0000000000000511 .LASF22
     /tmp/ccdWnPUJ.s:2114   .debug_str:0000000000000011 .LASF23
     /tmp/ccdWnPUJ.s:2118   .debug_str:000000000000003b .LASF24
     /tmp/ccdWnPUJ.s:2286   .debug_str:00000000000004fc .LASF26
     /tmp/ccdWnPUJ.s:2172   .debug_str:00000000000001ca .LASF28
     /tmp/ccdWnPUJ.s:2170   .debug_str:00000000000001b5 .LASF30
     /tmp/ccdWnPUJ.s:2282   .debug_str:00000000000004e6 .LASF25
     /tmp/ccdWnPUJ.s:2266   .debug_str:0000000000000465 .LASF27
     /tmp/ccdWnPUJ.s:2298   .debug_str:000000000000054f .LASF29
     /tmp/ccdWnPUJ.s:2292   .debug_str:0000000000000525 .LASF31
     /tmp/ccdWnPUJ.s:2190   .debug_str:0000000000000254 .LASF32
     /tmp/ccdWnPUJ.s:2162   .debug_str:0000000000000170 .LASF33
     /tmp/ccdWnPUJ.s:2112   .debug_str:0000000000000009 .LASF34
     /tmp/ccdWnPUJ.s:2200   .debug_str:0000000000000294 .LASF35
     /tmp/ccdWnPUJ.s:2180   .debug_str:000000000000020b .LASF36
     /tmp/ccdWnPUJ.s:2144   .debug_str:00000000000000c2 .LASF37
     /tmp/ccdWnPUJ.s:2320   .debug_str:00000000000006a4 .LASF38
     /tmp/ccdWnPUJ.s:2182   .debug_str:0000000000000213 .LASF39
     /tmp/ccdWnPUJ.s:2240   .debug_str:00000000000003c0 .LASF40
     /tmp/ccdWnPUJ.s:2312   .debug_str:000000000000065d .LASF41
     /tmp/ccdWnPUJ.s:2128   .debug_str:0000000000000076 .LASF42
     /tmp/ccdWnPUJ.s:2188   .debug_str:0000000000000241 .LASF43
     /tmp/ccdWnPUJ.s:2194   .debug_str:000000000000026a .LASF44
     /tmp/ccdWnPUJ.s:2296   .debug_str:000000000000053d .LASF45
     /tmp/ccdWnPUJ.s:2126   .debug_str:0000000000000070 .LASF46
     /tmp/ccdWnPUJ.s:2322   .debug_str:00000000000006ac .LASF47
     /tmp/ccdWnPUJ.s:2318   .debug_str:0000000000000699 .LASF48
     /tmp/ccdWnPUJ.s:2278   .debug_str:00000000000004bc .LASF49
     /tmp/ccdWnPUJ.s:2212   .debug_str:00000000000002f0 .LASF50
     /tmp/ccdWnPUJ.s:2222   .debug_str:000000000000032c .LASF51
     /tmp/ccdWnPUJ.s:2148   .debug_str:00000000000000f2 .LASF52
     /tmp/ccdWnPUJ.s:2202   .debug_str:00000000000002a8 .LASF53
     /tmp/ccdWnPUJ.s:2228   .debug_str:0000000000000365 .LASF54
     /tmp/ccdWnPUJ.s:2198   .debug_str:000000000000027e .LASF55
GAS LISTING /tmp/ccdWnPUJ.s 			page 20


     /tmp/ccdWnPUJ.s:2258   .debug_str:0000000000000438 .LASF56
     /tmp/ccdWnPUJ.s:2164   .debug_str:0000000000000184 .LASF57
     /tmp/ccdWnPUJ.s:2120   .debug_str:0000000000000044 .LASF58
     /tmp/ccdWnPUJ.s:2226   .debug_str:0000000000000352 .LASF59
     /tmp/ccdWnPUJ.s:2284   .debug_str:00000000000004ed .LASF60
     /tmp/ccdWnPUJ.s:2146   .debug_str:00000000000000d6 .LASF61
     /tmp/ccdWnPUJ.s:2294   .debug_str:0000000000000538 .LASF62
     /tmp/ccdWnPUJ.s:2178   .debug_str:00000000000001fa .LASF63
     /tmp/ccdWnPUJ.s:2134   .debug_str:0000000000000092 .LASF64
     /tmp/ccdWnPUJ.s:2230   .debug_str:000000000000036f .LASF65
     /tmp/ccdWnPUJ.s:2220   .debug_str:0000000000000327 .LASF66
     /tmp/ccdWnPUJ.s:2316   .debug_str:0000000000000688 .LASF67
     /tmp/ccdWnPUJ.s:2136   .debug_str:0000000000000097 .LASF68
     /tmp/ccdWnPUJ.s:2210   .debug_str:00000000000002df .LASF69
     /tmp/ccdWnPUJ.s:2254   .debug_str:000000000000042e .LASF70
     /tmp/ccdWnPUJ.s:2304   .debug_str:0000000000000629 .LASF71
     /tmp/ccdWnPUJ.s:2244   .debug_str:00000000000003ec .LASF72
     /tmp/ccdWnPUJ.s:2142   .debug_str:00000000000000b1 .LASF73
     /tmp/ccdWnPUJ.s:2256   .debug_str:0000000000000433 .LASF74
     /tmp/ccdWnPUJ.s:2274   .debug_str:000000000000049e .LASF75
     /tmp/ccdWnPUJ.s:2140   .debug_str:00000000000000ac .LASF76
     /tmp/ccdWnPUJ.s:2152   .debug_str:0000000000000108 .LASF77
     /tmp/ccdWnPUJ.s:2216   .debug_str:0000000000000306 .LASF78
     /tmp/ccdWnPUJ.s:2234   .debug_str:000000000000038c .LASF79
     /tmp/ccdWnPUJ.s:2232   .debug_str:0000000000000380 .LASF104
     /tmp/ccdWnPUJ.s:2218   .debug_str:000000000000030e .LASF105
     /tmp/ccdWnPUJ.s:2310   .debug_str:0000000000000654 .LASF80
     /tmp/ccdWnPUJ.s:2110   .debug_str:0000000000000000 .LASF81
     /tmp/ccdWnPUJ.s:2204   .debug_str:00000000000002be .LASF106
     /tmp/ccdWnPUJ.s:2174   .debug_str:00000000000001d3 .LASF82
     /tmp/ccdWnPUJ.s:2122   .debug_str:000000000000004b .LASF84
     /tmp/ccdWnPUJ.s:439    .text:000000000000014c .LFB54
     /tmp/ccdWnPUJ.s:472    .text:000000000000016c .LFE54
     /tmp/ccdWnPUJ.s:2290   .debug_str:000000000000051e .LASF90
     /tmp/ccdWnPUJ.s:451    .text:0000000000000158 .LBB56
     /tmp/ccdWnPUJ.s:463    .text:0000000000000160 .LBE56
     /tmp/ccdWnPUJ.s:1920   .debug_loc:0000000000000000 .LLST15
     /tmp/ccdWnPUJ.s:2154   .debug_str:0000000000000119 .LASF83
     /tmp/ccdWnPUJ.s:2186   .debug_str:000000000000022c .LASF85
     /tmp/ccdWnPUJ.s:394    .text:0000000000000128 .LFB53
     /tmp/ccdWnPUJ.s:433    .text:000000000000014c .LFE53
     /tmp/ccdWnPUJ.s:405    .text:0000000000000134 .LBB54
     /tmp/ccdWnPUJ.s:417    .text:000000000000013c .LBE54
     /tmp/ccdWnPUJ.s:1928   .debug_loc:0000000000000024 .LLST14
     /tmp/ccdWnPUJ.s:2124   .debug_str:0000000000000064 .LASF86
     /tmp/ccdWnPUJ.s:2250   .debug_str:000000000000040a .LASF88
     /tmp/ccdWnPUJ.s:326    .text:00000000000000ec .LFB52
     /tmp/ccdWnPUJ.s:388    .text:0000000000000128 .LFE52
     /tmp/ccdWnPUJ.s:337    .text:00000000000000f8 .LBB50
     /tmp/ccdWnPUJ.s:349    .text:0000000000000100 .LBE50
     /tmp/ccdWnPUJ.s:1936   .debug_loc:0000000000000048 .LLST13
     /tmp/ccdWnPUJ.s:358    .text:0000000000000104 .LBB52
     /tmp/ccdWnPUJ.s:373    .text:0000000000000110 .LBE52
     /tmp/ccdWnPUJ.s:2166   .debug_str:0000000000000197 .LASF87
     /tmp/ccdWnPUJ.s:2242   .debug_str:00000000000003c7 .LASF89
     /tmp/ccdWnPUJ.s:204    .text:0000000000000098 .LFB51
     /tmp/ccdWnPUJ.s:320    .text:00000000000000ec .LFE51
GAS LISTING /tmp/ccdWnPUJ.s 			page 21


     /tmp/ccdWnPUJ.s:1944   .debug_loc:000000000000006c .LLST8
     /tmp/ccdWnPUJ.s:2192   .debug_str:000000000000025c .LASF91
     /tmp/ccdWnPUJ.s:217    .text:00000000000000a8 .LBB40
     /tmp/ccdWnPUJ.s:229    .text:00000000000000b0 .LBE40
     /tmp/ccdWnPUJ.s:1975   .debug_loc:00000000000000f2 .LLST9
     /tmp/ccdWnPUJ.s:231    .text:00000000000000b0 .LBB42
     /tmp/ccdWnPUJ.s:242    .text:00000000000000b4 .LBE42
     /tmp/ccdWnPUJ.s:1983   .debug_loc:0000000000000116 .LLST10
     /tmp/ccdWnPUJ.s:244    .text:00000000000000b4 .LBB44
     /tmp/ccdWnPUJ.s:255    .text:00000000000000b8 .LBE44
     /tmp/ccdWnPUJ.s:1990   .debug_loc:0000000000000139 .LLST11
     /tmp/ccdWnPUJ.s:260    .text:00000000000000bc .LBB46
     /tmp/ccdWnPUJ.s:271    .text:00000000000000c0 .LBE46
     /tmp/ccdWnPUJ.s:1997   .debug_loc:000000000000015c .LLST12
     /tmp/ccdWnPUJ.s:280    .text:00000000000000c4 .LBB48
     /tmp/ccdWnPUJ.s:295    .text:00000000000000d0 .LBE48
     /tmp/ccdWnPUJ.s:2214   .debug_str:00000000000002fb .LASF92
     /tmp/ccdWnPUJ.s:2168   .debug_str:00000000000001a5 .LASF93
     /tmp/ccdWnPUJ.s:159    .text:0000000000000074 .LFB50
     /tmp/ccdWnPUJ.s:198    .text:0000000000000098 .LFE50
     /tmp/ccdWnPUJ.s:170    .text:0000000000000080 .LBB38
     /tmp/ccdWnPUJ.s:182    .text:0000000000000088 .LBE38
     /tmp/ccdWnPUJ.s:2004   .debug_loc:000000000000017f .LLST7
     /tmp/ccdWnPUJ.s:2264   .debug_str:000000000000045c .LASF94
     /tmp/ccdWnPUJ.s:2260   .debug_str:000000000000043f .LASF95
     /tmp/ccdWnPUJ.s:88     .text:000000000000003c .LFB49
     /tmp/ccdWnPUJ.s:153    .text:0000000000000074 .LFE49
     /tmp/ccdWnPUJ.s:2013   .debug_loc:00000000000001a4 .LLST4
     /tmp/ccdWnPUJ.s:100    .text:0000000000000048 .LBB34
     /tmp/ccdWnPUJ.s:112    .text:0000000000000050 .LBE34
     /tmp/ccdWnPUJ.s:2027   .debug_loc:00000000000001dd .LLST5
     /tmp/ccdWnPUJ.s:114    .text:0000000000000050 .LBB36
     /tmp/ccdWnPUJ.s:125    .text:0000000000000054 .LBE36
     /tmp/ccdWnPUJ.s:2035   .debug_loc:0000000000000201 .LLST6
     /tmp/ccdWnPUJ.s:2308   .debug_str:000000000000064a .LASF96
     /tmp/ccdWnPUJ.s:2156   .debug_str:0000000000000129 .LASF97
     /tmp/ccdWnPUJ.s:10     .text:0000000000000000 .LFB48
     /tmp/ccdWnPUJ.s:82     .text:000000000000003c .LFE48
     /tmp/ccdWnPUJ.s:2268   .debug_str:0000000000000478 .LASF98
     /tmp/ccdWnPUJ.s:2042   .debug_loc:0000000000000224 .LLST0
     /tmp/ccdWnPUJ.s:2276   .debug_str:00000000000004af .LASF99
     /tmp/ccdWnPUJ.s:2062   .debug_loc:0000000000000273 .LLST1
     /tmp/ccdWnPUJ.s:29     .text:0000000000000014 .LBB30
     /tmp/ccdWnPUJ.s:42     .text:000000000000001c .LBE30
     /tmp/ccdWnPUJ.s:2080   .debug_loc:00000000000002b0 .LLST2
     /tmp/ccdWnPUJ.s:44     .text:000000000000001c .LBB32
     /tmp/ccdWnPUJ.s:55     .text:0000000000000020 .LBE32
     /tmp/ccdWnPUJ.s:2088   .debug_loc:00000000000002d4 .LLST3
     /tmp/ccdWnPUJ.s:450    .text:0000000000000158 .LVL30
     /tmp/ccdWnPUJ.s:460    .text:0000000000000160 .LVL31
     /tmp/ccdWnPUJ.s:404    .text:0000000000000134 .LVL27
     /tmp/ccdWnPUJ.s:414    .text:000000000000013c .LVL28
     /tmp/ccdWnPUJ.s:336    .text:00000000000000f8 .LVL25
     /tmp/ccdWnPUJ.s:346    .text:0000000000000100 .LVL26
     /tmp/ccdWnPUJ.s:207    .text:0000000000000098 .LVL13
     /tmp/ccdWnPUJ.s:300    .text:00000000000000d8 .LVL20
     /tmp/ccdWnPUJ.s:307    .text:00000000000000dc .LVL21
GAS LISTING /tmp/ccdWnPUJ.s 			page 22


     /tmp/ccdWnPUJ.s:310    .text:00000000000000e0 .LVL22
     /tmp/ccdWnPUJ.s:312    .text:00000000000000e4 .LVL23
     /tmp/ccdWnPUJ.s:317    .text:00000000000000e8 .LVL24
     /tmp/ccdWnPUJ.s:216    .text:00000000000000a8 .LVL14
     /tmp/ccdWnPUJ.s:226    .text:00000000000000b0 .LVL15
     /tmp/ccdWnPUJ.s:239    .text:00000000000000b4 .LVL16
     /tmp/ccdWnPUJ.s:252    .text:00000000000000b8 .LVL17
     /tmp/ccdWnPUJ.s:259    .text:00000000000000bc .LVL18
     /tmp/ccdWnPUJ.s:268    .text:00000000000000c0 .LVL19
     /tmp/ccdWnPUJ.s:169    .text:0000000000000080 .LVL11
     /tmp/ccdWnPUJ.s:179    .text:0000000000000088 .LVL12
     /tmp/ccdWnPUJ.s:91     .text:000000000000003c .LVL6
     /tmp/ccdWnPUJ.s:143    .text:0000000000000064 .LVL10
     /tmp/ccdWnPUJ.s:99     .text:0000000000000048 .LVL7
     /tmp/ccdWnPUJ.s:109    .text:0000000000000050 .LVL8
     /tmp/ccdWnPUJ.s:122    .text:0000000000000054 .LVL9
     /tmp/ccdWnPUJ.s:14     .text:0000000000000000 .LVL0
     /tmp/ccdWnPUJ.s:24     .text:0000000000000010 .LVL1
     /tmp/ccdWnPUJ.s:27     .text:0000000000000014 .LVL2
     /tmp/ccdWnPUJ.s:73     .text:0000000000000030 .LVL5
     /tmp/ccdWnPUJ.s:39     .text:000000000000001c .LVL3
     /tmp/ccdWnPUJ.s:52     .text:0000000000000020 .LVL4
     /tmp/ccdWnPUJ.s:478    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
